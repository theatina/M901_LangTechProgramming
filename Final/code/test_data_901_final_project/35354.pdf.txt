Πτυχιούχος Τμήματος Πληροφορικής, Α.Π.Θ.
Διαλειτουργικότητα και Αξιοπιστία της Aλληλεπίδρασης Ευφυών Πρακτόρων στον
Επιβλέπων Καθηγητής: ΝΙΚΟΛΑΟΣ ΒΑΣΙΛΕΙΑΔΗΣ
Υποβλήθηκε στο Τμήμα Πληροφορικής του Αριστοτελείου Πανεπιστημίου Θεσσαλονίκης
Ημερομηνία προφορικής εξέτασης: 12/02/2015
Βασιλειάδης Νικόλαος, Αναπληρωτής Καθηγητής Τμ. Πληροφορικής (επιβλέπων) Βλαχάβας Ιωάννης, Καθηγητής Τμ. Πληροφορικής Τσουμάκας Γρηγόριος, Επίκουρος Καθηγητής Τμ. Πληροφορικής Βακάλη Αθηνά, Καθηγήτρια, Τμ. Πληροφορικής ΑΠΘ Βασιλειάδης Νικόλαος, Αναπλ. Καθηγητής, Τμ. Πληροφορικής 
ΑΠΘ Βλαχάβας Ιωάννης, Καθηγητής, Τμ.
Πληροφορικής ΑΠΘ Βούρος Γεώργιος, Καθηγητής, Τμ. Ψηφιακών Συστημάτων, Παν. Πειραιώς Μπικάκης Αντώνης, Lecturer, Dept. of Information Studies, Un.
College London, UK Συμεωνίδης Ανδρέας, Επίκ. Καθηγητής, Τμ.
ΗΜΜΥ ΑΠΘ Τσουμάκας Γρηγόριος, Επίκ. Καθηγητής, Τμ. Πληροφορικής ΑΠΘ
Στην οικογένεια μου
Αρχικά, θα ήθελα να εκφράσω τις βαθιές και ειλικρινείς μου ευχαριστίες στον επιβλέποντα της διδακτορικής μου διατριβής Αναπληρωτή Καθηγητή, κ.
Νικόλαο Βασιλειάδη, όχι μόνο για την εμπιστοσύνη που μου έδειξε όλα αυτά τα χρόνια αλλά και για την σταθερή και μακρά συμπαράσταση και υποστήριξη του σε κάθε μικρό ή μεγάλο ζήτημα.
Η καθοδήγηση του υπήρξε πολύτιμη και καθοριστική.
Θα ήθελα, επίσης, να ευχαριστήσω τον Καθηγητή, κ.Ιωάννη Βλαχάβα, Διευθυντή του Εργαστηρίου Γλωσσών Προγραμματισμού και Τεχνολογίας Λογισμικού του Α.Π.Θ. και μέλος της τριμελούς συμβουλευτικής μου επιτροπής, καθώς με τον τρόπο του μέσα από τις ατελείωτες συζητήσεις μας, μου δίδαξε σημαντικά μαθήματα.
Θα ήθελα ακόμη, να ευχαριστήσω τον Επίκουρο Καθηγητή, κ.
Γρηγόριο Τσουμάκα, επίσης μέλος της τριμελούς συμβουλευτικής μου επιτροπής, για τις καλές συμβουλές του, πάντοτε
Θα ήθελα, επίσης, να εκφράσω τις ευχαριστίες μου στον Ευστράτιο Κοντόπουλο, μέλος της Ομάδας Λογικού Προγραμματισμού και Ευφυών Συστημάτων για τις συζητήσεις, την συμπαράσταση και την υποστήριξη του κατά τα πρώτα χρόνια εκπόνησης τη διδακτορικής μου διατριβής.
Θα ήθελα, ακόμη, να εκφράσω τις ιδιαίτερες και βαθιές ευχαριστίες μου στην μητέρα μου, Αποστολία, για την συνεχή και ακούραστη ψυχολογική υποστήριξη της σε όλη τη διάρκεια της ζωής μου.
Εξίσου θερμές ευχαριστίες θα ήθελα να εκφράσω στον πατέρα μου, Κωνσταντίνο, τον αδερφό μου, Αθανάσιο, και τον αρραβωνιαστικό μου, Μιλτιάδη, για την απεριόριστη και σταθερή στήριξη τους.
Ευχαριστίες εκφράζονται, ακόμη, στην φίλη μου Ευανθία για την ακατάπαυστη υπομονή και αμέριστη συμπαράστασή της όλα αυτά τα χρόνια καθώς και στην φίλη μου Πασχαλιά για την κατανόηση και την βοήθεια της.
Τέλος, θα ήθελα να σημειώσω ότι μέρος των ερευνητικών αποτελεσμάτων της παρούσας διατριβής αποτέλεσε αντικείμενο των έργων «Ανάπτυξη ενός πολύ-πρακτορικού περιβάλλοντος βασισμένου στην RuleML», που χρηματοδοτήθηκε από τον επιστημονικό μη – κερδοσκοπικό οργανισμό RuleML Inc. με έδρα τον Καναδά, και «Διαλειτουργικό και βασισμένο στη Γνώση Πλαίσιο Διαπραγματευόμενων Πρακτόρων στον Σημασιολογικό Ιστό», της Δράσης «Διμερή Ε & Τ Συνεργασία Ελλάδας – Ρουμανίας 2011-2012» του Επιχειρησιακού Προγράμματος «Ανταγωνιστικότητα και Επιχειρηματικότητα» (ΕΠΑΝ-ΙΙ).
Ο Σημασιολογικός Ιστός επηρεάζει τον Παγκόσμιο Ιστό σε βάθος.
Η εξέλιξη που προωθεί αλλάζει τον τρόπο που άνθρωποι και μηχανές αντιλαμβάνονται το περιεχόμενο του και δρουν σε αυτόν.
Το όραμα του για ένα παγκόσμιο μέσο ανταλλαγής πληροφοριών θα αργήσει να γίνει απόλυτη πραγματικότητα, ωστόσο οι τεχνολογίες του Σημασιολογικού Ιστού συνεχώς ωριμάζουν.
Η μεγαλύτερη πρόκληση αφορά στην αυτοματοποιημένη χρήση του Ιστού από υπολογιστές και εφαρμογές λογισμικού, καθώς, στην πραγματικότητα, ο Ιστός είναι σχεδιασμένος να διαβάζεται από ανθρώπους.
Σε αυτό το πλαίσιο, απώτερο όραμα του Σημασιολογικού Ιστού αποτελεί η ανάθεση πολύπλοκων και μη εργασιών στους ευφυείς πράκτορες.
Οι ευφυείς πράκτορες έχουν την δυνατότητα να δρουν στο περιβάλλον του Ιστού και να ανταποκρίνονται στα αιτήματα των χρηστών τους, αποτελεσματικά και χωρίς ανθρώπινη παρέμβαση.
Έτσι, μέσω της χρήσης τους, οι άνθρωποι όχι μόνο θα διευκολυνθούν αισθητά στην καθημερινότητα τους αλλά και ολόκληροι τομείς, όπως αυτός του ηλεκτρονικού εμπορίου, της αναζήτησης και διατήρησης πληροφοριών, ακόμη και της υγείας
Φυσικά, η σταδιακή εξέλιξη και εδραίωση του Σημασιολογικού Ιστού και, κατ’ επέκταση, των ευφυών πρακτόρων εγείρει μια σειρά νέων ζητημάτων, όπως αυτό της εμπιστοσύνης και της διαλειτουργικότητας.
Άλλωστε, οι ευφυείς πράκτορες, πρακτικά, αποτελούν εκπρόσωπο των χρηστών τους, έχοντας την λογική και τις ικανότητες τους.
Έτσι, οι ευφυείς πράκτορες οργανώνονται σε κοινότητες, τα πολυπρακτορικά συστήματα, όπως ακριβώς και οι άνθρωποι, με αποτέλεσμα να αντιμετωπίζουν πολλά από τα ζητήματα των ανθρώπινων κοινωνιών.
Σε αυτό το πλαίσιο, η παρούσα διατριβή μελετά την δράση των Ευφυών Πρακτόρων στον Σημασιολογικό Ιστό και επιχειρεί να αντιμετωπίσει μια σειρά τέτοιων καίριων ζητημάτων.
Η έρευνα επικεντρώθηκε στην αξιοπιστία και την διαλειτουργικότητα της αλληλεπίδρασης και της ανταλλαγής δεδομένων και γνώσης των πολυπρακτορικών συστημάτων στο περιβάλλον του Σημασιολογικού Ιστού.
Ειδικότερα, μελετήθηκαν και αναπτύχθηκαν νέες εκφραστικές και ευέλικτες δομές, μεθοδολογίες και συστήματα.
Αρχικά, δεδομένου του εύρους των πολυπρακτορικών εργαλείων και συστημάτων, η παρούσα διατριβή παρουσιάζει μια εκτενή έρευνα και συγκριτική μελέτη των δημοφιλέστερων συστημάτων, προτείνοντας μια σειρά κατηγοριοποιήσεων τους.
Παράλληλα, προτείνονται ορισμένα καθολικά κριτήρια σύγκρισης και αξιολόγησης, προκειμένου να αντιμετωπιστεί το ζήτημα της χρήσης μιας ποικιλίας κριτηρίων από έρευνα σε έρευνα, γεγονός που καθιστά την σύγκριση των ευρημάτων της επιστημονικής κοινότητας απαγορευτική.
Η συμβολή της διατριβής συνεχίζει με την πρόταση και υλοποίηση ενός πρωτότυπου πολυπρακτορικού συστήματος Σημασιολογικού Ιστού, που ονομάζεται EMERALD και ενισχύει την διαλειτουργικότητα μεταξύ των πρακτόρων.
Το σύστημα παρέχει πλήθος δυνατοτήτων, μεταξύ των οποίων η παροχή υπηρεσιών συλλογιστικής και εξαγωγής συμπερασμάτων για διάφορες λογικές / συλλογιστικές και η διάθεση ενός γενικού προτύπου για την δημιουργία παραμετροποιήσιμων ευφυών πρακτόρων, που ονομάζεται KC-Agents.
Στην συνέχεια της διατριβής, μελετάται η διαχείριση της αλληλεπίδρασης των ευφυών πρακτόρων στον Σημασιολογικό Ιστό, όπου προτείνονται δύο πρωτότυπες, ανεξάρτητες συστήματος, μεθοδολογίες.
Η πρώτη ονομάζεται K-SWAN και αφορά την διαχείριση των πρωτοκόλλων και των στρατηγικών αλληλεπίδρασης των ευφυών πρακτόρων μέσω κανόνων.
Η μεθοδολογία αυτή είναι επαναχρησιμοποιήσιμη και επιτρέπει την ανεξαρτητοποίηση των δημόσιων, φανερών πρωτοκόλλων αλληλεπίδρασης από τις κρυφές, ιδιωτικές στρατηγικές των ευφυών πρακτόρων, προωθώντας τον αυτοματισμό και την μείωση της πολυπλοκότητας και του προγραμματιστικού κόστους.
Η δεύτερη μεθοδολογία αφορά την διαχείριση της ροής εργασιών των ηλεκτρονικών συμβολαίων, που συνάπτουν οι ευφυείς πράκτορες, μέσω πολιτικών.
Η μεθοδολογία αυτή αντιμετωπίζει όλες τις πτυχές ενός ηλεκτρονικού συμβολαίου, από την αρχική εδραίωση εμπιστοσύνης μεταξύ των συμμετεχόντων έως την τελική αποδοχή ενώ, παράλληλα, προσφέρει μεθόδους για την αξιολόγηση της απόδοσης του συμβολαίου και της στρατηγικής που χρησιμοποιεί κάθε πράκτορας.
Η διατριβή συμβάλει, επιπρόσθετα, στο ιδιαίτερα σημαντικό ζήτημα της εμπιστοσύνης και της αξιοπιστίας στο περιβάλλον των πολυπρακτορικών συστημάτων.
Στο πλαίσιο αυτό, προτείνει την σχεδίαση και υλοποίηση πέντε νέων, πρωτότυπων υβριδικών μοντέλων αξιοπιστίας.
Τρία από αυτά τα μοντέλα, που ονομάζονται SERM, T-REX και HARM ακολουθούν τις αρχές της κεντρικής προσέγγισης ενώ τα υπόλοιπα δύο, που ονομάζονται DRM και DISARM, ακολουθούν τις αρχές της κατανεμημένης προσέγγισης.
Τα μοντέλα αυτά, παρά τις διαφορές στην μεθοδολογία και τις μετρικές που προτείνουν, επιτρέπουν στους ευφυείς πράκτορες να επιλέγουν, κατά περίπτωση, τους καλύτερους δυνατούς εταίρους.
Τέλος, η συμβολή της διατριβής κλείνει με το ζήτημα της διασύνδεσης και της διαλειτουργικότητας των πολυπρακτορικών συστημάτων, όπου προτείνονται μέθοδοι διασύνδεσης του συστήματος EMERALD τόσο με άλλα συστήματα όσο και με υπηρεσίες ιστού, ενισχύοντας την εξωστρέφεια του.
Σε αυτό το πλαίσιο, δεδομένης της ετερογένειας στο χώρο, μελετώνται και προτείνονται πιθανές μέθοδοι διαλειτουργικότητας, η βέλτιστη εκ των οποίων επιλέγεται για την διασύνδεση του συστήματος EMERALD με ένα άλλο κλειστό σύστημα, που ονομάζεται Rule Responder.
Επιπλέον, το σύστημα EMERALD διασυνδέεται με την τεχνολογία των υπηρεσιών ιστού, καθιστώντας δυνατή την κλήση πρακτορικών υπηρεσιών μέσω του Ιστού. 2 Αναπαράσταση Γνώσης και Εξαγωγή Συμπερασμάτων στον Σημασιολογικό Ιστό
Υπηρεσίες Αναζήτησης Βασισμένων στην Αξιοπιστία των Υπηρεσιών
5 Διαχείριση Αλληλεπίδρασης Ευφυών Πρακτόρων στον Σημασιολογικό Ιστό .. 125
Διαχείριση Πρωτοκόλλων και Στρατηγικών Αλληλεπίδρασης Πρακτόρων
Διαχείριση Ροής Εργασιών Ηλεκτρονικών Συμβολαίων μέσω Πολιτικών 139
Πίνακας 3.7.
Κατηγοριοποίηση πλατφορμών σύμφωνα με την γλώσσα Πίνακας 3.8.
Κατηγοριοποίηση πλατφορμών σύμφωνα με την συμμόρφωση στα Πίνακας 3.9.
Κατηγοριοποίηση πλατφορμών σύμφωνα με το πεδίο εφαρμογής τους.
Πίνακας 3.10.
Κατηγοριοποίηση πλατφορμών σύμφωνα με την υποστήριξη Πίνακας 5.2. (α) Τα πλέον διαπραγματευόμενα ζητήματα – (β) προτεινόμενα Πίνακας 6.1.
Οι παράμετροι των πειραμάτων αξιολόγησης για τα μοντέλα Πίνακας 7.1.
Μέθοδοι επικοινωνίας και διασύνδεσης πολυπρακτορικών Πίνακας 7.2.
Εννοιολογική σύγκριση μεταξύ των συστημάτων EMERALD και Rule Πίνακας 7.4.
Απαιτήσεις και προτιμήσεις του χρήστη για την εφαρμογή της
Ο Παγκόσμιος Ιστός ξεκίνησε, το 1989, από έναν Βρετανό επιστήμονα του CERN, τον Tim Berners-Lee.
Αρχικά, σχεδιάστηκε και αναπτύχθηκε για να ικανοποιήσει την ζήτηση για την αυτόματη ανταλλαγή πληροφοριών μεταξύ των επιστημόνων στα πανεπιστήμια και τα ινστιτούτα σε ολόκληρο τον κόσμο.
Σήμερα, είναι, αναμφισβήτητα, ένα τεράστιο οικοδόμημα πληροφοριών, που περιλαμβάνει τέσσερα στάδια ανάπτυξης [Mills, 2009].
Το πρώτο στάδιο, αποτελούσε ένα δίκτυο συνδεδεμένων πληροφοριών (Web of Shared Information), ενώ το τρέχον δεύτερο στάδιο αποτελεί ένα δίκτυο συνδεδεμένων ανθρώπων (Social Web).
Το τρίτο στάδιο (Semantic Web), που έχει ήδη ξεκινήσει, πρόκειται να συνδέσει την γνώση, ενώ το τέταρτο (Intelligent Web) θα έρθει αργότερα και θα αποτελέσει ένα δίκτυο συνδεδεμένης νοημοσύνης, όπου οι άνθρωποι και οι μηχανές θα μπορούν να επικοινωνούν μεταξύ τους και να διεκπεραιώνουν απρόσκοπτα εργασίες, εξάγοντας αυτόματα συμπεράσμα-
Στην πραγματικότητα, σήμερα ο Ιστός βρίσκεται μεταξύ της ανθρωποκεντρικής προσέγγισης του και της σταδιακής εξέλιξης του σε έναν μηχανοκεντρικό ιστό, τον λεγόμενο Σημασιολογικό Ιστό.
Ο Σημασιολογικός Ιστός στοχεύει στην αυτοματοποίηση της κατανόησης του περιεχομένου του παγκόσμιου ιστού και της αποτελεσματικής ικανοποίησης των αιτημάτων των χρηστών.
Σε αυτή την προσπάθεια, οι ευφυείς πράκτορες (intelligent agents), ένας από τους πιο πρόσφατους και με μεγάλο ενδιαφέρον τομείς της Τεχνητής Νοημοσύνης, βοηθούν με την εκτέλεση πολύπλοκων ενεργειών για λογαριασμό των χρηστών τους.
Πέρα όμως από την βοήθεια προς τους ανθρώπους – χρήστες του ιστού, οι ευφυείς πράκτορες φαίνεται να είναι ο συνδετικός κρίκος μεταξύ της εδραίωσης του Σημασιολογικού Ιστού και της μετεξέλιξης του στον Ευφυή Ιστό, τον λεγόμενο πρακτοροκεντρικό.
Σε αυτό το πλαίσιο, στόχος της παρούσας διατριβής είναι η μελέτη του Σημασιολογικού Ιστού και των Ευφυών Πρακτόρων, με απώτερο στόχο την έρευνα και ανάπτυξη μεθοδολογιών που θα ενισχύσουν την αποτελεσματική συνεργασία μεταξύ των πρακτόρων που αλληλεπιδρούν στον Σημασιολογικό Ιστό.
Ο Σημασιολογικός Ιστός [Berners-Lee et al., 2001] είναι, ουσιαστικά, μια ραγδαία εξελισσόμενη επέκταση του Παγκόσμιου Ιστού, με απώτερο στόχο την εξέλιξη του σε ένα παγκόσμιο μέσο ανταλλαγής δεδομένων, πληροφοριών και γνώσεων όχι μόνο για τους ανθρώπους αλλά και για τις μηχανές.
Για να γίνει πραγματικότητα αυτός ο στόχος, πρέπει οι χρήστες του Ιστού να βρίσκουν, να μοιράζονται και να συνδυάζουν πληροφορίες πιο εύκολα και με
Aλληλεπίδρασης Ευφυών Πρακτόρων στον Σημασιολογικό Ιστό υψηλή ακρίβεια.
Όταν αυτοί οι χρήστες είναι άνθρωποι, η διαδικασία είναι πιο εύκολη, δεδομένου ότι οι άνθρωποι είναι σε θέση να χρησιμοποιούν τον ιστό χωρίς βοήθεια.
Οι μηχανές, όμως, δεν μπορούν να ολοκληρώσουν εργασίες εντελώς αυτόματα, χωρίς ανθρώπινη παρέμβαση, καθώς ο ιστός είναι σχεδιασμένος να διαβάζεται από ανθρώπους και όχι από υπολογιστές και εφαρμογές λογισμικού.
Σε αυτό το πλαίσιο, ο Σημασιολογικός Ιστός προάγει μία μορφή πληροφορίας, η οποία μπορεί να γίνει κατανοητή και να χρησιμοποιηθεί και από μηχανές, έτσι ώστε να αναλαμβάνουν οι ίδιοι οι υπολογιστές τις τετριμμένες ή πολύπλοκες εργασίες για λογαριασμό των ανθρώπων – χρηστών τους.
Τέτοιου είδους κατανόηση και δράση, ωστόσο, απαιτεί οι πληροφορίες να έχουν μία σημασιολογική δομή.
Στην πραγματικότητα, το περιεχόμενο του ιστού μπορεί να επαναχρησιμοποιηθεί για την διευθέτηση και επίλυση ποικίλων ζητημάτων, αρκεί να είναι εμπλουτισμένο με σημασιολογικά μεταδεδομένα, δηλαδή με νόημα [Antoniou & van Harmelen, 2008].
Μέχρι σήμερα, οι θεμελιώδεις τεχνολογίες του Σημασιολογικού Ιστού, όπως η αναπαράσταση περιεχομένου και οι οντολογίες, έχουν ήδη καθιερωθεί.
Επομένως, οι ερευνητές εστιάζουν, πλέον, την προσοχή τους σε άλλους τομείς, όπως αυτοί της λογικής (logic), της συλλογιστικής (reasoning) και των αποδείξεων (proof).
Ήδη, η αρχική διείσδυση του Σημασιολογικού Ιστού έχει αρχίσει να αλλάζει τον τρόπο που οι άνθρωποι ικανοποιούν τα αιτήματα τους, εξοικονομώντας χρόνο και χρήμα.
Οι αρχές του Σημασιολογικού Ιστού, άλλωστε, ορίζουν ότι δεδομένα, πληροφορίες εφαρμογών και συστήματα από διαφορετικά πεδία θα συνδέονται μεταξύ τους, δημιουργώντας μια μεγάλη βάση προσπελάσιμη από τους υπολογιστές και τις εφαρμογές τους.
Σήμερα, οι επιδράσεις αυτής της διείσδυσης είναι περισσότερο εμφανείς στα κοινωνικά δίκτυα, ωστόσο πεδία τα οποία επηρεάζονται εξίσου σημαντικά, είναι, για παράδειγμα, η υγεία, η παιδεία και οι επιχειρήσεις.
Σε αυτά τα πεδία, υπάρχουν ήδη πολλές προσπάθειες από εταιρίες, ερευνητές και μη κερδοσκοπικές οργανώσεις για την δημιουργία πρότυπων οντολογιών, με απώτερο στόχο την ύπαρξη κοινών γλωσσών και επομένως καλύτερης σύνδεσης και ερμηνείας των δεδομένων.
Ωστόσο, το όραμα του Σημασιολογικού Ιστού θα αργήσει να γίνει απόλυτη πραγματικότητα.
Ο Σημασιολογικός Ιστός εξακολουθεί να εξελίσσεται, υπάρχουσες τεχνολογίες του συγκεκριμενοποιούνται και ωριμάζουν ενώ νέες έρχονται στο προσκήνιο.
H Κοινοπραξία του Παγκόσμιου Ιστού (World Wide Web Consortium – W3C), o οργανισμός που καθοδηγεί την ανάπτυξη του Ιστού μέσα από την δημιουργία προτύπων, προτείνει συνεχώς βελτιώσεις, τροποποιήσεις αλλά και δημιουργία τέτοιων τεχνολογιών.
Σε αυτό το πλαίσιο, ο Tim Berners-Lee έχει προτείνει μέχρι σήμερα τέσσερις εκδόσεις της αρχιτεκτονικής του Σημασιολογικού Ιστού (Εικόνα 1.1.), σε μια προσπάθεια να επικαιροποιήσει την εξέλιξη στο χώρο.
Η αρχική έκδοση της αρχιτεκτονικής του παρουσιάστηκε το 2000 [Berners-Lee, 2000], έχοντας μια διαστρωματική οργάνωση, που επέτρεπε την ανάπτυξη του Σημασιολογικού Ιστού σε βήματα, δημιουργώντας έτσι έναν αριθμό από διακριτά μεταξύ τους επίπεδα.
Η διαστρωματική οργάνωση παρέμεινε, ωστόσο, η αρχιτεκτονική επικαιροποιήθηκε διαδοχικά το 2003 [Berners-Lee, 2003;
Berners-Lee, 2003b] και το 2005 [Berners-Lee, 2005], φτάνοντας στην τελευταία έκδοση της, που παρουσιάστηκε το 2006 κατά την διάρκεια του συνεδρίου AΑAI2006 [Berners-Lee, 2006].
Η Εικόνα 1.2 απεικονίζει μια τρισδιάστατη οπτικοποίηση αυτής της τελευταίας έκδοσης της διαστρωματικής αρχιτεκτονικής του Σημασιολογικού Ιστού, που επιτρέπει την καλύτερη κατανόηση της, καθώς οι τεχνολογίες κάθε επίπεδου συνδέονται με το πλαίσιο στο οποίο ανήκουν [Nowack, 2009].
Πιο συγκεκριμένα, στο κατώτερο επίπεδο βρίσκεται η ίδια η πλατφόρμα του Ιστού, που περιλαμβάνει το καθιερωμένο πρότυπο κωδικοποίησης χαρακτήρων Unicode, τα Ενιαία Αναγνωριστικά Πόρων (Uniform Resource Identifiers – URIs), το Πρωτόκολλο Μεταφοράς Υπερκειμένου (HyperText Transfer Protocol – HTTP) και την Γλώσσα Σήμανσης Υπερκειμένου (HyperText Markup Language – HTML).
Στο αμέσως επόμενο επίπεδο βρίσκεται το συντακτικό, με τεχνολογίες όπως οι RDFa, XML (Extensible Markup Language) και JSON (JavaScript Object Notation), που χρησιμοποιούνται για την αναπαράσταση μεταδεδομένων.
Το επίπεδο αυτό, όπως είναι φυσικό, στηρίζει το επόμενο που αφορά την αναπαράσταση της γνώσης, όπου επιτυγχάνεται η διασύνδεση των μεταδεδομένων με την χρήση του μοντέλου RDF (Resource Description Framework).
Συνεχίζοντας πιο πάνω, εντοπίζεται η σημασιολογία (Semantics) και οι κανόνες (Rules).
Το επίπεδο της σημασιολογίας εστιάζει στον διαμοιρασμό κοινών λεξικών ορολογίας, κάνοντας χρήση προηγμένων γλωσσών αναπαράστασης γνώσης, όπως οι RDFS (RDF Schema) και OWL (Web Ontology Language), ενώ το επίπεδο των κανόνων εστιάζει στην ανταλλαγή κανόνων μεταξύ των εφαρμογών, χρησιμοποιώντας γλώσσες όπως η RIF (Rule Interchange Format) και η RuleML.
Παράλληλα με αυτά τα επίπεδα κινείται και το επίπεδο των ερωτημάτων (Query), το οποίο επίσης στηρίζει ζητήματα σημασιολογίας.
Τα επόμενα επίπεδα, στα οποία εστιάζει και η παρούσα διατριβή, είναι ιδιαίτερα σημαντικά καθώς αποτελούν σύγχρονο αντικείμενο μελέτης.
Το επίπεδο της λογικής (Logic) στοχεύει στην συνένωση της σημασιολογίας όλων των μοντέλων που υποστηρίζονται στα κατώτερα επίπεδα, δηλαδή, για παράδειγμα, των RDF/S, OWL, RIF και SPARQL.
Τα επίπεδα των αποδείξεων (Proof) και της εμπιστοσύνης (Trust) βρίσκονται ακόμη στην αρχή της ερευνητικής τους πορείας.
Οι τεχνολογίες και οι μηχανισμοί αυτών των επιπέδων αναμένεται να έχουν καίριο ρόλο στην εφαρμογή του Σημασιολογικού Ιστού, δεδομένου ότι η ύπαρξη πλήθους ευφυών εφαρμογών και πρακτόρων θα απαιτεί μηχανισμούς αιτιολόγησης και επεξήγησης των αποτελεσμάτων που θα προκύπτουν αλλά και εκτίμησης της αξιοπιστίας όλων όσων συμβαίνουν στον Ιστό.
Τέλος, το επίπεδο των εφαρμογών αποτελεί το κορυφαίο επίπεδο, καθώς πρόκειται, ουσιαστικά, για το αποτέλεσμα όλης της προσπάθειας.
Όσο, οι τεχνολογίες του Σημασιολογικού Ιστού ωριμάζουν τόσο βελτιώνονται και οι δυνατότητες εφαρμογών.
Σήμερα, ένα παράδειγμα τέτοιας εφαρμογής αποτελεί το υπολογιστικό νέφος ανοικτών συνδεδεμένων δεδομένων (Linked Open Data Cloud).
Ευφυείς Πράκτορες στον Σημασιολογικό Ιστό Όταν το όραμα του Σημασιολογικού Ιστού υλοποιηθεί, πολλές καθημερινές συνήθειες θα αλλάξουν ριζικά.
Οι εφαρμογές και τα συστήματα των ηλεκτρονικών υπολογιστών θα ενσωματώνονται εύκολα στην καθημερινή ζωή μας, παρέχοντας υπηρεσίες και πληροφορίες, οπουδήποτε και οποιαδήποτε στιγμή.
Ωστόσο, το απώτερο όραμα του Σημασιολογικού Ιστού είναι να παρέχει στους χρήστες την δυνατότητα ανάθεσης πολύπλοκων εργασιών στους ευφυείς πράκτορες [Hendler, 2001;
Antoniou & van Harmelen, 2008], oι οποίοι δρώντας στο διαλειτουργικό και πληροφοριακά πλούσιο περιβάλλον του Ιστού, θα μπορούν να ανταποκριθούν αποτελεσματικά και χωρίς επιτήρηση στα αιτήματα των χρηστών τους, σε ποικίλες εφαρμογές της πραγματικής ζωής, αντανακλώντας τις ιδιαίτερες ανάγκες και προτιμήσεις τους.
Έτσι, μέσω της χρήσης των ευφυών πρακτόρων, τα προγράμματα οργανώνονται με τέτοιο τρόπο ώστε να ασκούν τα καθήκοντά τους πιο αποτελεσματικά και με λιγότερη ανθρώπινη παρέμβαση.
Η σταδιακή ενσωμάτωση των πολυπρακτορικών συστημάτων με την τεχνολογία του Σημασιολογικού Ιστού θα επηρεάσει δραματικά την χρήση του ίδιου του Ιστού στο μέλλον, καθώς η χρήση των ευφυών πρακτόρων συνεχώς θα αυξάνεται.
Πηγαίνοντας πέρα από τους ανιχνευτές ιστού (Web crawlers) των μηχανών αναζήτησης και τους μεμονωμένους πράκτορες πληροφοριών, η επόμενη γενιά των εργαλείων του Ιστού θα περιλαμβάνει ομάδες ευφυών πρακτόρων που θα επικοινωνούν και θα συναλλάσσονται μεταξύ τους διασχίζοντας τον Ιστό.
Τα οφέλη της χρήσης των ευφυών πρακτόρων για την αυτοματοποίηση πολύπλοκων εργασιών θα είναι, πράγματι, σημαντικά [Serenko et al., 2007], δεν είναι όμως τα μόνα.
Για παράδειγμα, στην πραγματικότητα, οι άνθρωποι αρέσκονται στο να εκτελούν απλές εργασίες, καθώς τους παρέχει την αίσθηση της επιτυχίας.
Ωστόσο, όταν αυτές οι απλές εργασίες γίνονται επαναλαμβανόμενες, οι άνθρωποι κουράζονται.
Όταν, όμως, τις εργασίες τις αναλαμβάνουν οι πράκτορες, αποδεσμεύονται και ασχολούνται με εργασίες που θεωρούν περισσότερο σημαντικές [Haag, 2006].
Έτσι, οι ευφυείς πράκτορες δεν είναι χρήσιμοι μόνο για τις πολύπλοκες εργασίες αλλά και για τις επαναλαμβανόμενες ακόμη και αν αυτές είναι απλές.
Η χρήση των ευφυών πρακτόρων στον Σημασιολογικό Ιστό, όμως, θα επιφέρει ακόμα μεγαλύτερες αλλαγές.
Για παράδειγμα, θα μεταμορφώσει, τον τομέα του ηλεκτρονικού εμπορίου.
Καθώς, οι πράκτορες έχουν την ικανότητα να διασχίζουν και να εξερευνούν τον Ιστό γρήγορα, θα είναι σε θέση να αναγνωρίζουν τις καλύτερες διαθέσιμες προσφορές και να τις παρουσιάζουν στον χρήστη τους σε δευτερόλεπτα.
Επομένως, οι άνθρωποι δεν θα χρειάζεται να περιηγούνται μόνοι τους σε πολυάριθμες ιστοσελίδες, χάνοντας χρόνο και ίσως χρήματα, δεδομένου ότι δεν θα είναι πάντα σε θέση να εντοπίσουν την καλύτερη για αυτούς προσφορά.
Αυτή η διαδικασία, βέβαια, αυξάνει τον ανταγωνισμό των τιμών, μετατρέποντας το ηλεκτρονικό εμπόριο σε μια απόλυτα ανταγωνιστική αγορά, επιβαρύνοντας τις επιχειρήσεις.
Η επίδραση, ωστόσο, των ευφυών πρακτόρων στο ηλεκτρονικό εμπόριο είναι αναπόφευκτη.
Σε αυτό το πλαίσιο, η παρούσα διατριβή μελετά, μεταξύ άλλων, αυτή την επίδραση, προτείνοντας αρχές και μεθοδολογίες που θα ενισχύσουν τα οφέλη των εμπλεκομένων μερών, μέσα από την διαπραγμάτευση και την σύναψη συμβολαίων.
Από την άλλη πλευρά βέβαια, υπάρχει και το κρίσιμο ζήτημα της εμπιστοσύνης.
Παρά τα οφέλη, κάποιοι χρήστες είναι πιθανό να μην αισθάνονται άνετα στο να αναθέσουν εξ ολοκλήρου σημαντικές εργασίες σε εφαρμογές λογισμικού, όπως είναι οι πράκτορες.
Όμως, οι ευφυείς πράκτορες δρώντας για λογαριασμό των χρηστών τους, οργανώνονται σε κοινότητες, τα πολυπρακτορικά συστήματα, έχοντας κατά κάποιο τρόπο τις ικανότητες και την λογική των χρηστών τους.
Αυτό που πρέπει να γίνει κατανοητό, επομένως, είναι ότι οι ευφυείς πράκτορες δεν είναι ακόμα μια εφαρμογή λογισμικού αλλά ένας νέος, διαφορετικός τρόπος αλληλεπίδρασης.
Όπως, όμως, στην πραγματική ζωή υπάρχουν όλων των ειδών οι άνθρωποι, έτσι και στα πολυπρακτορικά συστήματα υπάρχουν όλων των ειδών οι πράκτορες.
Θα πρέπει, επομένως, η τεχνολογία των ευφυών πρακτόρων να εξασφαλίσει αφενός την ιδιωτικότητα κάθε χρήστη και αφετέρου να διασφαλίσει ότι όλοι οι πράκτορες θα ενθαρρύνονται να δρουν έντιμα προς το συμφέρον των χρηστών τους.
Πράγματι, ο τομέας της εμπιστοσύνης και της αξιοπιστίας είναι ένας ενεργός τομέας της ερευνητικής κοινότητας των ευφυών πρακτόρων.
Η παρούσα διατριβή, επίσης, επιχειρεί να συμβάλλει σε αυτή την προσπάθεια μέσα από την σχεδίαση και ανάπτυξη μοντέλων αξιοπιστίας για τα πολυπρακτορικά συστήματα που δρουν στον Σημασιολογικό Ιστό.
Η συμβολή, επομένως, των ευφυών πρακτόρων στο περιβάλλον του Σημασιολογικού Ιστού και η επίδραση τους στην καθημερινότητα των ανθρώπων – χρηστών τους είναι αδιαμφισβήτητη και ουσιώδης.
Αυτό που λείπει, ωστόσο, είναι ο ακριβής προσδιορισμός της έννοιας του ευφυούς πράκτορα.
Κάθε πεδίο έρευνας έχει τις δικές του απαιτήσεις, με αποτέλεσμα τα χαρακτηριστικά που είναι σημαντικά για κάθε περίπτωση να διαφέρουν, καθιστώντας εξαιρετικά δύσκολη την υιοθέτηση ενός γενικού ορισμού.
Αντί ορισμού, βέβαια, υπάρχει μια γενική συμφωνία για την έννοια της αυτονομίας (autonomy), η οποία αποτελεί καθοριστικό στοιχείο στην θεώρηση ενός πράκτορα.
Αυτονομία είναι η ικανότητα ενός πράκτορα να δρα χωρίς ανθρώπινη παρέμβαση και εποπτεία.
Με άλλα λόγια, αυτονομία είναι η ικανότητα ενός πράκτορα να ελέγχει τόσο την εσωτερική του κατάσταση όσο και την συμπεριφορά του, αξιολογώντας, κατά περίπτωση, τα διαθέσιμα δεδομένα και δρώντας σύμφωνα με αυτά.
Από την άλλη πλευρά, όμως, ένας πράκτορας δεν έχει τον απόλυτο έλεγχο του περιβάλλοντος του.
Συνήθως, μπορεί να το επηρεάζει αλλά όχι να το ελέγχει.
Πρακτικά, αυτό σημαίνει ότι ένας πράκτορας, εάν εκτελέσει την ίδια ενέργεια κάτω από τις ίδιες συνθήκες, είναι πιθανό να λάβει διαφορετικά αποτελέσματα.
Με άλλα λόγια, οι πράκτορες, όντας αυτόνομες οντότητες, ανεξάρτητα από τους στόχους τους και το πεδίο δράσης τους, οφείλουν να είναι προετοιμασμένοι για κάθε ενδεχόμενο.
Σύμφωνα, λοιπόν, με έναν παλιό αλλά καλό ορισμό, πράκτορας είναι μια αλληλεπιδραστική οντότητα, μέσα σε ένα κοινό με άλλους πράκτορες περιβάλλον, όπου αντιδρά και ενεργεί με έναν δυναμικό (proactive) ή αντιδραστικό (reactive) τρόπο, σύμφωνα με μια κοινή μορφή αναπαράστασης και επικοινωνίας [Flores-Mendez, 1999].
Η αυτονομία, η προσαρμοστικότητα και η αντιδραστικότητα είναι, επομένως, μεταξύ των στοιχείων εκείνων που διαφοροποιούν τους ευφυείς πράκτορες από τα υπόλοιπα προγράμματα, καθιστώντας τους ιδιαίτερα χρήσιμους για τον χώρο του Σημασιολογικού Ιστού.
Η προσαρμοστικότητα, άλλωστε, περιγράφει την ικανότητα ενός πράκτορα να μαθαίνει και να βελτιώνεται μέσω της εμπειρίας ενώ, παράλληλα, η αντιδραστικότητα περιγράφει την ικανότητα ενός πράκτορα να αντιλαμβάνεται και να ενεργεί επιλεκτικά [Wooldridge, 2009].
Στην πραγματικότητα, οι ευφυείς πράκτορες βρίσκονται σε μια συνεχή πορεία αλληλεπίδρασης με το περιβάλλον και τους υπόλοιπους πράκτορες που δρουν σε αυτό.
Παρόλα αυτά, δεν είναι ρεαλιστικό να θεωρηθεί ότι όλοι αυτοί οι πράκτορες που πρέπει να επικοινωνούν, μοιράζονται έναν κοινό φορμαλισμό για τους κανόνες και την λογική τους.
Ούτε, η Κοινοπραξία του Παγκόσμιου Ιστού (W3C) είναι σε θέση να επιβάλει συγκεκριμένους φορμαλισμούς σε ένα δυναμικό περιβάλλον όπως ο Ιστός.
Ωστόσο, οι πράκτορες θα πρέπει με κάποιο τρόπο να επικοινωνούν και να καταλαβαίνουν ο ένας τον άλλο, δεδομένου ότι σε διαφορετική περίπτωση η χρησιμότητα τους θα είναι ανύπαρκτη.
Παρά, λοιπόν, τα πολλαπλά οφέλη που παρουσιάζει η τεχνολογία των ευφυών πρακτόρων, η ετερογένεια σε τεχνολογίες αναπαράστασης και συλλογιστικής αποτελούν ένα κρίσιμο μειονέκτημα για την διαλειτουργικότητα τους και, εν τέλει, την επιβίωση τους.
Αυτό το σημαντικό ζήτημα αποτελεί, επίσης, ένα από τα αντικείμενα μελέτης της παρούσας διατριβής.
Δομή και Συμβολή της Διατριβής Η παρούσα διατριβή μελετά την δράση και την αλληλεπίδραση των Ευφυών Πρακτόρων στον Σημασιολογικό Ιστό.
Κεντρικό αντικείμενο μελέτης αποτελεί η αξιοπιστία και η διαλειτουργικότητα στην αλληλεπίδραση και την ανταλλαγή δεδομένων και γνώσης των πολυπρακτορικών συστημάτων στο περιβάλλον του Σημασιολογικού Ιστού.
Σε αυτό το πλαίσιο, η έρευνα επικεντρώθηκε στην ανάπτυξη νέων εκφραστικών και ευέλικτων δομών, μεθοδολογιών και συστημάτων για την ενίσχυση της αξιόπιστης, αποτελεσματικής και αποδοτικής συνεργασίας των ευφυών πρακτόρων.
Το επόμενο κεφάλαιο (δεύτερο), καθώς και μέρος του τρίτου κεφαλαίου, αποτελεί επισκόπηση του θεωρητικού υποβάθρου της διατριβής.
Συγκεκριμένα, το δεύτερο κεφάλαιο αφορά στην αναπαράσταση γνώσης και στην εξαγωγή συμπερασμάτων στον Σημασιολογικό Ιστό.
Στο κεφάλαιο αυτό, αρχικά, γίνεται αναφορά στα δεδομένα και τα μεταδεδομένα, καθώς και στις οντολογίες και τις γλώσσες τους, όπως είναι το πλαίσιο περιγραφής πόρων RDF, η γλώσσα περιγραφής λεξιλογίου RDF Schema και η πρότυπη γλώσσα οντολογιών ιστού OWL.
Στην συνέχεια, μελετώνται τα συστήματα κανόνων, τα οποία διακρίνονται σε δύο κατηγορίες, τα συστήματα παραγωγής και τα συστήματα εξαγωγής συμπερασμάτων.
Ιδιαίτερη έμφαση δίνεται στο πεδίο της λογικής και της εξαγωγής συμπερασμάτων, καθώς οι κανόνες και η λογική αποτελούν κομβικά στοιχεία για την επίτευξη των στόχων του Σημασιολογικού Ιστού.
Συγκεκριμένα, γίνεται αναφορά στην συνεπαγωγική λογική (deductive logic), που αποτελεί την βάση για την ανάπτυξη των πολυπρακτορικών συστημάτων, ενώ, στην συνέχεια, περιγράφεται η αναιρέσιμη λογική (defeasible logic) καθώς και η επέκταση της, η χρονική (temporal) αναιρέσιμη λογική.
Τόσο η αναιρέσιμη λογική όσο και η χρονική αναιρέσιμη λογική αποτελούν σημαντικά εργαλεία στην προσπάθεια για περισσότερο ρεαλιστικά πολυπρακτορικά συστήματα, καθώς επιτρέπουν την ανάπτυξη εξελιγμένων και περισσότερο αυτοματοποιημένων συστημάτων.
Τέλος, μελετώνται οι γλώσσες κανόνων, με έμφαση στις κυριότερες προτεινόμενες γλώσσες κανόνων του Σημασιολογικού Ιστού RuleML, RIF και SWRL, που χρησιμοποιούνται στα πλαίσια της παρούσας διατριβής για την ανάπτυξη διαλειτουργικών μεθοδολογιών αλληλεπίδρασης πρακτόρων και πολύ-
Το τρίτο κεφάλαιο αφορά στα ευφυή πολυπρακτορικά συστήματα.
Σε αυτό το κεφάλαιο γίνεται, αρχικά, μια σύντομη αναφορά στις κυριότερες αρχιτεκτονικές, γλώσσες και πρωτόκολλα επικοινωνίας ευφυών πρακτόρων που έχουν καθιερωθεί στον χώρο, ολοκληρώνοντας την επισκόπηση του θεωρητικού υποβάθρου.
Στην συνέχεια, δεδομένου του εύρους των πολυπρακτορικών εργαλείων και συστημάτων, η παρούσα διατριβή επιχειρεί να συμβάλει στην καλύτερη κατανόηση τους μέσω μιας εκτενούς έρευνας και συγκριτικής μελέτης.
Συγκεκριμένα, παρουσιάζονται υποσχόμενες περιπτώσεις εργαλείων και συστημάτων που μπορούν να χρησιμοποιηθούν σήμερα για ερευνητικούς ή εμπορικούς σκοπούς, καλύπτοντας την ανάγκη για μια ενημερωμένη επισκόπηση του τομέα.
Η σύγκριση και η αξιολόγηση των πολυπρακτορικών συστημάτων αποτελεί, ωστόσο, επίπονη διαδικασία, καθώς η ερευνητική κοινότητα χρησιμοποιεί μια ποικιλία κριτηρίων, τα οποία συνήθως διαφέρουν από έρευνα σε έρευνα, μην επιτρέποντας την σύγκριση των ευρημάτων.
Για την αντιμετώπιση αυτού του ζητήματος, το τρίτο κεφάλαιο της διατριβής μελετά και προτείνει ορισμένα καθολικά κριτήρια σύγκρισης και αξιολόγησης, τα οποία χρησιμοποιούνται στην παρούσα διατριβή και θα μπορούσαν να χρησιμοποιηθούν σε μελλοντικές μελέτες.
Τέλος, το κεφάλαιο κλείνει, προτείνοντας μια σειρά κατηγοριοποιήσεων, οι οποίες καταδεικνύουν ποια εργαλεία και συστήματα παρουσιάζουν παρόμοια χαρακτηριστικά, επιτρέποντας σε κάθε ενδιαφερόμενο ερευνητή να αποφασίσει ποια περίπτωση καλύπτει καλύτερα τις ανάγκες του/της [Kravari & Bassiliades, 2015a].
Τα επόμενα τέσσερα κεφάλαια συνεχίζουν με την αναλυτική παρουσίαση των πεδίων πρωτότυπης συμβολής της παρούσας διατριβής.
Συγκεκριμένα, το τέταρτο κεφάλαιο προτείνει ένα πρωτότυπο πολυπρακτορικό σύστημα Σημασιολογικού Ιστού, που ονομάζεται EMERALD [Kravari et al., 2009b;
Το σύστημα αυτό είναι ένα νέο ευέλικτο πλαίσιο για ευφυείς πράκτορες, όπου, μεταξύ άλλων, προκαθορισμένοι πράκτορες μπορούν να υλοποιούν εξαγωγή συμπερασμάτων για διάφορες λογικές / συλλογιστικές, με την χρήση κατάλληλων μηχανισμών εξαγωγής συμπερασμάτων.
Η προσέγγιση αυτή επιτρέπει στους ευφυείς πράκτορες να επικοινωνούν και να αλληλεπιδρούν ακόμη και όταν δεν χρησιμοποιούν τους ίδιους φορμαλισμούς λογικής / συλλογιστικής, αντιμετωπίζοντας ένα από τα σημαντικότερα ζητήματα διαλειτουργικότητας στον χώρο των ευφυών πρακτόρων.
Η ανάπτυξη της προσέγγισης παρουσιάζεται στην αρχή του κεφαλαίου, όπου μελετώνται και προτείνονται υπηρεσίες συνεπαγωγικής και αναιρέσιμης συλλογιστικής, καθώς και μια υπηρεσία επαλήθευσης αποδείξεων [Kravari et al., 2009a;
Οι υπηρεσίες αυτές προσφέρουν ένα εύρος επιλογών στο περιβάλλον και, επομένως, διαλειτουργικότητα μεταξύ των πρακτόρων που δρουν σε
Στην συνέχεια του τετάρτου κεφαλαίου, προτείνεται το πρότυπο KC-Agents, ένα γενικό πρότυπο για την δημιουργία παραμετροποιήσιμων ευφυών πρακτόρων.
Η προσέγγιση αυτού του προτύπου προσφέρει μια σειρά πλεονεκτημάτων, που αφορούν, μεταξύ άλλων, τμηματική διαμόρφωση (modularity), επαναχρησιμοποίηση (reusability) και διαλειτουργικότητα (interoperability) της γνώσης μεταξύ των ευφυών πρακτόρων.
Το πρότυπο KCAgents αποτελείται από ένα πρακτορικό μοντέλο, προηγμένες υπηρεσίες καταλόγου και μια βιβλιοθήκη εξωτερικών μεθόδων.
Πιο συγκεκριμένα, προτείνεται το μοντέλο KC Model, σύμφωνα με το οποίο κάθε ευφυής πράκτορας είναι εξοπλισμένος με μια μηχανή κανόνων και μια βάση γνώσης που περιέχει την στρατηγική του και την γνώση του για το περιβάλλον.
Δεδομένης της ευελιξίας του μοντέλου, αλλάζοντας την βάση γνώσης ενός πράκτορα αλλάζει αντίστοιχα τόσο η στρατηγική του όσο και η γνώση που κατέχει.
Η προσέγγιση αυτή επιτρέπει την επαναχρησιμοποίηση των ευφυών πρακτόρων, επιτρέποντας τους να συμμετέχουν σε πλήθος περιπτώσεων χρήσης, καθώς είναι δυνατός ο μερικός ή ολικός επαναπροσδιορισμός της γνώσης και της συμπεριφοράς τους χωρίς πρόσθετο προγραμματιστικό κόστος.
Επιπρόσθετα, προτείνονται προηγμένες υπηρεσίες σημασιολογικού καταλόγου και αναζήτησης, καθώς και υπηρεσίες αναζήτησης βασισμένων στην αξιοπιστία των υπηρεσιών, οι οποίες επιτρέπουν στους ευφυείς πράκτορες που δρουν στο περιβάλλον να εντοπίζουν κατάλληλους συνεργάτες, αποκομίζοντας το μέγιστο δυνατό όφελος.
Το κεφάλαιο κλείνει με σύντομη αναφορά στους μηχανισμούς εμπιστοσύνης και αξιοπιστίας που προτείνονται για χρήση στο σύστημα καθώς και την πρόταση μιας γραφικής διεπαφής χρήστη, που ενοποιεί όλες τις παρεχόμενες λειτουργίες, επιτρέποντας στον άνθρωπο – χρήστη να παρακολουθεί την δράση των ευφυών πρακτόρων.
Το επόμενο κεφάλαιο (πέμπτο) αφορά στην διαχείριση της αλληλεπίδρασης των ευφυών πρακτόρων στον Σημασιολογικό Ιστό.
Συγκεκριμένα, το πέμπτο κεφάλαιο προτείνει πρότυπες μεθοδολογίες για την διαχείριση των πρωτοκόλλων και των στρατηγικών αλληλεπίδρασης των ευφυών πρακτόρων μέσω κανόνων και την διαχείριση της ροής εργασιών των ηλεκτρονικών συμβολαίων που συνάπτουν οι ευφυείς πράκτορες μέσω πολιτικών.
Για την διαχείριση των πρωτοκόλλων και των στρατηγικών προτείνεται η μεθοδολογία KSWAN, η οποία αναπτύχθηκε στα πλαίσια του έργου «Διαλειτουργικό και βασισμένο στη Γνώση Πλαίσιο Διαπραγματευόμενων Πρακτόρων στον Σημασιολογικό Ιστό», της Δράσης «Διμερή Ε & Τ Συνεργασία Ελλάδας – Ρουμανίας 2011-2012» του Επιχειρησιακού Προγράμματος «Ανταγωνιστικότητα και Επιχειρηματικότητα» (ΕΠΑΝ-ΙΙ).
Η μεθοδολογία K-SWAN βασίζεται σε κανόνες, είναι επαναχρησιμοποιήσιμη και εύκολα κατανοητή από τον χρήστη [Kravari et al., 2013b].
Η προσέγγιση αυτή προωθεί τον αυτοματισμό στην δράση των ευφυών πρακτόρων, επιτρέποντας την ανεξαρτητοποίηση των ιδιωτικών-κρυφών στρατηγικών από τα δημόσια-φανερά πρωτόκολλα αλληλεπίδρασης, μειώνοντας αισθητά την πολυπλοκότητα και το προγραμματιστικό κόστος.
Για την διαχείριση της ροής εργασιών των ηλεκτρονικών συμβολαίων, προτείνεται μια μεθοδολογία η οποία βασίζεται σε πολιτικές, είναι ανεξάρτητη κάποιου συγκεκριμένου συστήματος, και αντιμετωπίζει όλες τις πτυχές ενός ηλεκτρονικού συμβολαίου, από την αρχική εδραίωση εμπιστοσύνης μεταξύ των συμμετεχόντων έως την τελική αποδοχή και συμφωνία [Kravari et al., 2010d].
Επιπλέον, η μεθοδολογία προσφέρει μεθόδους για την αξιολόγηση τόσο της συνολικής απόδοσης όσο και της στρατηγικής που χρησιμοποιεί κάθε πράκτορας, γεγονός που επιτρέπει στους συμμετέχοντες να μελετήσουν τόσο την δική τους συμπεριφορά όσο και των υπολοίπων, προκειμένου να βελτιωθούν στο μέλλον.
Η προσέγγιση αυτή παρέχει σημαντικά οφέλη όσον αφορά στην διαλειτουργικότητα, στην αυτοματοποίηση, στην επαναχρησιμοποίηση και στην αποτελεσματικότητα της σύναψης επικερ-
Στην συνέχεια, το έκτο κεφάλαιο πραγματεύεται το ιδιαίτερα σημαντικό ζήτημα της εμπιστοσύνης και της αξιοπιστίας στα πολυπρακτορικά συστήματα.
Στον χώρο των ευφυών πρακτόρων, όπως και στον πραγματικό κόσμο, υπάρχουν αξιόπιστοι και μη εταίροι.
Επιπλέον, η πλειονότητα των συναλλαγών γίνεται μεταξύ αγνώστων, με αποτέλεσμα κάθε λήψη απόφασης να ενέχει κίνδυνο.
Επομένως, η επιτυχία ενός πράκτορα είναι πιθανό να εξαρτηθεί από την ικανότητά του να επιλέξει αξιόπιστους εταίρους.
Σε αυτό το πλαίσιο, το έκτο κεφάλαιο της διατριβής προτείνει την σχεδίαση και υλοποίηση νέων, πρωτότυπων υβριδικών μοντέλων αξιοπιστίας, που επιτρέπουν στους ευφυείς πράκτορες να λάβουν καλύτερες αποφάσεις, επιλέγοντας τους καλύτερους δυνατούς εταίρους.
Αρχικά, μελετώνται οι αρχές της κεντρικής προσέγγισης και προτείνονται τρία τέτοια μοντέλα, το SERM [Kravari et al., 2010b;
Kravari & Bassiliades, 2012b], το T-REX [Kravari et al., 2010a] και το HARM [Kravari & Bassiliades, 2012a].Τα μοντέλα αυτά συνδυάζουν τόσο την άμεση προσωπική εμπειρία (των συμμετεχόντων πρακτόρων σε συναλλαγές) όσο και τις διαθέσιμες μαρτυρίες τρίτων με τρόπους που εξασφαλίζουν την βέλτιστη απόδοση της πραγματικής φήμης ενός πράκτορα.
Στην συνέχεια, μελετώνται οι αρχές της κατανεμημένης προσέγγισης και προτείνονται τα μοντέλα DRM [Kravari et al., 2010b;
Kravari & Bassiliades, 2012b] και DISARM [Kravari & Bassiliades, 2015b].
Τα μοντέλα αυτά επιχειρούν, επιπλέον, να διασφαλίσουν ότι οι ευφυείς πράκτορες, που τα χρησιμοποιούν, θα λάβουν την βέλτιστη για αυτούς απόφαση παρά τις όποιες αντικειμενικές δυσκολίες εντοπισμού αναφορών.
Στην πραγματικότητα, κάθε ένα από τα πέντε προτεινόμενα μοντέλα χρησιμοποιεί διαφορετικές τεχνολογίες και μεθοδολογία, για παράδειγμα το μοντέλο HARM βασίζεται στην χρονική αναιρέσιμη λογική.
Ωστόσο όλα είναι σε θέση να συλλάβουν τις προτιμήσεις και τις ιδιαιτερότητες κάθε ευφυούς πράκτορα ξεχωριστά, οδηγώντας σε λογικά και ρεαλιστικά συμπεράσματα.
Τέλος, μελετώνται άλλες παρόμοιες προσεγγίσεις μοντέλων, οι οποίες συγκρίνονται με τα μοντέλα της παρούσας διατριβής.
Το έβδομο κεφάλαιο της διατριβής πραγματεύεται το ζήτημα της διασύνδεσης και της διαλειτουργικότητας των πολυπρακτορικών συστημάτων.
Παρότι, αρκετά πολυπρακτορικά εργαλεία και συστήματα είναι σήμερα διαθέσιμα, συνήθως είναι απομονωμένα μεταξύ τους, καθώς οι οργανωτικές αρχές και οι αρχιτεκτονικές τους, ως επί το πλείστον, διαφέρουν.
Επιπλέον, οι ευφυείς πράκτορες που δρουν σε αυτά τα συστήματα συνήθως υιοθετούν διαφορετικούς φορμαλισμούς λογικής και κανόνων.
Αυτή η ετερογένεια αποτελεί ένα κρίσιμο μειονέκτημα για την διαλειτουργικότητα των ευφυών πρακτόρων.
Σε αυτό το πλαίσιο, το έβδομο κεφάλαιο μελετά και προτείνει μεθόδους για την διασύνδεση του συστήματος EMERALD, που προτάθηκε στην παρούσα διατριβή, με το σύστημα Rule Responder, που αναπτύχθηκε από τον οργανισμό RuleML Inc., και τις υπηρεσίες ιστού.
Η διασύνδεση των συστημάτων EMERALD και Rule Responder χρηματοδοτήθηκε από τον επιστημονικό μη – κερδοσκοπικό οργανισμό RuleML Inc. με έδρα τον Καναδά, στα πλαίσια του έργου «Ανάπτυξη ενός πολύ-πρακτορικού περιβάλλοντος βασισμένου στην RuleML», ενώ η διασύνδεση του συστήματος EMERALD με τις υπηρεσίες ιστού αποτέλεσε αντικείμενο του έργου «Διαλειτουργικό και βασισμένο στη Γνώση Πλαίσιο Διαπραγματευόμενων Πρακτόρων στον Σημασιολογικό Ιστό», της Δράσης «Διμερή Ε & Τ Συνεργασία Ελλάδας – Ρουμανίας 20112012» του Επιχειρησιακού Προγράμματος «Ανταγωνιστικότητα και Επιχειρηματικότητα» (ΕΠΑΝ-ΙΙ).
Συγκεκριμένα, στην αρχή του εβδόμου κεφαλαίου μελετώνται τα συστήματα EMERALD και Rule Responder και ορίζονται οι πιθανές μέθοδοι διαλειτουργικότητας με βάση τον τύπο της επικοινωνίας και τις προϋποθέσεις κάθε συστήματος.
Έπειτα, προτείνεται και αναπτύσσεται η βέλτιστη από αυτές τις μεθόδους για την διασύνδεση των συστημάτων, καταδεικνύοντας πώς μπορούν δύο κλειστά πολυπρακτορικά συστήματα να συνεργαστούν [Kravari et al., 2011c, Kravari et al., 2012c].
Η μέθοδος που προτείνεται υιοθετεί μια προσέγγιση δηλωτικής φύσης, η οποία βασίζεται στην γνώση και αποτελεί αντιπροσωπευτικό δείγμα γενικής μεθόδου, που μπορεί να χρησιμοποιηθεί για την διασύνδεση τέτοιων συ-
Στην συνέχεια του εβδόμου κεφαλαίου, μελετάται το σύστημα EMERALD και οι υπηρεσίες ιστού, σε ένα γενικό εννοιολογικό πλαίσιο για αυτοματοποιημένη διαπραγμάτευση πρακτόρων.
Στόχος σε αυτή την περίπτωση είναι η επέκταση των διαθέσιμων εργαλείων έτσι ώστε να καλυφθεί τόσο η εννοιολογική όσο και η τεχνολογική έλλειψη διαλειτουργικότητας που παρατηρείται μεταξύ ευφυών πρακτόρων και υπηρεσιών ιστού στον Σημασιολογικό Ιστό.
Εννοιολογικά, οι υπηρεσίες ιστού, σε αντίθεση με τους ευφυείς πράκτορες, παρουσιάζουν έλλειψη αυτονομίας, κοινωνικών δεξιοτήτων και ικανότητας προσαρμογής.
Τεχνολογικά, τα πολυπρακτορικά συστήματα αναπτύσσονται με την χρήση εξειδικευμένων πακέτων, παρέχοντας συνήθως τις υπηρεσίες τους μόνο στην πλατφόρμα υλοποίησης τους.
Σε αυτό πλαίσιο, το έβδομο κεφάλαιο προτείνει μια προσέγγιση, όπου οι υπάρχουσες τεχνολογίες του συστήματος EMERALD διασυνδέονται με την τεχνολογία των υπηρεσιών ιστού, καθιστώντας δυνατή την κλήση πρακτορικών υπηρεσιών μέσω του Ιστού.
Συγκεκριμένα, προτείνεται ένα σύστημα που βασίζεται στην γνώση [Bădică et al., 2013;
Bădică et al., 2014], επέκταση του EMERALD, το οποίο είναι σε θέση να παρέχει υπηρεσίες συλλογιστικής με την μορφή υπηρεσιών ιστού (web services).
Η προτεινόμενη προσέγγιση παρότι υλοποιείται σε συγκεκριμένο πεδίο εφαρμογής, θα μπορούσε να χρησιμοποιηθεί με μικρές τροποποιήσεις σε διάφορα συστήματα και πεδία.
Συγκριτικό πλεονέκτημα της προσέγγισης είναι το γεγονός ότι η υιοθέτηση της επιτρέπει την επαναχρησιμοποίηση της γνώσης, υπό την μορφή δηλωτικών κανόνων, όσον αφορά τους περιορισμούς, τις απαιτήσεις και τις ιδιαιτερότητες κάθε πεδίου εφαρμογής.
Τέλος, το όγδοο και τελευταίο κεφάλαιο ολοκληρώνει την διατριβή.
Συγκεκριμένα, συνοψίζει την συμβολή της παρούσας διατριβής, όπως αυτή παρουσιάστηκε αναλυτικά στα προηγούμενα κεφάλαια, ενώ μελετά και προτείνει πιθανές μελλοντικές κατευθύνσεις για έρευνα και επεκτάσεις στα πεδία που εξετάστηκαν.
Στο πλαίσιο εκπόνησης της παρούσας διατριβής, μέρος των ερευνητικών της αποτελεσμάτων δημοσιεύτηκε σε ερευνητικές εργασίες επιστημονικών περιοδικών, συνεδρίων και κεφαλαίων σε βιβλία, όπως παρατίθενται αναλυτικά στο Παράρτημα Ε. 2 2 Αναπαράσταση Γνώσης και Εξαγωγή Συμπερα-σμάτων στον Σημασιολογικό Ιστό
Η αναπαράσταση της γνώσης και η εξαγωγή συμπερασμάτων στον Σημασιολογικό Ιστό είναι ένα ιδιαίτερα σημαντικό ζήτημα.
Η διαθέσιμη στον Ιστό πληροφορία και γνώση είναι απαραίτητο να κωδικοποιηθεί με τρόπο κατάλληλο σε μία πιο δομημένη και αυστηρά ορισμένη μορφή.
Απώτερος στόχος είναι αυτή η πληροφορία και η γνώση να καταστεί προσβάσιμη και κατανοητή για τους ευφυείς πράκτορες, οι οποίοι με την σειρά τους θα μπορούν να δρουν ελεύθερα και αποδοτικά στον Σημασιολογικό Ιστό, εκπληρώνοντας τον λόγο ύπαρξης τους.
Για το σκοπό αυτό, έχουν προταθεί και χρησιμοποιούνται τόσο γλώσσες οντολογιών, όπως οι RDFS και OWL, όσο και γλώσσες κανόνων, όπως οι RuleML, RIF και SWRL.
Ο συνδυασμός αυτών των δύο επιπέδων, δηλαδή των σημασιολογικών δεδομένων, από την μία, και της λογικής και των κανόνων από την άλλη, επιτρέπει την εξαγωγή συμπερασμάτων στο περιβάλλον του Σημασιολογικού Ιστού [Berners-Lee et al., 2001].
Αυτή η εξαγωγή συμπερασμάτων μέσω κατάλληλων συστημάτων και μεθοδολογιών, όπως αυτές που προτείνονται στην παρούσα διατριβή, είναι δυνατό να αυτοματοποιηθεί, ενισχύοντας την διαλειτουργικότητα και την αποτελεσματικότητα των ευφυών πρακτόρων στον Σημα-
Σε αυτό το πλαίσιο, στο παρόν κεφάλαιο της διατριβής γίνεται, αρχικά, σύντομη αναφορά στα δεδομένα και τα μεταδεδομένα, που αποτελούν την βάση του Ιστού, καθώς και στις οντολογίες και τις γλώσσες τους, που επιτρέπουν την αναπαράσταση της σημασίας (ή σημασιολογίας) της γνώσης που σχετίζεται με αυτά τα δεδομένα.
Στην συνέχεια, μελετώνται τα συστήματα κανόνων, τα οποία διακρίνονται σε συστήματα παραγωγής και εξαγωγής συμπερασμάτων.
Επιπλέον, μελετώνται ζητήματα λογικής και εξαγωγής συμπερασμάτων, όπου περιγράφονται η συνεπαγωγική λογική, η αναιρέσιμη και η χρονική αναιρέσιμη λογική.
Τέλος, το κεφάλαιο ολοκληρώνεται με την μελέτη γλωσσών κανόνων, όπως είναι η RIF, η RuleML και η SWRL.
Ειδικότερα, η RuleML και η Reaction RuleML αποτελούν ιδιαίτερο αντικείμενο μελέτης, καθώς χρησιμοποιούνται στην συνέχεια της διατριβής.
Δεδομένα και Μεταδεδομένα Με την εξέλιξη του Σημασιολογικού Ιστού είναι γεγονός ότι τo κέντρο βάρους του περιεχομένου του Ιστού μετατοπίζεται συνεχώς από τον άνθρωπο προς τα δεδομένα.
Είναι σαφές ότι τα δεδομένα αυτά πρέπει να είναι απευθείας προσπελάσιμα και επεξεργάσιμα από τις μηχανές, ωστόσο, το κυριότερο είναι η σημασιολογία των δεδομένων να είναι ρητά δηλωμένη και προσπελάσιμη, καθώς μόνο τότε θα είναι κατανοητά από αυτές.
Με άλλο λόγια, είναι απαραίτητη η ύπαρξη πληροφοριών για τα δεδομένα, δηλαδή μεταδεδομένων
Σε αυτό το πλαίσιο, η διαδικασία της μετατροπής της πληροφορίας σε σημασιολογική είναι δυνατή μέσω ενός πλαισίου περιγραφής, όπως το RDF.
Το RDF (Resource Description Framework) συνήθως αποκαλείται γλώσσα, όμως στην πραγματικότητα είναι ένα μοντέλο δεδομένων.
Ειδικότερα, το πλαίσιο περιγραφής διαδικτυακών πόρων RDF είναι ένα μοντέλο για την περιγραφή μεταδεδομένων που αφορούν τους πόρους του Ιστού.
Παραδείγματα τέτοιων πληροφοριών (μεταδεδομένων) είναι ο τίτλος ή η ημερομηνία τελευταίας ενημέρωσης μιας ιστοσελίδας ή ακόμη και η άδεια χρήσης ενός εγγράφου στο διαδίκτυο.
Σημαντικό πλεονέκτημα του RDF αποτελεί η δυνατότητα που παρέχει για αναπαράσταση πληροφοριών όχι μόνο υπαρκτών πόρων αλλά ακόμη και εικονικών, έστω και αν δεν είναι εφικτή ή άμεση η ανάκτηση τους.
Ένα τέτοιο παράδειγμα είναι οι πληροφορίες για προϊόντα διαθέσιμα μέσω των ηλεκτρικών καταστημάτων (όπως πληροφορίες για την τιμή και την διαθεσιμότητα τους) [Antoniou & van Harmelen, 2008].
Το RDF είναι ανεξάρτητο πεδίου χρήσης και προορίζεται, κυρίως, για τις περιπτώσεις εκείνες, όπου τις πληροφορίες τις επεξεργάζονται εφαρμογές και όχι άνθρωποι.
Σε αυτό το πλαίσιο, το RDF έχει καταστήσει εφικτή την ανταλλαγή πληροφοριών μεταξύ εφαρμογών χωρίς απώλεια νοήματος, καθώς αποτελεί κοινό πλαίσιο εργασίας (common framework) για αυτές.
Αποτέλεσμα είναι να μπορούν οι ίδιες πληροφορίες να είναι διαθέσιμες και σε εφαρμογές πολύ διαφορετικές από αυτές για τις οποίες είχαν αρχικά δημιουργηθεί.
Το RDF, δηλαδή, είναι μία «γλώσσα» γενικής χρήσης, που επιτρέπει στους χρήστες να περιγράφουν πόρους, χρησιμοποιώντας το δικό τους λεξιλόγιο.
Παρόλα αυτά, το RDF δεν μπορεί να κάνει συμπερασμούς για οποιοδήποτε πεδίο εφαρμογών, ούτε μπορεί να προσδιορίσει την σημασιολογία οποιουδήποτε πεδίου.
Αυτό είναι θέμα του χρήστη να το κάνει μέσω του RDF Schema (RDFS).
Τέλος, ένα παράδειγμα RDF πληροφοριών (σε N-Triples συντακτικό), όπου ο David Billington προσδιορίζεται ως ιδιοκτήτης της ιστοσελίδας «http://www.cit.gu.edu.au/~db» είναι το εξής:
Οντολογίες και Γλώσσες Οντολογιών Η χρήση μεταδεδομένων είναι απαραίτητη αλλά όχι αρκετή, καθώς πρέπει όχι μόνο να καθορίζεται η σημασιολογία των δεδομένων αλλά και να εξάγεται επαρκής γνώση από αυτή.
Σε αυτό το πλαίσιο, μια σημαντική συμβολή της τεχνητής νοημοσύνης στον Σημασιολογικό Ιστό είναι οι μέθοδοι αναπαράστασης γνώσης.
Από τις πλέον διαδεδομένες δομημένες αναπαραστάσεις αποτελούν οι οντολογίες, που χρησιμεύουν κυρίως για τον ορισμό κοινών λεξιλογίων, στα οποία υπακούουν δεδομένα και κανόνες.
Οι οντολογίες χρησιμοποιούνται σε πλήθος περιπτώσεων [Wimalasuriya & Dou, 2010], όπως για παράδειγμα στην δημόσια διοίκηση [Savvas et al., 2012], στην μοντελοποίηση εφαρμογών [Walter et al., 2014] και στην ανάκτηση πληροφοριών [Fernández et al., 2011].
Γενικά, οντολογία είναι η μαθηματικά αυστηρή περιγραφή ενός πεδίου γνώσης και περιλαμβάνει ένα σύνολο όρων καθώς και τις σημασιολογικές συσχετίσεις τους.
Σημαντικό πλεονέκτημα των οντολογιών αποτελεί το γεγονός ότι παρέχουν μια σειρά από δυνατότητες για εξαγωγή συμπερασμάτων.
Σε αυτό το
Κεφάλαιο 2 – Αναπαράσταση Γνώσης και Εξαγωγή Συμπερασμάτων στον Σημασιολογικό Ιστό πλαίσιο, σημαντικές γλώσσες (οντολογιών) προτάθηκαν και χρησιμοποιήθηκαν στον Σημασιολογικό Ιστό, ενισχύοντας την διαλειτουργικότητα των εφαρμογών, όπως οι OWL και RDFS.
Έτσι, η τεχνολογία των ευφυών πρακτόρων υιοθέτησε τις περισσότερες από αυτές, στοχεύοντας στην αποτελεσματική ενσωμάτωση των ευφυών πρακτόρων στο περιβάλλον του Σημασιολογικού Ιστού.
Δύο από τις παραδοσιακές γλώσσες οντολογιών είναι η OWL και η RDF Schema, που χρησιμοποιείται και στα πλαίσια της παρούσας διατριβής.
Η RDF Schema (Γλώσσα Περιγραφής Λεξιλογίου RDFS) μπορεί να θεωρηθεί ως σημασιολογική επέκταση της RDF και αυτό γιατί παρέχει τους μηχανισμούς για την περιγραφή συνόλων σχετικών πόρων καθώς και των σχέσεων που τους συνδέουν [Antoniou & van Harmelen, 2008].
Με την RDFS μπορούμε να ορίσουμε ομάδες-κλάσεις ομοειδών αντικειμένων, καθώς και επιτρεπτές ιδιότητες / συσχετίσεις ανάλογα με την κλάση στην οποία ανήκουν.
Οι κλάσεις και οι ιδιότητες μπορούν να ανήκουν σε ιεραρχίες κληρονομικότητας.
Πίσω από την RDF Schema υπάρχουν απλοί μηχανισμοί εξαγωγής συμπερασμάτων, που σχετίζονται κυρίως με την κληρονομικότητα αλλά και με τους περιορισμούς των πεδίων ορισμού και τιμής των ιδιοτήτων.
Πρακτικά, στην RDF Schema τα περιγραφικά λεξιλόγια είναι γραμμένα σε RDF και επιτρέπουν τον καθολικό καθορισμό των χαρακτηριστικών των πόρων, όπως είναι το πεδίο ορισμού (domain) και το πεδίο τιμών (range) των ιδιοτήτων.
Επιπλέον, η RDFS χρησιμοποιεί ένα σύστημα κλάσεων και ιδιοτήτων ανάλογο με εκείνο που χρησιμοποιούν οι αντικειμενοστραφείς γλώσσες προγραμματισμού, όπως η Java, αν και διαφοροποιείται σημαντικά από αυτές.
Στην RDFS, οι δηλώσεις είναι πάντα περιγραφικές και περιλαμβάνουν περιορισμούς μόνο όταν η εφαρμογή μπορεί να τους χειριστεί.
Ουσιαστικά, η RDF Schema παρέχει τον τρόπο για να δηλωθούν πληροφορίες για τους πόρους και τις σχέσεις τους στον Σημασιολογικό Ιστό.
Ο τρόπος, όμως, διαχείρισης των μεταδεδομένων εξαρτάται αποκλειστικά από την εκάστοτε εφαρμογή.
Η OWL, από την άλλη πλευρά, παρουσιάζει μεγαλύτερη εκφραστική δύναμη από άλλες γλώσσες οντολογιών, όπως για παράδειγμα, από την RDFS, καθώς παρέχει πρόσθετο πλούσιο λεξιλόγιο για να περιγράψει ιδιότητες μεταξύ αντικειμένων και σχέσεις μεταξύ πόρων ή κλάσεων.
Πρακτικά, κάθε οντολογία, εκφρασμένη στην γλώσσα OWL, μπορεί να περιγράφει διακριτά αντικείμενα (individuals), όπως για παράδειγμα, ανθρώπους, ζώα ή οχήματα.
Για τα αντικείμενα αυτά παρέχει ένα είδος ταξινόμησης και ομαδοποίησης, με αποτέλεσμα την συγκρότηση κλάσεων (classes), δηλαδή συνόλων αντικειμένων.
Σε γενικές γραμμές, μια κλάση μπορεί να περιέχει διακριτά αντικείμενα ή και άλλες κλάσεις.
Σε κάθε αντικείμενο αντιστοιχούν κάποιες ιδιότητες (properties), μέσω των οποίων μπορούν να περιγραφούν συσχετίσεις μεταξύ των αντικειμένων, που ανήκουν σε μια οντολογία.
Η OWL είναι διαθέσιμη σε τρεις διαφορετικές εκδοχές, καθεμιά εκ των οποίων καλύπτει συγκεκριμένες ανάγκες.
Η πρώτη εκδοχή είναι η OWL Lite, η οποία παρέχει μια ιεραρχία στην ταξινόμηση των αντικειμένων και κάποιους απλούς περιορισμούς.
Αποτελεί μια γλώσσα εύκολη στην εκμάθηση και απλή στην χρήση αλλά με περιορισμένη εκφραστική δύναμη.
Η δεύτερη εκδοχή είναι η OWL DL, η οποία παρέχει την μέγιστη εκφραστικότητα, διατηρώντας την υπολογιστική πολυπλοκότητα της συλλογιστικής σε χαμηλά επίπεδα.
Πρακτικά, η OWL DL υποστηρίζει σχεδόν όλες τις δυνατότητες της OWL, αλλά υστερεί στην έλλειψη συμβατότητας με την RDF.
Τέλος, η τρίτη εκδοχή είναι η OWL Full, η οποία υποστηρίζει όλες τις τεχνικές και τις δυνατότητες της OWL, παρέχοντας την μέγιστη εκφραστικότητα και την συντακτική ελευθερία της RDF αλλά με σχετικά υψηλό υπολογιστικό κόστος.
Στα συστήματα κανόνων υπάρχουν δύο βασικά είδη κανόνων, κανόνες που εκφράζουν διαδικαστική γνώση (procedural), δηλαδή γνώση που αφορά στην εκτέλεση συγκεκριμένων ενεργειών, και κανόνες που εκφράζουν δηλωτική γνώση (declarative), δηλαδή γνώση που αφορά τα οριζόμενα ως αλήθεια στο χώρο εφαρμογής.
Επομένως, τα συστήματα κανόνων, διακρίνονται σε συστήματα παραγωγής (production systems) και συστήματα εξαγωγής συμπερασμάτων (deduction systems), αντίστοιχα [Vlahavas et al., 2011].
Τα συστήματα παραγωγής αφορούν ενέργειες που πρέπει να εκτελεστούν, εφόσον ισχύουν οι προϋποθέσεις του κανόνα.
Αυτές οι ενέργειες όταν εκτελεστούν επιφέρουν αποτελέσματα, τα οποία, όμως, είναι αναστρέψιμα μόνο μέσω ανάστροφων ενεργειών και όχι, για παράδειγμα, μέσω οπισθοδρόμησης.
Κάθε σύστημα παραγωγής διαθέτει τρία μέρη, μια βάση κανόνων, μια μνήμη εργασίας (working memory), που περιέχει τα αρχικά δεδομένα και τα ενδιάμεσα συμπεράσματα, και έναν μηχανισμό ελέγχου και επίλυσης συγκρούσεων (conflict set), ο οποίος είναι υπεύθυνος για την εκτέλεση των κανόνων που ενεργοποιούνται.
Πρακτικά, το σύνολο συγκρούσεων σε ένα σύστημα παραγωγής αποτελείται από το σύνολο των υποψηφίων κανόνων για πυροδότηση.
Έτσι, για την επίλυση των συγκρούσεων, ο μηχανισμός χρησιμοποιεί κάποια κατάλληλη στρατηγική επίλυσης συγκρούσεων (conflict resolution strategy), η οποία καθορίζει ποιος από τους κανόνες του συνόλου συγκρούσεων θα πυροδοτηθεί.
Τέτοιες στρατηγικές επίλυσης συγκρούσεων είναι, για παράδειγμα, η τυχαία (random), η επιλογή του πρόσφατου (recent), η επιλογή του ειδικότερου (specificity) και η ανάλυση μέσων-σκοπών (means-ends analysis).
Ένα σύστημα κανόνων παραγωγής, που χρησιμοποιείται στα πλαίσια της παρούσας διατριβής, είναι το Jess [Jess, 2008].
Το Jess έγινε δημοφιλές στην ερευνητική κοινότητα των ευφυών πρακτόρων, όταν ενσωματώθηκε στην πλατφόρμα JADE [Bellifemine et al., 2003;
Bellifemine et al., 2007], μια αξιόπιστη και ευρέως χρησιμοποιούμενη πολυπρακτορική πλατφόρμα.
Το σύστημα Jess υποστηρίζει μια γλώσσα, που βασίζεται στο συντακτικό του CLIPS, η οποία θεωρείται ως μια πολύ εκφραστική γλώσσα, καθώς μπορεί να εκφράσει πολύπλοκες λογικές σχέσεις με ιδιαίτερα λίγο κώδικα.
Ο μηχανισμός του Jess είναι υλοποιημένος στην γλώσσα Java και μπορεί, επομένως, να χρησιμοποιηθεί σε οποιοδήποτε σύστημα βασίζεται σε αυτή.
Έτσι, το σύστημα κανόνων παραγωγής Jess είναι δυναμικό και προσανατολισμένο στην γλώσσα Java, παρέχοντας άμεσα πλήρη πρόσβαση σε όλα τα χαρακτηριστικά του.
Επιπλέον, το Jess και, κατά συνέπεια, η γλώσσα που υποστηρίζει, είναι συμβατό με τις προδιαγραφές της FIPA (Foundation for Intelligent Physical Agents).
Η FIPA, ένας ευρέως γνωστός οργανισμός της IEEE Computer Society για την προώθηση της τεχνολογίας των ευφυών πρακτόρων, είναι ένας μη κερδοσκοπικός οργανισμός για την ανάπτυξη και τον καθορισμό προτύπων που αφορούν την αλληλεπίδραση των ευφυών πρακτόρων και, εν γένει, τα ετερογενή πολυπρακτορικά συστήματα [Poslad, 2007].
Στην συνέχεια, παρουσιάζεται ένα μέρος της δομής ενός μηνύματος επικοινωνίας στο συντακτικό της γλώσσας που υποστηρίζει το Jess, καταδεικνύοντας αυτή την συμβατό-
Συστήματα Εξαγωγής Συμπερασμάτων Τα συστήματα εξαγωγής συμπερασμάτων αποτελούν σημαντικό αντικείμενο μελέτης στην παρούσα διατριβή, καθώς η χρήση τέτοιων συστημάτων επιτρέπει στους ευφυείς πράκτορες να εξάγουν λογικά συμπεράσματα, καθορίζοντας την κατανόηση τους για το περιβάλλον τους και την απόδοση τους.
Κάθε σύστημα εξαγωγής συμπερασμάτων, ανεξάρτητα από την γλώσσα και την λογική που υποστηρίζει, διαθέτει δύο βασικά συστατικά, μια βάση κανόνων (rule base), η οποία περιέχει το σύνολο κανόνων και ένα στοιχείο ελέγχου (control module), που καθορίζει τον τρόπο εκτέλεσης των κανόνων.
Το στοιχείο ελέγχου, στην πραγματικότητα, βασίζεται σε έναν αλγόριθμο, ο οποίος καθορίζει ποιοι από τους κανόνες δύνανται να ενεργοποιηθούν σε κάθε διακριτή χρονική στιγμή, ποιοι από αυτούς τελικά θα εκτελεστούν αλλά και τι θα συμβεί με τους υπόλοιπους κανόνες.
Σε αυτό το πλαίσιο, η επίλυση ενός προβλήματος προκύπτει από την εκτέλεση μιας ακολουθίας κανόνων.
Στην πραγματικότητα, τα συστήματα εξαγωγής συμπερασμάτων χρησιμοποιούν συνήθως την συνεπαγωγική συλλογιστική για να οδηγηθούν από τα αρχικά δεδομένα στα συμπεράσματα.
Η διαδικασία της εξαγωγής μπορεί να γίνει με δύο τρόπους, είτε με ορθή ακολουθία εκτέλεσης (forward chaining) είτε με ανάστροφη (backward chaining).
Στην ορθή ακολουθία εξετάζεται εάν οι προϋποθέσεις ενός κανόνα είναι αληθείς, έτσι ώστε να είναι αληθές και το συμπέρασμα ενώ στην ανάστροφη εξετάζονται τα συμπεράσματα προκειμένου να διαπιστωθεί εάν οι προϋποθέσεις είναι αληθείς, πρόκειται δηλαδή για διαδικασία αντίστροφη
Λογική και Εξαγωγή Συμπερασμάτων Η λογική [Robinson, 1979] αποτελεί κεντρικό στοιχείο σε όλες τις επιστήμες, καθώς προσφέρει, μέσω των αρχών της συλλογιστικής (reasoning), την μεθοδολογία για την αναπαράσταση και επίλυση ποικίλων προβλημάτων.
Κάθε λογική έχει ένα αυστηρό (μαθηματικό) ορισμό, που καθορίζει την μεθοδολογία και την σημασιολογία της.
Παραδείγματα λογικών αποτελούν, η συνεπαγωγή (deduction), η επαγωγή (induction), η απαγωγή (abduction) και η αναιρέσιμη λογική (defeasible).
Πρακτικά κάθε λογική, μέσω της αντίστοιχης διαδικασίας συλλογιστικής, συνδυάζει τμήματα υπάρχουσας γνώσης με αποτέλεσμα την παραγωγή νέας.
Με άλλα λόγια, η συλλογιστική επιτρέπει την εξαγωγή συμπερασμάτων (inference), ωστόσο, για τον σκοπό αυτό είναι απαραίτητη η χρήση αντίστοιχων μηχανισμών εξαγωγής συμπερασμάτων (inference mechanisms), οι οποίοι υλοποιούνται κατά περίπτωση στις εκάστοτε εφαρμογές.
Στην συνέχεια περιγράφονται οι λογικές που χρησιμοποιούνται στην παρούσα διατριβή, η συνεπαγωγική λογική και κυρίως η αναιρέσιμη και η χρονική αναιρέσιμη λογική.
Ιδιαίτερα, οι δύο τελευταίες χρησιμοποιούνται ευρύτατα στις μεθοδολογίες διαλειτουργικότητας και αξιοπιστίας που προτείνονται, καθώς είναι σε θέση να αναπαριστούν ρεαλιστικά την ανθρώπινη γνώση και συμπεριφορά κατά την διαδικασία λήψης α-
Η συνεπαγωγική λογική (deductive logic) [Johnson-Laird & Byrne, 1991] βασίζεται στην κλασική λογική επιχειρηματολογία, όπου τα συμπεράσματα είναι έγκυρα, όταν οι προϋποθέσεις της υπόθεσης, δηλαδή η συνθήκη του κανόνα, είναι αληθής.
Πρόκειται, δηλαδή, για μια διαδικασία συλλογιστικής, όπου από μία ή περισσότερες δηλώσεις (υποθέσεις) καταλήγει σε ένα λογικά βέβαιο συμπέρασμα.
Στην συνεπαγωγική λογική, ακολουθείται η αρχή από το γενικό προς το ειδικό και, έτσι, ένα συμπέρασμα εξάγεται αναγωγικά με την εφαρμογή αρχικά γενικών κανόνων, που ισχύουν καθολικά στο υπό μελέτη (κλειστό) πεδίο, και εν συνεχεία ειδικότερων.
Στην πραγματικότητα, η συνεπαγωγική λογική είναι ιδιαίτερα σημαντική στην επιστημονική κοινότητα, καθώς αποτελεί το λογικό μέσο για να ελεγχθούν υποθέσεις και θεωρίες.
Η συνεπαγωγική λογική πρακτικά, δεν χρησιμοποιείται για να αποδείξει μόνο την αλήθεια κάποιας υπόθεσης αλλά στοχεύει στον εντοπισμό της εκάστοτε σωστής απάντησης.
Ένα παράδειγμα επαγωγικής συλλογιστικής είναι το εξής: Όλοι οι άνθρωποι είναι θνητοί. (κανόνας) Ο Σωκράτης είναι άνθρωπος. (περίπτωση) Άρα, ο Σωκράτης είναι θνητός. (αποτέλεσμα) Η πρώτη συνθήκη δηλώνει ότι όλα τα αντικείμενα, που ορίζονται ως άνθρωποι, έχουν το χαρακτηριστικό «θνητός».
Η δεύτερη ορίζει ότι ο «Σωκράτης» έχει χαρακτηριστεί ως «άνθρωπος», δηλαδή αποτελεί μέλος του συνόλου «άνθρωποι».
Το συμπέρασμα, τέλος, δηλώνει ότι ο «Σωκράτης» πρέπει να είναι «θνητός», δεδομένου ότι κληρονομεί αυτό το χαρακτηριστικό από την ιδιότητα του ως «άνθρωπος».
Δύο συστήματα, που χρησιμοποιούν την συνεπαγωγική λογική για την εξαγωγή συμπερασμάτων στο περιβάλλον του Σημασιολογικού ιστού είναι το σύστημα R-DEVICE [Bassiliades & Vlahavas, 2006] και η μηχανή κανόνων Prova [Kozlenkov et al., 2006].
Το RDEVICE είναι ένα αντικειμενοστραφές σύστημα συνεπαγωγικών κανόνων για την διεξαγωγή ερωτημάτων και συλλογιστικής σε RDF μεταδεδομένα.
Από την άλλη πλευρά, η Prova είναι μια μηχανή εξαγωγής συμπερασμάτων, που υποστηρίζει κατανεμημένες υπηρεσίες εξαγωγής συμπερασμάτων, ανταλλαγή κανόνων και βασισμένη σε κανόνες λογική αποφάσεων.
Τόσο το σύστημα R-DEVICE όσο και η Prova χρησιμοποιούνται στην παρούσα διατριβή για την παροχή υπηρεσιών συλλογιστικής προς τους ευφυείς πράκτορες, μέσω ειδικών για αυτό το σκοπό υπηρεσιών, όπως παρουσιάζεται αναλυτικά στο τέταρτο κεφάλαιο.
Η αναιρέσιμη λογική (defeasible logic) [Nute, 1987;
Nute, 2003] είναι ένας απλός και αποδοτικός φορμαλισμός λογικής που βασίζεται σε κανόνες, μέρος ενός γενικότερου τομέα έρευνας, της αναιρέσιμης συλλογιστικής.
Αποτελεί μέλος της οικογένειας των μη-μονότονων λογικών (non-monotonic logics) και υπήρξε, εξαρχής, μια λογική προσανατολισμένη στην αποτελεσματικότητα.
Σε σύγκριση με άλλες επικρατούσες μη-μονότονες λογικές, π.χ.
Gottlob, 1992], κύριο πλεονέκτημα της αποτελούν οι δυνατότητες ενισχυμένης αναπαράστασης και η χαμηλή υπολογιστική πολυπλοκότητα της [Maher, 2001;
Antoniou et al., 2009], μια ιδιότητα που διατηρείται και στην χρονική αναιρέσιμη λογική [Governatori & Rotolo, 2010;
Governatori & Rotolo, 2013], που παρουσιάζεται στην συνέχεια.
Μέχρι σήμερα έχουν προταθεί διάφορες παραλλαγές, ωστόσο η κεντρική προσέγγιση παραμένει πάντοτε η ίδια [Nute, 2003;
Αρχή της αναιρέσιμης λογικής είναι να μπορεί να εξάγει εύλογα συμπεράσματα από ελλιπείς, μεταβαλλόμενες και μερικές φορές αλληλοσυγκρουόμενες πληροφορίες.
Τα συμπεράσματα αυτά, παρά το γεγονός ότι υποστηρίζονται από τις πληροφορίες που έχει ήδη στη διάθεσή του ο πράκτορας, είναι στην πραγματικότητα προσωρινά, καθώς είναι πιθανό να απορριφθούν υπό το πρίσμα νέων ή βελτιωμένων πληροφοριών.
Έτσι, η αναιρέσιμη λογική (DL), όπως και η χρονική αναιρέσιμη λογική (TDL), όντας μη-μονότονες λογικές, έχουν την ικανότητα να μοντελοποιούν τον τρόπο που οι ευφυείς πράκτορες και οι άνθρωποι καταλήγουν σε λογικά συμπεράσματα έχοντας ασαφείς πληροφορίες.
Υπό μια θεμελιώδη έννοια, οι μη-μονότονες λογικές καταλαμβάνουν αναμφισβήτητα εξέχουσα θέση μεταξύ των ερευνητικών αρχών ευφυούς συλλογισμού για πολύπλοκες και δυναμικές καταστάσεις.
Γι’ αυτό και ένα από τα κύρια ενδιαφέροντα της αναιρέσιμης λογικής, και κατ’ επέκταση της χρονικής αναιρέσιμης λογικής, είναι η περιοχή των ευφυών πρακτόρων [Governatori & Rotolo, 2008].
Επομένως, επιτρέποντας στους πράκτορες να καταλήγουν σε αναιρέσιμα συμπεράσματα, μπορούμε να οδηγηθούμε σε πιο ρεαλιστικές εκτιμήσεις παρόμοιες με την ανθρώπινη λογική και συλλογιστική.
Πρακτικά, στην αναιρέσιμη λογική, όπως και στην ανθρώπινη λογική, οι κανόνες μπορούν να νικηθούν [Pollock, 1992;
Nute, 2003], έτσι μια υπάρχουσα πεποίθηση μπορεί να γίνει ψευδής και να μετατραπεί σε μη-μονότονη [Koons, 2009].
Συγκεκριμένα, μια αναιρέσιμη θεωρία (defeasible theory) D, για παράδειγμα μια βάση γνώσης ή ένα πρόγραμμα γραμμένο σε αναιρέσιμη λογική, αποτελείται από τρία βασικά συστατικά, ένα σύνολο γεγονότων (F), ένα σύνολο κανόνων (R) και μια σχέση υπεροχής (>).
Ως εκ τούτου, η θεωρία D μπορεί να αναπαρασταθεί από την τριπλέτα (F, R, >).
Τα γεγονότα είναι αδιαμφισβήτητες δηλώσεις, που αναπαρίστανται είτε ως λεκτικά (literal, modal literal) είτε ως ενέργειες που έχουν πραγματοποιηθεί.
Οι κανόνες περιγράφουν την σχέση μεταξύ ενός συνόλου λεκτικών (υποθέσεις) και ενός συγκεκριμένου λεκτικού (συμπέρασμα).
Στην αναιρέσιμη λογική υπάρχουν τρεις διακριτοί τύποι κανόνων, οι αυστηροί (strict) κανόνες, οι αναιρέσιμοι (defeasible) κανόνες και οι αναιρέτες (defeaters).
Οι αυστηροί κανόνες είναι κανόνες με την κλασική έννοια, δηλαδή κάθε φορά που οι υποθέσεις είναι αδιαμφισβήτητες τότε αυτό ισχύει και για το συμπέρασμα.
Έτσι μπορούν να χρησιμοποιηθούν για ορισμούς εννοιών (deﬁnitional clauses).
Ειδικότερα, οι αυστηροί κανόνες λαμβάνουν τη μορφή A1, … , An → B (ή B :A1, …, An, στο συντακτικό της dPOSL [Kontopoulos et al., 2011] και Παράρτημα Α).
Ένα παράδειγμα αυστηρού κανόνα είναι: «τα διαμερίσματα (apartments) είναι σπίτια (houses)», το οποίο γράφεται στην γλώσσα της λογικής ως εξής: r1: apartment(X) → house(X).
Οι αναιρέσιμοι κανόνες, από την άλλη, είναι κανόνες που μπορούν να «ηττηθούν» από κανόνες που συμπεραίνουν αντίθετα συμπεράσματα και λαμβάνουν τη μορφή A1, … , An => B (ή B := A1, …, An, στο συντακτικό της d-POSL).
Ένα παράδειγμα τέτοιου κανόνα είναι το «κάθε διαμέρισμα θεωρείται αποδεκτό», το οποίο γίνεται r2: apartment(X)  acceptable(X).
Οι αναιρέτες συμβολίζονται ως A1, … , An  B (ή B :~ A1, …, An, στο συντακτικό της d-POSL) και είναι κανόνες που δεν υποστηρίζουν ενεργά κάποιο συμπέρασμα αλλά μπορούν μόνο να εμποδίσουν την εξαγωγή συμπερασμάτων από αναιρέσιμους κανόνες.
Με άλλα λόγια, χρησιμοποιούνται για να «ηττηθούν» κάποιοι αναιρέσιμοι κανόνες μέσω της παραγωγής αντίθετων αποδείξεων.
Ένα παράδειγμα αναιρέτη είναι ο κανόνας r3: pets(X), gardenSize(X,Y), Y>0  acceptable(X), ο οποίος μεταφράζεται ως «εάν τα κατοικίδια (pets) επιτρέπονται στο διαμέρισμα αλλά το διαμέρισμα έχει κήπο, τότε το διαμέρισμα μπορεί να είναι δεκτό».
Ο αναιρέτης αυτός μπορεί, για παράδειγμα, να νικήσει τον κανόνα r4: pets(X)  ¬acceptable(X), σύμφωνα με τον οποίο «εάν επιτρέπονται κατοικίδια, τότε το διαμέρισμα δεν είναι αποδεκτό».
Η σχέση υπεροχής μεταξύ των κανόνων, από την άλλη πλευρά, εκφράζει την προτεραιότητα κάθε κανόνα, δηλαδή όταν ένας κανόνας μπορεί να παρακάμψει το συμπέρασμα ενός άλλου κανόνα έχει προτεραιότητα έναντι αυτού.
Για παράδειγμα, δοθέντων των κανόνων r2 και r4, κανένα οριστικό συμπέρασμα δεν μπορεί να εξαχθεί, σχετικά με το εάν ένα διαμέρισμα είναι αποδεκτό ή όχι, καθώς οι κανόνες αντικρούουν ο ένας τον άλλο.
Ωστόσο, εάν υπήρχε μια σχέση υπεροχής μεταξύ τους, όπως για παράδειγμα η σχέση r4 > r2, τότε ο κανόνας r4 θα παρέκαμπτε τον r2, επιτρέποντας να εξαχθεί το συμπέρασμα ότι το διαμέρισμα είναι μη αποδεκτό.
Σε αυτήν την περίπτωση, ο κανόνας r4 ονομάζεται ανώτερος (superior) του r2 ενώ, αντίστοιχα, ο κανόνας r2 ονομάζεται κατώτερος (inferior) του r4.
Ένα άλλο σημαντικό στοιχείο της αναιρέσιμης λογικής, και κατ’ επέκταση της αντίστοιχης συλλογιστικής, είναι η έννοια των αντικρουόμενων λεκτικών (conflicting literals).
Σε πολλές περιπτώσεις, διάφορα λεκτικά θεωρούνται συχνά αντικρουόμενα μεταξύ τους και, έτσι, το πολύ ένα από ένα συγκεκριμένο σύνολο θα πρέπει να εξαχθεί.
Πρακτικά, τα αντικρουόμενα λεκτικά καθορίζονται μέσω ενός συνόλου συγκρούσεων και η σύγκρουση επιλύεται τελικά μέσω προτεραιοτήτων [Billington et al., 2010].
Μια ειδική περίπτωση σύγκρουσης είναι μεταξύ διαφορετικών θετικών λεκτικών, όταν όλα αυτά εξάγονται από διαφορετικούς αναιρέσιμους κανόνες ενώ θα έπρεπε να εξάγεται μόνο ένα.
Ένα τέτοιο παράδειγμα είναι η διαπραγμάτευση τιμών, όπου θα πρέπει να γίνει μια προσφορά από τον υποψήφιο αγοραστή.
Η προσφορά μπορεί να καθορίζεται από διάφορους κανόνες, των οποίων οι συνθήκες μπορεί να είναι ή να μην είναι αμοιβαία αποκλειόμενες.
Σε αυτό το πλαίσιο, όλοι οι κανόνες θα έχουν στην κεφαλή τους το offer(X), δεδομένου ότι η προσφορά είναι συνήθως ένα θετικό λεκτικό.
Ωστόσο, θα πρέπει να γίνει μόνο μία προσφορά.
Ως εκ τούτου, μόνο ένας από τους κανόνες θα πρέπει να υπερισχύσει, με βάση την σχέση υπεροχής μεταξύ τους.
Σε αυτήν την περίπτωση, το σύνολο των συγκρούσεων είναι:
Για παράδειγμα, οι ακόλουθοι δύο κανόνες κάνουν μια προσφορά για ένα συγκεκριμένο διαμέρισμα, με βάση τις απαιτήσεις του αγοραστή.
Ωστόσο, ο δεύτερος είναι πιο συγκεκριμένος και το συμπέρασμα του υπερισχύει αυτό του πρώτου κανόνα.
Στην πραγματικότητα, η κεντρική έννοια στην αναιρέσιμη (και την χρονική αναιρέσιμη) λογική είναι ότι η λογική δεν υποστηρίζει αντιφατικά συμπεράσματα αλλά προσπαθεί να επιλύσει τις συγκρούσεις.
Έτσι, στις περιπτώσεις όπου υπάρχει κάποια υποστήριξη για το συμπέρασμα q αλλά υπάρχει επίσης υποστήριξη και για το συμπέρασμα ¬q, κανένα συμπέρασμα δεν μπορεί να εξαχθεί εκτός εάν ένα από αυτά έχει προτεραιότητα έναντι του άλλου, δηλαδή εάν υπάρχει σχέση υπεροχής μεταξύ των κανόνων.
Ουσιαστικά, τα συμπεράσματα μπορούν να ταξινομηθούν είτε ως οριστικά είτε ως αναιρέσιμα.
Ένα οριστικό συμπέρασμα είναι ένα συμπέρασμα που δεν μπορεί να ανακληθεί (αναιρεθεί), ακόμη και όταν νέες πληροφορίες είναι διαθέσιμες.
Ένα αναιρέσιμο συμπέρασμα, από την άλλη πλευρά, είναι ένα ενδεικτικό συμπέρασμα, που θα μπορούσε να ανακληθεί στο μέλλον.
Επιπλέον, η λογική είναι σε θέση να καθορίσει εάν ένα συμπέρασμα είναι ή όχι αποδεικτέο και, ως εκ τούτου, υπάρχουν τέσσερα πιθανά είδη συμπερασμάτων, τα οριστικά θετικά (+Δq), τα οριστικά αρνητικά (−Δq), τα αναιρέσιμα θετικά (+∂q) και τα αναιρέσιμα αρνητικά (−∂q).
Ειδικότερα, ένα συμπέρασμα στη θεωρία D είναι ένα προσημασμένο λεκτικό (tagged literal) και μπορεί να έχει μία από τις ακόλουθες μορφές [Antoniou et al., 2001]: +Δq: το συμπέρασμα q είναι αναμφίβολα αποδεικτέο (definitely provable) στη θεωρία D. +∂q: το q είναι αναιρέσιμα αποδεικτέο (defeasibly provable) στη θεωρία D. −Δq: το q αποδεικνύεται ότι δεν είναι αναμφίβολα αποδεικτέο στη θεωρία D. −∂q: το q αποδεικνύεται ότι δεν είναι αναιρέσιμα αποδεικτέο στη θεωρία D.
Για να αποδειχθεί ότι ισχύει το +Δq, πρέπει να τεκμηριωθεί ότι το συμπέρασμα q αποδεικνύεται με την χρήση γεγονότων και αυστηρών κανόνων.
Κάθε φορά που ένα λεκτικό είναι αναμφίβολα αποδεικτέο, είναι επίσης και αναιρέσιμα αποδεικτέο.
Σε αυτή την περίπτωση, η αναιρέσιμη απόδειξη συμπίπτει με την αναμφίβολη απόδειξη για το q.
Διαφορετικά, προκειμένου να αποδειχθεί το +∂q στην θεωρία D, πρέπει να υπάρχει ένας εφαρμόσιμος αυστηρός ή αναιρέσιμος κανόνας που να υποστηρίζει το q.
Επιπλέον, θα πρέπει επίσης να διασφαλιστεί ότι η συγκεκριμένη απόδειξη δεν αναιρείται από αντίθετα στοιχεία.
Ως εκ τούτου, θα πρέπει να διασφαλιστεί ότι η άρνηση του q δεν είναι αναμφίβολα αποδεικτέα στην θεωρία D.
Διαδοχικά, πρέπει να ληφθεί υπόψη και κάθε κανόνας που δεν είναι γνωστό ότι είναι ανεφάρμοστος και έχει στην κεφαλή του το συμπλήρωμα του q (~q).
Για κάθε τέτοιο κανόνα s, απαιτείται να υπάρχει ένας αντεπιτιθέμενος κανόνας t, με κεφαλή q που ισχύει σε αυτό το σημείο, και ο s να είναι κατώτερος από τον t.
Για να αποδειχθεί ότι ισχύει το –Δq στην θεωρία D, πρέπει το q να μην είναι γεγονός και κάθε αυστηρός κανόνας, που υποστηρίζει το q πρέπει να είναι γνωστό ότι είναι ανεφάρμοστος.
Αν αποδειχθεί ότι το –Δq ισχύει, τότε αποδεικνύεται επίσης ότι ισχύει και το −∂q.
Διαφορετικά, για να αποδειχθεί ότι ισχύει το −∂q, πρέπει πρώτα να διασφαλιστεί ότι ισχύει το -Δq.
Επιπλέον, πρέπει να ισχύει και μία από τις ακόλουθες προϋποθέσεις: (α) Κανένας κανόνας με κεφαλή q δεν μπορεί να εφαρμοστεί, (β) είναι αποδεδειγμένο ότι ισχύει το −Δ~q και (γ) υπάρχει ένας εφαρμόσιμος κανόνας r με κεφαλή ~q, τέτοιος ώστε κανένας πιθανός εφαρμόσιμος κανόνας s με κεφαλή q να μην είναι ανώτερος από τον r.
Δύο συστήματα που χρησιμοποιούν την αναιρέσιμη λογική για την εξαγωγή συμπερασμάτων είναι τα DR-DEVICE [Bassiliades et al., 2006] και SPINdle [Lam & Governatori, 2009].
Το σύστημα DR-DEVICE μπορεί να εκτελεί συλλογιστική σε RDF μεταδεδομένα, που βρίσκονται στον Ιστό, ενώ το SPINdle μπορεί να εκτελεί συλλογιστική σε θεωρίες αναιρέσιμης λογικής XML μορφής.
Τόσο το DR-DEVICE όσο και το SPINdle χρησιμοποιούνται στην παρούσα διατριβή για την παροχή υπηρεσιών αναιρέσιμης συλλογιστικής.
Αναλυτική περιγραφή των συστημάτων και της χρήσης τους παρατίθεται στο τέταρτο κεφάλαιο.
Χρονική Αναιρέσιμη Λογική Η χρονική αναιρέσιμη λογική (Temporal defeasible logic TDL) αποτελεί επέκταση της αναιρέσιμης λογικής (defeasible logic DL), που αναπτύχθηκε για να συλλάβει την έννοια της χρονικής επιμονής [Governatori & Terenziani, 2007], αποτελώντας σημαντικό εργαλείο στην προσπάθεια για πιο ρεαλιστικά πολυπρακτορικά συστήματα.
Όπως είναι αναμενόμενο, η γνώση στην χρονική αναιρέσιμη λογική αναπαρίσταται όπως και στην αναιρέσιμη λογική, δηλαδή με γεγονότα (facts) και κανόνες (rules).
Η σημαντικότητα της προσθήκης μιας χρονικής διάστασης στους κανόνες και στα λεκτικά είναι αδιαμφισβήτητη.
Ακόμη και από την πρώιμη εργασία του Pollock [Pollock, 1998], γίνεται εμφανές ότι υπάρχει μια απαίτηση για την προσθήκη μιας χρονικής πτυχής στην αναιρέσιμη συλλογιστική.
Πρακτικά, μια χρονική λογική, όπως η αναιρέσιμη χρονική λογική, μπορεί να διαχειριστεί δηλώσεις των οποίων η τιμή αλήθειας ποικίλει στην διάρκεια του χρόνου.
Έτσι, επιτρέπεται η εκτέλεση της αντίστοιχης συλλογιστικής σε ένα χρονικό εύρος, καθορίζοντας με αυτό τον τρόπο την εξέλιξη των δηλώσεων στην διάρκεια του χρόνου.
Επιπλέον, μέσω της χρονικής διάστασης μπορούν να αναπαρασταθούν έννοιες όπως η παύση ισχύος και η σταδιακή μείωση της σημαντικότητας μιας δήλωσης.
Οι ιδιότητες αυτές είναι ιδιαίτερα σημαντικές σε τομείς, όπως αυτός των ευφυών πρακτόρων, καθώς αφενός καθορίζουν με μεγαλύτερη ακρίβεια την γνώση και την συμπεριφορά των πρακτόρων στο περιβάλλον και αφετέρου αποτρέπουν ιδιοτελή συμπεριφορά στην εξέλιξη του χρόνου καθώς πλέον ο χρόνος λαμβάνεται υπόψη, προσδιορίζοντας με ακρίβεια την δράση κάθε πράκτορα.
Έτσι, στην χρονική αναιρέσιμη λογική υπάρχουν δύο τύποι χρονικών λεκτικών.
Ο πρώτος, ένα χρονικό λεκτικό που εκπνέει, αποτελείται από ένα ζεύγος l:t που υποδηλώνει ένα λεκτικό, l, που ισχύει για t χρονικές στιγμές.
Ο δεύτερος τύπος χρονικού λεκτικού, ένα μόνιμο χρονικό λεκτικό, αποτελείται από ένα ζεύγος l@t που υποδηλώνει ένα λεκτικό, l, που είναι ενεργό μετά από t χρονικές στιγμές και είναι σε ισχύ από τότε και έπειτα.
Ένας χρονικός κανόνας λαμβάνει την μορφή a1:d1 ... an:dn =>d b:db, όπου τα ζεύγη, a:d, αντιπροσωπεύουν ένα αναγνωριστικό συμβάντος, a, και μια διάρκεια d.
Η διάρκεια των στιγμιαίων γεγονότων είναι 0, ενώ τα μόνιμα γεγονότα έχουν άπειρη διάρκεια.
Το =>d , από την άλλη πλευρά, υποδηλώνει την καθυστέρηση μεταξύ της αιτίας a1:d1 ... an:dn και του αποτελέσματος b:db.
Υπάρχουν πολλοί ορισμοί για τη σημασιολογία αυτής της καθυστέρησης [Governatori & Terenziani, 2007].
Για παράδειγμα, η καθυστέρηση μπορεί να είναι η καθυστέρηση μεταξύ της έναρξης της τελευταίας αιτίας και της έναρξης του αποτελέσματος.
Έτσι, οι χρονικοί κανόνες περιέχουν χρονικά λεκτικά στοιχεία.
Για να μοντελοποιηθεί σωστά η καθυστέρηση μεταξύ του σώματος και της κεφαλής, οι κανόνες δημιουργούνται με τις κεφαλές των κανόνων τροποποιημένες έτσι ώστε να συμπεριλαμβάνουν την καθυστέρηση.
Για παράδειγμα, δοθέντος των κανόνων (r1) => a@1 και (r2) a@1=>7 b:3, ένα λεκτικό a δημιουργείται λόγω του κανόνα r1.
Γίνεται ενεργό την χρονική στιγμή 1 αλλά δεν προκαλεί την εξαγωγή του συμπεράσματος του κανόνα r2 μέχρι την χρονική στιγμή 8.
Το αποτέλεσμα b, από την άλλη πλευρά, διαρκεί μόνο μέχρι τη χρονική στιγμή 10, ενώ στη συνέχεια παραμένει μόνο το γεγονός a.
Οι κανόνες αποτελούν αναπόσπαστο κομμάτι της τεχνητής νοημοσύνης και, επομένως, των ευφυών πρακτόρων.
Οι κανόνες μπορούν να βασιστούν σε οποιαδήποτε από τις γνωστές λογικές, όμως για την υλοποίηση τους απαιτείται η κωδικοποίηση τους σε κάποια κατάλληλη γλώσσα κανόνων.
Μεταξύ των γλωσσών κανόνων που ξεχωρίζουν στο περιβάλλον του Σημασιολογικού Ιστού και των ευφυών πρακτόρων είναι οι RuleML (και Reaction RuleML), RIF και SWRL, που παρουσιάζονται στην συνέχεια.
Η RIF (Rule Interchange Format) [Kifer, 2008] αποτελεί σύσταση του οργανισμού W3C και είναι μέρος της υποδομής του Σημασιολογικού Ιστού.
Ο σχεδιασμός της RIF βασίζεται στην παρατήρηση ότι υπάρχουν πολλά συστήματα κανόνων στον Ιστό και, επομένως, υπάρχει η ανάγκη αυτά να ανταλλάσσουν μεταξύ τους κανόνες.
Έτσι, η RIF επικεντρώθηκε στην ανταλλαγή και όχι στην ανάπτυξη μιας ενιαίας γλώσσας κανόνων, σε αντίθεση με άλλα πρότυπα του Σημασιολογικού Ιστού, όπως οι γλώσσες SPARQL, RDF και OWL.
Η αρχιτεκτονική της RIF βασίζεται στην δημιουργία μιας οικογένειας γλωσσών, που ονομάζονται διάλεκτοι με αυστηρό συντακτικό και σημασιολογία.
Στόχος της οικογένειας των RIF διαλέκτων είναι να είναι ομοιόμορφες και να μπορούν να επεκταθούν.
Ομοιομορφία σημαίνει ότι οι διάλεκτοι αναμένεται να μοιράζονται όσο το δυνατόν περισσότερο από το αρχικά οριζόμενο συντακτικό και την σημασιολογία.
Επεκτασιμότητα σημαίνει ότι πρέπει να είναι δυνατός ο ορισμός νέων RIF διαλέκτων, ως συντακτική επέκταση σε μια υπάρχουσα RIF διάλεκτο.
Επί του παρόντος, η RIF περιλαμβάνει τρεις διαλέκτους, μια κεντρική (Core), που εκτείνεται σε μία διάλεκτο βασικής λογικής (BLD) και μια διάλεκτο παραγωγικών κανόνων (PRD).
Ένα παράδειγμα, όπου περιγράφεται ο κανόνας μιας αγοραπωλησίας στο συντακτικό της βασικής διαλέκτου της RIF, είναι ο εξής:
Η RuleML (Rule Markup Language) [Boley et al., 2010] είναι μια ενοποιημένη οικογένεια γλωσσών κανόνων, XML μορφής, που λειτουργεί ως γλώσσα σήμανσης για την δημοσίευση και τον διαμοιρασμό βάσεων κανόνων στον Ιστό.
Απώτερος στόχος της RuleML είναι να προσφέρει δυνατότητες μετάφρασης από και προς άλλα πρότυπα κανόνων.
Σε αυτό το πλαίσιο, η RuleML καλύπτει όλο το φάσμα των κανόνων, από τους παραγωγικούς μέχρι τους αναδραστικούς κανόνες.
Επιπλέον, μπορεί να υποστηρίξει σύνθετα γεγονότα, ενέργειες, ορισμούς καταστάσεων και μεταβάσεων για ένα εύρος τύπων κανόνων, όπως παραγωγικούς, συνεπαγωγικούς και αναδραστικούς ενώ έχουν ήδη κατασκευάσει γέφυρες διαλειτουργικότητας μεταξύ της RuleML και άλλων γλωσσών κανόνων, όπως οι RIF και SWRL.
Πρακτικά, η RuleML αναπαριστά τους κανόνες ως αρθρωτά στοιχεία με την χρήση τυποποιημένων XML ετικετών, οι οποίες επιτρέπουν τον ορισμό των γεγονότων και των κανόνων της βάσης γνώσης.
Για παράδειγμα, η πρόταση «The discount for Peter Miller buying a Porsche is 7.5 percent» θα μπορούσε να αναπαρασταθεί ως εξής:
Ωστόσο, αναλυτική περιγραφή και παραδείγματα της χρήσης της γλώσσας δίνονται στα επόμενα κεφάλαια, όπου περιγράφεται η πρωτότυπη συμβολή της διατριβής και η χρήση της γλώσσας σε αυτή, καθώς και στο Παράρτημα Δ.
Η Reaction RuleML, από την άλλη πλευρά, βασίζεται στην RuleML και είναι μια γενική, πρακτική και φιλική προς τον χρήστη γλώσσα αλλά και φορμαλισμός ανταλλαγής κανόνων.
Επιπλέον, είναι ευέλικτη ως προς την αναπαράσταση των κανόνων και το συντακτικό της υποστηρίζει μια δομή μηνύματος, η οποία περιλαμβάνει όλες τις ενότητες, που προσδιορίζονται από τις προδιαγραφές της FIPA.
Οι Εικόνες 2.1 και 2.2 παρουσιάζουν την ομοιότητα της δομής του μηνύματος τόσο στην RuleML και Reaction RuleML όσο και στην FIPA.
Είναι φανερό ότι και οι δυο περιπτώσεις περιέχουν κατηγορήματα για τον αποστολέα (Sender), τον παραλήπτη (Receiver), το περιεχόμενο (Content / Payload), το πρωτόκολλο (Protocol) και το αναγνωριστικό της συνομιλίας (oid και conversation-id).
Χρησιμοποιώντας κατάλληλα αυτές τις δομές, οι πράκτορες είναι σε θέση να ανταλλάσσουν από απλά γεγονότα μέχρι βάσεις κανόνων (σύνολα κανόνων) ενώ μέσω του κατηγορήματος conversation-id, οι πράκτορες μπορούν να εμπλακούν σε μια μακρόχρονη και συνήθως ασύγχρονη επικοινωνία, επιδεικνύοντας την ευελιξία τους.
Έτσι, τα κατηγορήματα SendMsg και rcvMsg της Reaction RuleML θεωρούνται κατάλληλα για την ανταλλαγή μηνυμάτων σε οποιαδήποτε αλληλεπίδραση μεταξύ πρακτόρων: όπου XID είναι το αναγνωριστικό της συνομιλίας (conversation-id), Protocol είναι ο συγκεκριμένος τύπος του πρωτοκόλλου επικοινωνίας, Performative είναι ο τύπος του μηνύματος ενώ Payload είναι το περιεχόμενο του μηνύματος.
Επιπλέον, η Reaction RuleML επιτρέπει δύο τύπους κανόνων, τους παραγωγικούς και τους αναδραστικούς.
Η γλώσσα SWRL (Semantic Web Rule Language) [Horrocks et al., 2005] είναι μια γλώσσα, που μπορεί να χρησιμοποιηθεί για την έκφραση τόσο κανόνων όσο και λογικής.
Ειδικότερα, η SWRL συνδυάζει την OWL DL ή την OWL Lite με ένα υποσύνολο της γλώσσας RuleML, έτσι, η SWRL έχει την πλήρη ισχύ της OWL DL αλλά με απώλεια των δυνατοτήτων απόφασης (decidability) σε πρακτικές υλοποιήσεις.
Ωστόσο, η δυνατότητα αυτή μπορεί να επανακτηθεί με τον περιορισμό της μορφής των αποδεκτών κανόνων, συνήθως με την επιβολή κατάλληλων συνθηκών ασφάλειας.
Οι κανόνες στην γλώσσα SWRL έχουν μια μορφή επαγωγής μεταξύ ενός σώματος (body) και μιας κεφαλής (head).
Το επιδιωκόμενο νόημα ενός τέτοιου κανόνα μπορεί να διαβαστεί ως εξής: «όταν οι συνθήκες που ορίζονται στο σώμα του κανόνα ισχύουν, τότε ισχύουν και οι συνθήκες που ορίζονται στην κεφαλή του».
Ένα παράδειγμα τέτοιου κανόνα, όπου καθορίζεται ότι ο συνδυασμός των ιδιοτήτων γονιού (hasParent) και αδερφού (hasBrother) υποδηλώνει την ιδιότητα του θείου (hasUncle), παρουσιάζεται στην συνέχεια.
Συγκεκριμένα, ο κανόνας καθορίζει ότι «εάν ο ?x2 είναι γονιός του ?x1 και, παράλληλα, αδερφός του ?x3, τότε ο ?x3 είναι θείος του ?x1»:
Σε αυτό το κεφάλαιο μελετήθηκε το θεωρητικό υπόβαθρο της παρούσας διατριβής.
Συγκεκριμένα, μελετήθηκαν οι τεχνολογίες και τα πρότυπα που είναι διαδεδομένα στον Σημασιολογικό Ιστό και παράλληλα απαραίτητα για την δράση και ενσωμάτωση των ευφυών πρακτόρων σε αυτόν.
Σε αυτό το πλαίσιο, έγινε αναφορά στα δεδομένα και τα μεταδεδομένα του Ιστού, όπου περιγράφηκε το μοντέλο RDF, καθώς και στις οντολογίες και τις γλώσσες τους, όπου περιγράφηκαν οι γλώσσες OWL και RDFS.
Στην συνέχεια, μελετήθηκαν τα συστήματα κανόνων, όπου δόθηκε ιδιαίτερη βαρύτητα στα συστήματα εξαγωγής κανόνων και τις λογικές, που αυτά χρησιμοποιούν.
Συγκεκριμένα, έγινε αναφορά στην συνεπαγωγική λογική ενώ μελετήθηκαν εκτενώς η αναιρέσιμη και η χρονική αναιρέσιμη λογική, οι οποίες συμπεριελήφθησαν σε σημαντικό τμήμα της παρούσας έρευνας, καθώς είναι κατάλληλες για την αναπαράσταση της γνώσης των ευφυών πρακτόρων.
Τέλος, μελετήθηκαν οι γλώσσες κανόνων, οι οποίες αποτελούν αναπόσπαστο κομμάτι της αναπαράστασης γνώσης και της εξαγωγής συμπερασμάτων στον Σημασιολογικό Ιστό.
Ειδικότερα, έγινε αναφορά στις γλώσσες RIF, RuleML και SWRL, όπου δόθηκε ιδιαίτερη βαρύτητα στις γλώσσες RuleML και Reaction RuleML που χρησιμοποιούνται ευρύτατα και συνδυαστικά με άλλες τεχνολογίες στις προτεινόμενες, στην παρούσα διατριβή, προσεγγίσεις. 3 3 Ευφυή Πολυπρακτορικά Συστήματα
Τα πολυπρακτορικά συστήματα μπορούν να χρησιμοποιηθούν για την μελέτη φαινομένων ή την επίλυση προβλημάτων, που είναι δύσκολο ή αδύνατο για τους ανθρώπους να μελετήσουν ή να επιλύσουν αντίστοιχα.
Στην πραγματικότητα, μπορούν να χρησιμοποιηθούν σε πολυάριθμα ερευνητικά πεδία, από τα παιχνίδια υπολογιστών και την πληροφορική μέχρι την οικονομία και τις κοινωνικές επιστήμες [Schurr et al., 2005;
Με την πάροδο του χρόνου, τα ευφυή πολυπρακτορικά συστήματα έχουν αποδειχθεί ένα πραγματικά ισχυρό εργαλείο σε τομείς, όπως η πληροφορική, η υγεία, η οικονομία και το εμπόριο.
Από την μια πλευρά, τα συστήματα αυτά βρίσκονται σε πλήρη αντιστοιχία με τις ανθρώπινες κοινωνίες υπό την έννοια ότι οι ευφυείς πράκτορες αντιπροσωπεύουν τους χρήστες τους, έχοντας παρόμοια χαρακτηριστικά με αυτούς, όπως η αυτονομία και η ευφυΐα και, από την άλλη πλευρά, παρέχουν σημαντικές
Από τις αρχές της προηγούμενης δεκαετίας, η ερευνητική κοινότητα έχει αναπτύξει πλήθος αρχιτεκτονικών, γλωσσών και πρωτοκόλλων επικοινωνίας αλλά και πλατφορμών για τους ευφυείς πράκτορες, είτε ειδικού είτε γενικού σκοπού.
Ορισμένες από αυτές τις τεχνολογίες έχουν ήδη εγκαταλειφθεί, ενώ άλλες συνεχίζουν να χρησιμοποιούνται και να εξελίσσονται.
Παράλληλα, όμως, η προσανατολισμένη στους πράκτορες ερευνητική κοινότητα εξακολουθεί να παρέχει ολοένα και περισσότερες νέες τεχνολογίες και εφαρμογές.
Το μεγάλο αυτό πλήθος επιλογών, είτε αφορούν στην αρχιτεκτονική είτε στην επικοινωνία και στην δράση των ευφυών πρακτόρων, οδηγεί, ωστόσο, σε υψηλό βαθμό ετερογένειας.
Βέβαια, όσον αφορά στις αρχιτεκτονικές και στην επικοινωνία των πρακτόρων οι επιλογές είναι πιο σαφείς.
Ο τομέας που παρουσιάζει την μεγαλύτερη ετερογένεια είναι αυτός των πλατφορμών που χρησιμοποιούνται για την ανάπτυξη των πολυπρακτορικών συστημάτων.
Λαμβάνοντας τα παραπάνω υπόψη, σε αυτό το κεφάλαιο, παρουσιάζονται, εν συντομία, οι σημαντικότερες και ευρέως χρησιμοποιούμενες αρχιτεκτονικές ευφυών πρακτόρων ενώ, στην συνέχεια, παρουσιάζονται σύντομα οι γλώσσες και τα πρωτόκολλα επικοινωνίας που έχουν καθιερωθεί στον χώρο των ευφυών πρακτόρων.
Έπειτα, δεδομένου του εύρους των διαθέσιμων πολυπρακτορικών πλατφορμών, πλαισίων και εργαλείων, η παρούσα διατριβή επιχειρεί να συμβάλει στην καλύτερη κατανόηση τους μέσω μιας εκτενούς έρευνας και συγκριτικής μελέτης [Kravari & Bassiliades, 2015a].
Σε αυτό το πλαίσιο, επιχειρείται, επιπρόσθετα, ο εντοπισμός και η μελέτη πολυπρακτορικών πλατφορμών και συστημάτων που μπορούν να χρησιμοποιηθούν στο περιβάλλον του Σημασιολογικού Ιστού, ακόμη και αν δεν σχεδιάστηκαν αρχικά για αυτό το σκοπό.
Ειδικότερα, ένα κοινό πρόβλημα είναι πώς οι άνθρωποι, που ενδιαφέρονται να χρησιμοποιήσουν πολυπρακτορικά συστήματα, θα επιλέξουν την κατάλληλη πλατφόρμα ώστε να επωφεληθούν από την τεχνολογία των ευφυών πρακτόρων και τις λογικές που αυτοί χρησιμοποιούν.
Η απόφαση αυτή συχνά επαφιόταν στην φήμη, στις εμπειρίες του παρελθόντος ή στην δημοσιότητα της πλατφόρμας.
Ακόμη, όμως, και οι ερευνητικές μελέτες παρουσιάζουν ελλείψεις και αυτό γιατί μέχρι σήμερα, στις περισσότερες περιπτώσεις, οι μελέτες αυτές περιγράφουν μόνο τα βασικά χαρακτηριστικά λίγων περιπτώσεων χωρίς κανενός είδους κατηγοριοποίηση των συστημάτων [π.χ.
Επιπρόσθετα, χρησιμοποιείται μια ποικιλία κριτηρίων, τα οποία συνήθως είναι διαφορετικά από έρευνα σε έρευνα, μην επιτρέποντας την σύγκριση των ευρημάτων.
Επομένως, στα πλαίσια της παρούσας διατριβής, προκειμένου να δοθεί μια εμπεριστατωμένη και συγκρίσιμη περιγραφή κάθε πλατφόρμας, προτείνονται ορισμένα καθολικά κριτήρια σύγκρισης και αξιολόγησης, τα οποία θα μπορούσαν να χρησιμοποιηθούν σε μελλοντικές μελέτες στον τομέα αυτό.
Επιπλέον, μελετώνται οι πλέον υποσχόμενες υπάρχουσες πλατφόρμες πρακτόρων, που μπορούν να χρησιμοποιηθούν σήμερα για ερευνητικούς ή εμπορικούς σκοπούς.
Σε αυτό το πλαίσιο, καταγράφονται όσες από αυτές είναι ήδη κατάλληλες για να χρησιμοποιηθούν στο περιβάλλον του Σημασιολογικού Ιστού άλλα και όσες έχουν την δυναμική, ακόμη και αν δεν είναι αρκετά ώριμες προς αυτή την κατεύθυνση.
Τέλος, προτείνεται μια σειρά κατηγοριοποιήσεων των πολυπρακτορικών πλατφορμών και συστημάτων, όπου καταγράφονται μεταξύ άλλων τα καταλληλότερα πεδία χρήσης τους και οι λογικές που χρησιμοποιούν, έτσι ώστε να γίνει κατανοητό ποιες πλατφόρμες εμφανίζουν σε γενικές γραμμές παρόμοιες ιδιότητες και ποιες επιλογές πρέπει να γίνουν κατά περίπτωση [Kravari & Bassiliades, 2015a].
Αρχιτεκτονικές Ευφυών Πρακτόρων Οι αρχιτεκτονικές των ευφυών πρακτόρων είναι ένας τομέας που μελετήθηκε εκτενώς τα προηγούμενα χρόνια.
Διάφορες αρχιτεκτονικές προτάθηκαν, με το εύρος τους να κυμαίνεται από τις αμιγώς αντιδραστικές (reactive) μέχρι τις προσχεδιασμένες συμβολικές (deliberative).
Ιδιαίτερο ενδιαφέρον παρουσιάζουν πέντε κατηγορίες, οι οποίες εδραιώθηκαν στο χώρο των πολυπρακτορικών συστημάτων και αφορούν, αντίστοιχα, στην δημιουργία πρακτόρων βασισμένων στην λογική, πρακτόρων με πεποιθήσεις, επιθυμίες και προθέσεις, αντιδραστικών, κινητών και, τέλος, υβριδικών πρακτόρων [Russel & Norvig, 2009;
Οι πράκτορες που βασίζονται στην λογική (logic-based agents) μπορούν να αναπαραστήσουν τον κόσμο, να χρησιμοποιήσουν κάποια διαδικασία εξαγωγής συμπερασμάτων προκειμένου να εντοπίσουν νέες αναπαραστάσεις του κόσμου αυτού και, εν τέλει, να χρησιμοποιήσουν αυτή την γνώση για να συμπεράνουν τι πρέπει να κάνουν.
Με άλλα λόγια, οι πράκτορες της κατηγορίας αυτής, όπως και οι άνθρωποι, γνωρίζουν πράγματα και καταστάσεις και εκτελούν συλλογιστική.
Μπορούν να επωφεληθούν από την διαθέσιμη γνώση, συνδυάζοντας πληροφορίες κατά περίπτωση, έτσι ώστε να εκτελούν κάθε φορά την βέλτι-
Κεφάλαιο 3 – Ευφυή Πολυπρακτορικά Συστήματα στη για αυτούς ενέργεια.
Σημαντικό, επίσης, πλεονέκτημα αυτής της κατηγορίας είναι ότι οι μέθοδοι και οι τεχνικές που υιοθετεί είναι σαφώς ορισμένες με σχετικά απλή σημασιολογία.
Ωστόσο, στον αντίποδα όλων αυτών βρίσκεται το γεγονός ότι είναι, πράγματι, δύσκολο να μετατραπεί ο πραγματικός κόσμος σε μια ακριβή συμβολική περιγραφή.
Η περίπτωση των πρακτόρων με πεποιθήσεις, επιθυμίες και προθέσεις (BDI agents) είναι ίσως η δημοφιλέστερη κατηγορία, παρότι είναι σαφώς πολυπλοκότερη.
Οι πεποιθήσεις αναπαριστούν την πληροφορία που έχει ο πράκτορας για το περιβάλλον του, οι επιθυμίες αναπαριστούν τις ενέργειες που σχετίζονται με τους στόχους που πρέπει να επιτύχει ενώ οι προθέσεις αναπαριστούν τις επιθυμίες που πρέπει να εκτελέσει (στόχοι).
Επιπρόσθετα, η εσωτερική κατάσταση κάθε πράκτορα περιλαμβάνει τους στόχους και τα πλάνα του, δηλαδή τους τρόπους με τους οποίους πρέπει να ενεργήσει.
Έτσι, οι πράκτορες της κατηγορίας αυτής, είναι σε θέση να αναπαριστούν το περιβάλλον και να σχεδιάζουν την επίτευξη των στόχων τους, γεγονός που τους διαφοροποιεί από τις υπόλοιπες κατηγορίες πρακτόρων.
Σημαντικό πλεονέκτημα αυτής της κατηγορίας είναι η σαφής αντιστοίχιση των στοιχείων της αρχιτεκτονικής σε λειτουργικά μέρη.
Ωστόσο, οι αρχές της αρχιτεκτονικής επικεντρώνονται κυρίως στην λύση προβλημάτων που αφορούν περισσότερο τα πλάνα και την εκτέλεση τους παρά τον προγραμματισμό των ίδιων των ευφυών πρακτόρων.
Οι αντιδραστικοί πράκτορες (reactive agents), από την άλλη πλευρά, δεν διαθέτουν κεντρικό μοντέλο, όπως οι παραπάνω συμβολικές αρχιτεκτονικές, επομένως δεν χρειάζονται πολύπλοκη συλλογιστική.
Οι πράκτορες αυτής της κατηγορίας, κατά κανόνα, λαμβάνουν δεδομένα από το περιβάλλον μέσω των αισθητήρων τους και, ανάλογα με τις συνθήκες, ενεργούν.
Σε αυτή την διαδικασία, ωστόσο, δεν λαμβάνει χώρα κανενός είδους σχεδιασμός παρά μόνο λαμβάνονται αποφάσεις με βάση τα δεδομένα που προκύπτουν από τους αισθητήρες.
Πλεονέκτημα των αντιδραστικών πρακτόρων είναι το γεγονός ότι, πράγματι, αποδίδουν καλύτερα σε δυναμικά περιβάλλοντα.
Ωστόσο, παρουσιάζουν μια σειρά μειονεκτημάτων, μεταξύ των οποίων η αδυναμία τους να μάθουν μέσω της εμπειρίας και η δυσκολία να ενεργήσουν όταν τα δεδομένα από τους αισθητήρες δεν είναι ικανοποιητικά.
Οι κινητοί πράκτορες (mobile agents) είναι μια ιδιαίτερη κατηγορία πρακτόρων, με κύριο γνώρισμα τους την δυνατότητα να μετακινούνται μέσα στο διαδικτυακό περιβάλλον που δρουν.
Ένας κινητός πράκτορας μπορεί να μεταφέρεται από το ένα σύστημα στο άλλο, με τα δεδομένα του άθικτα, και να συνεχίζει να δρα, εκτελώντας τις κατάλληλες ενέργειες.
Οι πράκτορες αυτής της κατηγορίας, αποφασίζουν πότε και πού να κινηθούν.
Όταν τελικά αποφασίσουν να μεταφερθούν, αποθηκεύουν την κατάσταση τους, την μεταφέρουν στο νέο περιβάλλον και συνεχίζουν την εκτέλεση τους από την αποθηκευμένη κατάσταση.
Πλεονέκτημα τους είναι η ευελιξία τους, σοβαρό πρόβλημα, ωστόσο, είναι τα ζητήματα ασφάλειας, που εγείρονται, τόσο του ίδιου του πράκτορα όσο και του συστήματος φιλοξενίας.
Τέλος, οι υβριδικοί πράκτορες (hybrid agents) παρουσιάζουν τόσο αντιδραστικές όσο και προσχεδιασμένες συμπεριφορές.
Η οργάνωση της συμπεριφοράς τους απαιτεί τουλάχιστον δύο επίπεδα, ένα υπεύθυνο για την διαχείριση της αντιδραστικής συμπεριφοράς και ένα για την διαχείριση της συμπεριφοράς με εσωτερική κατάσταση.
Για παράδειγμα, πράκτορες που ακολουθούν αυτή την αρχιτεκτονική μπορούν να χρησιμοποιούν το πρώτο επίπεδο, το αντιδραστικό, για την λήψη άμεσων αποφάσεων, σχετιζόμενων με τις αλλαγές του περιβάλλοντος, και το δεύτερο για τον σχεδιασμό των ενεργειών που απαιτούνται για την επίτευξη των στόχων τους.
Το σημαντικότερο πλεονέκτημα αυτής της κατηγορίας είναι ότι επιτρέπει τον εύκολο σχεδιασμό πρακτόρων με σύνθετη συμπεριφορά.
Ωστόσο, η υλοποίηση τέτοιων πρακτόρων είναι δύσκολη, καθώς η συνεργασία των διαφορετικών επιπέδων συμπεριφοράς αποδεικνύεται πολλές φορές πρόκληση.
Γλώσσες και Πρωτόκολλα Επικοινωνίας Ευφυών Πρακτόρων Η αρχιτεκτονική των ευφυών πρακτόρων είναι ένα σημαντικό ζήτημα, ένα εξίσου σημαντικό ζήτημα είναι και η επικοινωνία.
Κάθε πράκτορας που δρα σε ένα πολυπρακτορικό σύστημα, θα πρέπει να είναι σε θέση να επικοινωνεί με τους υπόλοιπους πράκτορες του περιβάλλοντος, τον χρήστη του αλλά και το ίδιο το σύστημα.
Η επικοινωνία με τον χρήστη, γίνεται συνήθως μέσω γραφικών διεπαφών.
Ωστόσο, υπάρχει σαφής έλλειψη τέτοιων διεπαφών στο χώρο των πολυπρακτορικών συστημάτων.
Όσες βρίσκονται σήμερα διαθέσιμες, σχετίζονται, όπως είναι φυσικό, με την πλατφόρμα υλοποίησης του πολυπρακτορικού συστήματος.
Ανάλογα με την πλατφόρμα και τον προσανατολισμό της, υπάρχουν διεπαφές που απευθύνονται μόνο σε προγραμματιστές, καθώς απαιτούν ειδικές γνώσεις, και άλλες που απευθύνονται σε αρχάριους χρήστες.
Έτσι, δεν υπάρχει προτυποποίηση για την επικοινωνία των ευφυών πρακτόρων με τον χρήστη τους.
Η πτυχή της επικοινωνίας που παρουσιάζει ενδιαφέρον και προτυποποίηση είναι αυτή της επικοινωνίας μεταξύ των πρακτόρων και κατ’ επέκταση της επικοινωνίας τους με την πλατφόρμα που τους φιλοξενεί.
Σήμερα, η επικοινωνία των πρακτόρων βασίζεται, ως επί το πλείστον, στην ανταλλαγή μηνυμάτων, είτε με σύγχρονο είτε με ασύγχρονο τρόπο.
Στην σύγχρονη επικοινωνία, ο πράκτορας που αποστέλλει ένα μήνυμα, αναστέλλει την λειτουργία του μέχρι να λάβει απάντηση.
Στην ασύγχρονη επικοινωνία, από την άλλη πλευρά, ο πράκτορας δεν αναστέλλει την λειτουργία του, παρά λαμβάνει την απάντηση οποιαδήποτε χρονική στιγμή.
Ωστόσο, για να γίνει κατανοητό το περιεχόμενο αυτών των μηνυμάτων, είναι ζωτικής σημασίας οι πράκτορες να συμφωνούν σχετικά με την μορφή και την σημασιολογία τους.
Σε αυτό το πλαίσιο, τα μηνύματα, ως οφείλουν, υπόκεινται στους κανόνες ειδικών γλωσσών που ονομάζονται γλώσσες επικοινωνίας πρακτόρων (agent communication languages – ACLs).
Η πρώτη τέτοια γλώσσα και πρωτόκολλο επικοινωνίας ήταν η KQML (Knowledge Query and Manipulating Language).
Η KQML αναπτύχθηκε στις αρχές της δεκαετίας του 1990 από την DARPA, στα πλαίσια μιας προσπάθειας για την ανάπτυξη τεχνικών κατασκευής επαναχρησιμοποιήσιμων και κοινόχρηστων βάσεων γνώσης μεγάλης κλίμακας.
Αρχικά, είχε σχεδιαστεί ως μια διεπαφή για συστήματα που βασίζονται στην γνώση, σύντομα όμως αναδιαμορφώθηκε ως γλώσσα επικοινωνίας πρακτόρων [Finin et al., 1994].
Η γλώσσα KQML έγινε ευρέως αποδεκτή και χρησιμοποιήθηκε από πλήθος συστημάτων.
Ωστόσο, οι δηλώσεις της γλώσσας, δηλαδή οι επιτρεπτοί τύποι μηνυμάτων, δεν είχαν σαφώς ορισμένη σημασιολογία.
Παρά τις προσπάθειες να αντιμετωπιστεί αυτό το ζήτημα, τελικά, η KQML αντικαταστάθηκε από την FIPA ACL, η οποία είναι και η πλέον χρησιμοποιούμενη γλώσσα σήμερα.
Η FIPA ACL παρουσιάζει σημαντικές ομοιότητες με την
KQML, καθώς ακολουθεί, μεταξύ άλλων, παρόμοια μορφή και τύπους μηνυμάτων.
Για παράδειγμα, παρακάτω αναπαρίσταται ένα μήνυμα ACL βασισμένο στο πρότυπο FIPA20001: όπου communicative-act είναι ο τύπος του μηνύματος, conversation-id το αναγνωριστικό του μηνύματος, sender o αποστολέας, receiver ο λήπτης, ontology η οντολογία που χρησιμοποιείται (εφόσον υπάρχει), protocol το πρωτόκολλο της επικοινωνίας, language η γλώσσα του μηνύματος και content το περιεχόμενο του.
Παράλληλα, η FIPA ACL επιτρέπει την διαχείριση της επικοινωνίας μέσω προκαθορισμένων πρωτοκόλλων αλληλεπίδρασης και την χρήση πολλών διαφορετικών γλωσσών περιεχομένου.
Ωστόσο, η γλώσσα παρέχει ένα κλειστό σύνολο είκοσι δύο επιτρεπτών δηλώσεων, με αυστηρά καθορισμένη σημασιολογία.
Συγκεκριμένα, για κάθε τύπο δήλωσης, δηλαδή performative όπως ονομάζεται στην FIPA ACL, ορίζονται οι προϋποθέσεις αλλά και το αναμενόμενο αποτέλεσμα.
Αυτή η αυστηρά καθορισμένη σημασιολογία είναι και η βασικότερη διαφορά της KQML και της FIPA ACL.
Σήμερα, στα συστήματα που είναι συμβατά με τις προδιαγραφές της FIPA, χρησιμοποιείται για την επικοινωνία, η γλώσσα FIPA ACL.
Στα υπόλοιπα συστήματα, συνήθως, ορίζεται από την ομάδα ανάπτυξης ένας μηχανισμός σύγχρονης ή ασύγχρονης επικοινωνίας, με βάση την ανταλλαγή μηνυμάτων.
Πλατφόρμες Πολυπρακτορικών Συστημάτων Στην παρούσα ενότητα εξετάζονται πλατφόρμες πρακτόρων που είναι διαθέσιμες σήμερα, ακόμη και εάν η ανάπτυξή τους σταμάτησε και αυτό γιατί υπάρχουν ορισμένες σημαντικές και δημοφιλείς πλατφόρμες που χρησιμοποιούνται ακόμη από την ερευνητική κοινότητα.
Τα συστήματα αυτά, βέβαια, είναι ελάχιστα, καθώς σχεδόν όλες οι πλατφόρμες που παρουσιάζονται είναι σε κατάσταση ενεργής ανάπτυξης με σταθερές εκδόσεις.
Στο πλαίσιο αυτό, παρουσιάζονται σε αλφαβητική σειρά, είκοσι τέσσερις περιπτώσεις, συμπεριλαμβανομένων καθαρών πολυπρακτορικών πλατφορμών, πολυπρακτορικών πλαισίων και πολυπρακτορικών προσομοιωτών, καθώς κάθε μια από αυτές τις περιπτώσεις ενεργεί ή μπορεί να ενεργήσει ως πλατφόρμα πολυπρακτορικών συστημάτων.
Το πλαίσιο Agent Factory [Russell et. al, 2011] είναι μια ανοιχτού κώδικα συλλογή εργαλείων, πλατφορμών και γλωσσών που υποστηρίζει την ανάπτυξη πολυπρακτορικών συστημά1 Το πρότυπο FIPA2000 περιγράφει τις παραμέτρους των μηνυμάτων ACL: www.fipa.org. των.
Το πλαίσιο χωρίζεται σε δύο μέρη, το πρώτο υποστηρίζει την ανάπτυξη των πρακτόρων σε προσωπικούς ηλεκτρονικούς υπολογιστές και εξυπηρετητές ενώ το δεύτερο υποστηρίζει την ανάπτυξη τους σε συσκευές όπως τα κινητά τηλέφωνα και οι αισθητήρες.
Για την πρώτη περίπτωση διατίθεται η βασική έκδοση του πλαισίου, που ονομάζεται Agent Factory Standard Edition (AFSE), ενώ για την δεύτερη διατίθεται η έκδοση Agent Factory Micro Edition (AFME), μια ελαφριά έκδοση, σχεδιασμένη να λειτουργεί με το J2ME-CDLC MIDP2.0.
Σήμερα, το πλαίσιο Agent Factory χρησιμοποιείται σε μια σειρά έργων διαφόρων τομέων, συμπεριλαμβανομένων της κινητής υπολογιστικής (mobile computing) και της ρομποτικής.
Ένα παράδειγμα ερευνητικού έργου που το χρησιμοποιεί είναι το MiRAMixed Reality Agents [Holz et al., 2011], του University College του Δουβλίνου στην Ιρλανδία.
Η πλατφόρμα AgentBuilder [Acronymics Inc., 2004] είναι μια περίπτωση τυπικής πρακτορικής πλατφόρμας που μπορεί να χρησιμοποιηθεί σε πολυάριθμες περιπτώσεις προσομοίωσης.
Ουσιαστικά, είναι μια ολοκληρωμένη σουίτα εργαλείων, συμβατή με την KQML, για την κατασκευή ευφυών πρακτόρων.
Η πλατφόρμα AgentBuilder επιτρέπει ακόμη και στους προγραμματιστές που δεν έχουν κανένα υπόβαθρο στα ευφυή συστήματα ή τις τεχνολογίες των ευφυών πρακτόρων, να οικοδομήσουν γρήγορα και εύκολα τέτοιες εφαρμογές.
Έτσι, ένα από τα κύρια πλεονεκτήματα της πλατφόρμας είναι η απλότητα της και η ευκολία στην χρήση της ακόμη και από μη εξοικειωμένους χρήστες.
Επιπλέον, η πλατφόρμα AgentBuilder βασίζεται στις έννοιες των νοητικών καταστάσεων (mental states), καθιστώντας την συμβατή με την γλώσσα Agent-0 που προτάθηκε από τον Shoham [Shoham, 1993].
Η πλατφόρμα AgentScape [Oey et al., 2010] αποτελεί μια περίπτωση πλατφόρμας που έχει σχεδιαστεί για να υποστηρίζει την ανάπτυξη κατανεμημένων ετερογενών πρακτορικών συστημάτων μεγάλης κλίμακας.
Μέσα στο πλαίσιο της πλατφόρμας αυτής, οι πράκτορες είναι ενεργές οντότητες που βρίσκονται σε συγκεκριμένες τοποθεσίες, επικοινωνούν μεταξύ τους και έχουν πρόσβαση σε μια σειρά από υπηρεσίες.
Η προσέγγιση που ακολουθεί η πλατφόρμα AgentScape για την διαχείριση του περιβάλλοντος, στοχεύει στην επεκτασιμότητα και την αυτονομία.
Αυτό της επιτρέπει να είναι μια πολλά υποσχόμενη πρακτορική πλατφόρμα για μεγάλης κλίμακας μελέτες που περιλαμβάνουν ετερογένεια.
Η πλατφόρμα AGLOBE [Sislak et al., 2006] έχει σχεδιαστεί κυρίως για την δοκιμή πειραματικών σεναρίων που μελετούν, μεταξύ άλλων, τις θέσεις των πρακτόρων σε περιπτώσεις όπου η μεταξύ τους επικοινωνία είναι δύσκολη ή αδύναμη.
Έτσι, η πλατφόρμα παρέχει μια σειρά υπηρεσιών για τους πράκτορες, που περιλαμβάνουν μεταξύ άλλων υποδομές επικοινωνίας, αποθήκευσης, καταλόγου αλλά και ανάπτυξης νέων υπηρεσιών.
Η πλατφόρμα είναι σχετικά ελαφριά και η επικοινωνία σε αυτή είναι πολύ γρήγορη, ωστόσο, δεν είναι ακόμη πλήρως συμβατή με τις προδιαγραφές της FIPA, καθώς για παράδειγμα δεν υποστηρίζει ακόμη την επικοινωνία με άλλες πρακτορικές πλατφόρμες (inter-platform communication).
Αυτή η διαλειτουργικότητα, βέβαια, δεν είναι απαραίτητη κατά την ανάπτυξη κλειστών συστημάτων, όπου δεν απαιτείται επικοινωνία έξω από τα συστήματα αυτά, όπως είναι για παράδειγμα οι περιπτώσεις προσομοιώσεων.
Η πλατφόρμα AGLOBE χρηματοδοτείται από την αμερικανική πολεμική αεροπορία και είναι κατάλληλη για προσομοιώσεις πραγματικών καταστάσεων, που περιλαμβάνουν τόσο στατικές μονάδες, όπως οι πόλεις και τα λιμάνια, όσο και δυναμικές, όπως τα οχήματα.
Σε αυτές τις περιπτώσεις η πλατφόρμα μπορεί να χρησιμοποιηθεί στην εκτεταμένη έκδοση της, όπου παρέχει σύστημα γεωγραφικών πληροφοριών (GIS) και προσαρμογέα περιβάλλοντος (ES).
Η AnyLogic [Borshchev, 2013] είναι μια πολύ-μεθοδική πλατφόρμα προσομοίωσης που υποστηρίζει όχι μόνο πρακτορικές προσομοιώσεις γενικού σκοπού αλλά και μοντελοποίηση δυναμικών, προσανατολισμένων στις διεργασίες συστημάτων.
Η ευελιξία της γλώσσας μοντελοποίησης που παρέχει, επιτρέπει στον χρήστη να συλλάβει την πολυπλοκότητα και την ετερογένεια επιχειρηματικών, οικονομικών και κοινωνικών συστημάτων σε οποιοδήποτε επιθυμητό επίπεδο λεπτομέρειας.
Το γραφικό της περιβάλλον, τα εργαλεία καθώς και τα αντικείμενα της βιβλιοθήκης της, επιτρέπουν την γρήγορη μοντελοποίηση διαφόρων τομέων, όπως της κατασκευαστικής και των συστημάτων εφοδιασμού, των επιχειρηματικών διαδικασιών, των ανθρώπινων πόρων και των καταναλωτών.
Επιπλέον, το αντικειμενοστραφές πρότυπο σχεδίασης που υποστηρίζει, παρέχει τμηματική και σταδιακή, ιεραρχική κατασκευή μεγάλων μοντέλων.
Τέλος, είναι πιθανότατα μια από τις καλύτερες λύσεις για προσομοίωση, όταν δεν υπάρχει επαρκές υπόβαθρο σε γνώσεις προγραμματισμού.
Η πλατφόρμα προσομοιώσεων Cormas [Le Page & Bousquet, 2007] βασίζεται στο προγραμματιστικό περιβάλλον VisualWorks, το οποίο επιτρέπει την ανάπτυξη εφαρμογών στην αντικειμενοστραφή γλώσσα Smalltalk.
Οι προκαθορισμένες οντότητες της πλατφόρμας Cormas είναι γενικές κλάσεις της Smalltalk, από τις οποίες οι χρήστες με την κατάλληλη εξειδίκευση μπορούν να δημιουργήσουν ειδικές οντότητες για το δικό τους μοντέλο.
Αυτό διευκολύνει την κατασκευή πρακτορικών μοντέλων και αντίστοιχα τον σχεδιασμό, την εποπτεία και την ανάλυση σεναρίων προσομοίωσης.
Η πλατφόρμα Cormas είναι κατά κύριο λόγο προσανατολισμένη στην αναπαράσταση των αλληλεπιδράσεων μεταξύ των ενδιαφερομένων μερών σχετικά με την χρήση των φυσικών ανανεώσιμων πόρων.
Γενικά, είναι πολύ δημοφιλής και προσφέρει ενδιαφέροντα χαρακτηριστικά για πραγματικές εφαρμογές.
Η πλατφόρμα Cougaar [Helsinger & Wright, 2005] είναι μια ανοιχτού κώδικα πλατφόρμα, που χρηματοδοτείται από την DARPA.
Ακολουθεί μια γνωσιακή (cognitive) αρχιτεκτονική, προσφέροντας ειδική υποστήριξη για τα ζητήματα των εφοδιαστικών συστημάτων.
Παρότι, δεν είναι συμβατή με τις προδιαγραφές της FIPA, διευκολύνει την ανάπτυξη πολύπλοκων, κατανεμημένων εφαρμογών μεγάλης κλίμακας.
Η γνωσιακή, άλλωστε, αρχιτεκτονική της είναι άλλο ένα πολλά υποσχόμενο χαρακτηριστικό, δεδομένου ότι η πλειοψηφία των διαθέσιμων σήμερα πλατφορμών δεν χειρίζονται τέτοια ζητήματα, παρά το γεγονός ότι είναι σημαντικά για την προσομοίωση της ανθρώπινης σκέψης και δράσης.
Η πλατφόρμα CybelePro [CybelePro, 2006] παρέχει στους χρήστες της μια ισχυρή υποδομή υψηλής απόδοσης για την ταχεία ανάπτυξη συστημάτων μεγάλης κλίμακας.
Η πλατφόρμα CybelePro αποτελεί την εμπορική έκδοση της εταιρίας Intelligent Automation Inc.
Η υποδομή των πρακτόρων Cybele έχει χρησιμοποιηθεί εκτενώς από την κυβέρνηση, την βιομηχανία και την ακαδημαϊκή κοινότητα για εφαρμογές όπως η στρατιωτική υλικοτεχνική υποστήριξη, η μοντελοποίηση, η προσομοίωση και ο έλεγχος των εναέριων και επίγειων μέσων μεταφοράς, τα δίκτυα επικοινωνιών και η ανάπτυξη ανοικτών συστημάτων.
Το EMERALD [Kravari et al., 2010b] είναι ένα πλαίσιο για διαλειτουργικούς ευφυείς πράκτορες που δρουν στον Σημασιολογικό Ιστό, το οποίο υποστηρίζει την δυνατότητα επικοινωνίας και συνεργασίας με άλλες πλατφόρμες [Kravari & Bassiliades, 2012c].
Ένα από τα σημαντικά χαρακτηριστικά του πλαισίου είναι η υποστήριξη συλλογιστικής μεταξύ των πρακτόρων, με την χρήση έμπιστων, ανεξάρτητων υπηρεσιών.
Το πλεονέκτημα αυτής της προσέγγισης είναι ότι κάθε πράκτορας μπορεί να ανταλλάξει τα επιχειρήματά του με οποιονδήποτε άλλο πράκτορα, χωρίς να χρειάζεται όλοι να συμμορφώνονται με το ίδιο πρότυπο κανόνων ή λογικής.
Το EMERALD είναι πλήρως συμβατό με τις προδιαγραφές της FIPA, καθώς, αναπτύχθηκε πάνω από την πλατφόρμα JADE και υποστηρίζει μια σειρά λογικών και γλωσσών κανόνων (και όχι μόνο), όπως οι Java, Jess, XML, RDF, RuleML και Prolog.
Επιπρόσθετα, το EMERALD είναι η μόνη πρακτορική πλατφόρμα που υποστηρίζει μηχανισμούς φήμης και αξιοπιστίας, προκειμένου να στηρίξει την αποτελεσματική λήψη αποφάσεων μέσα σε ένα πολυπρακτορικό σύστημα.
Μέχρι σήμερα, έχει χρησιμοποιηθεί για την μελέτη των πρακτόρων που ενεργούν για λογαριασμό των χρηστών τους, σε περιπτώσεις όπως το (ηλεκτρονικό) εμπόριο.
Η πλατφόρμα προσομοίωσης GAMA [Grignard et al., 2013] παρέχει ένα πλήρες περιβάλλον μοντελοποίησης και προσομοίωσης για την οικοδόμηση χωρικών πολυπρακτορικών προσομοιώσεων.
Συγκεκριμένα, παρέχει δυνατότητες σχετικές με τον συνδυασμό απεικόνισης τριών διαστάσεων (3D), γεωγραφικών πληροφοριών (GIS) και πολυεπίπεδης μοντελοποίησης.
Υποστηρίζει, επιπλέον, δυνατότητες για την οικοδόμηση μεγάλων μοντέλων γραμμένων στην GAML, μιας γλώσσας προσανατολισμένης στους πράκτορες, με ένα προαιρετικό γραφικό εργαλείο που παρέχει γρήγορο σχεδιασμό και προτυποποίηση.
Οι χρήστες έχουν ακόμη την δυνατότητα να εφοδιάσουν τους πράκτορες τους μέσα από γεωγραφικά δεδομένα, βάσεις δεδομένων ή αρχεία και να εκτελέσουν μεγάλης κλίμακας προσομοιώσεις (εκατομμυρίων πρακτόρων).
Επιπλέον, μπορούν να σχεδιάσουν πλούσιες γραφικές διεπαφές, οι οποίες θα υποστηρίζουν εποπτεία των πρακτόρων σε βάθος, ενέργειες ελεγχόμενες από τον χρήστη και πολλαπλές απεικονίσεις δύο (2D) και τριών διαστάσεων (3D).
Το INGENIAS Development Kit [Gómez-Sanz & Pavón, 2004] είναι ένα εργαλείο για την ανάπτυξη πολυπρακτορικών συστημάτων που υποστηρίζει την μεθοδολογία INGENIAS.
Η μεθοδολογία INGENIAS προωθεί μια προσέγγιση καθοδηγούμενη από το μοντέλο και βασίζεται στην χρήση του INGENME (INGENIAS Meta-Editor), ενός εργαλείου για την παραγωγή αυτοδύναμων οπτικών συντακτών για γλώσσες, οι οποίες ορίζονται χρησιμοποιώντας ένα αρχείο XML.
Έτσι, το INGENME χρησιμοποιείται για να παράγει έναν οπτικό συντάκτη για τα πολυπρακτορικά συστήματα, των οποίων οι προδιαγραφές απαιτούν, για παράδειγμα, την παραγωγή κώδικα ή εγγράφων html.
Επίσης, το INGENIAS αντιμετωπίζει και γενικά ζητήματα μηχανικής, μέσω μιας συγκεκριμένης δομής φακέλων και ενός εργαλείου διακίνη-
Η πλατφόρμα JACK [Winikoff, 2005] είναι ένα ώριμο, διαπλατφορμικό περιβάλλον για την δημιουργία, την εκτέλεση και την ολοκλήρωση πολυπρακτορικών συστημάτων εμπορικής ποιότητας.
Η πλατφόρμα είναι χτισμένη πάνω σε μια ισχυρή λογική θεμελίωση, αυτή των πεποιθήσεων, των επιθυμιών και των προθέσεων (BDI), η οποία είναι μια διαισθητική και ισχυρή αφαίρεση που επιτρέπει στους προγραμματιστές να διαχειριστούν την πολυπλοκότητα του προβλήματος.
Το περιβάλλον του JACK είναι εξ 'ολοκλήρου γραμμένο σε Java, έτσι είναι εξαιρετικά φορητό και λειτουργεί οπουδήποτε, από τηλέφωνα μέχρι εξυπηρετητές πολλαπλών επεξεργαστών.
Επιπλέον, το γεγονός ότι βασίζεται στην γλώσσα Java σημαίνει ότι μπορεί να τρέξει με πολλαπλά νήματα σε πολλαπλούς επεξεργαστές, να διαθέτει γραφικές διεπαφές ανεξάρτητες από την πλατφόρμα και να ενσωματώνεται εύκολα σε βιβλιοθήκες τρίτων.
Άλλωστε, χρησιμοποιεί μια διαισθητική προσέγγιση, η οποία επεκτείνει την γλώσσα προγραμματισμού Java με συγκεκριμένες λέξεις-κλειδιά που αφορούν τους πράκτορες.
Ωστόσο, παρότι, είναι η πρώτη πλατφόρμα που υποστηρίζει τέτοιες δυνατότητες και γενικές δομές, δεν είναι ακόμη πλήρως συμβατή με τις προδιαγραφές της FIPA.
Το JADE είναι ένα πλαίσιο πλήρως υλοποιημένο στην γλώσσα Java, που απλοποιεί την υλοποίηση πολυπρακτορικών συστημάτων μέσω ενός ενδιάμεσου λογισμικού συμβατού με τις προδιαγραφές της FIPA.
Η πλατφόρμα μπορεί να κατανεμηθεί μεταξύ μηχανημάτων, τα οποία δεν είναι απαραίτητο να μοιράζονται το ίδιο λειτουργικό.
Ο έλεγχος της κατανομής μπορεί να γίνει μέσω μιας απομακρυσμένης γραφικής διεπαφής ενώ η διαμόρφωση της κατανομής μπορεί να αλλάξει ακόμη και κατά τον χρόνο εκτέλεσης, με την μετακίνηση πρακτόρων από ένα μηχάνημα σε ένα άλλο, όπως και όταν απαιτείται.
Το JADE έχει ως ελάχιστη απαίτηση συστήματος, την έκδοση 1.2 της Java (JDK), επομένως, μπορεί να χρησιμοποιηθεί σε συσκευές με περιορισμένους πόρους, όπως τα κινητά τηλέφωνα.
Η πλατφόρμα JADE είναι προσανατολισμένη στην βιομηχανία και αυτή την στιγμή είναι η πιο δημοφιλής πλατφόρμα πρακτόρων στην ακαδημαϊκή και την βιομηχανική κοινότητα.
Άλλωστε, είναι ένα δωρεάν, ανοιχτού κώδικα, σταθερό λογισμικό που διανέμεται από την Telecom Italia, τον κάτοχο των πνευματικών δικαιωμάτων.
Από το Μάιο του 2003 έχει δημιουργηθεί ένα συμβούλιο για το JADE, το οποίο επιβλέπει την διαχείριση του έργου.
Επί του παρόντος, το συμβούλιο αυτό αποτελείται από πέντε μέλη, την Telecom Italia, την Motorola, την Whitestein Technologies AG, την Profactor GmbH και την France Telecom R&D.
Πρακτικά, η μεγάλη αποδοχή του JADE οφείλεται όχι μόνο στις δυνατότητες φορητότητας και το πλήρως υλοποιημένο μοντέλο επικοινωνίας πρακτόρων της FIPA αλλά και στην αρχιτεκτονική επικοινωνίας που παρέχει, μέσω της οποίας επιτρέπει τον εύκολο, αποδοτικό και ευέλικτο χειρισμό μηνυμάτων που ανταλλάσσουν οι πράκτορες.
Η βασική αρχή της αρχιτεκτονικής είναι η δημιουργία μιας ουράς μηνυμάτων ACL για κάθε πράκτορα και η δυνατότητα πρόσβασης σε αυτή με πολλούς διαφορετικούς τρόπους.
Επιπλέον, η μεταφορά των μηνυμάτων γίνεται με τρόπο απόλυτα διαφανή στον χρήστη, έτσι, ο χρήστης έχει την δυνατότητα να επιλέγει κάθε φορά το καταλληλότερο για τις ανάγκες του πρωτόκολλο μεταφοράς, όπως για παράδειγμα μεταξύ των HTTP, Java RMI και IIOP.
Πέραν της διαχείρισης των μηνυμάτων μεταξύ των πρακτόρων, το JADE παρέχει ευέλικτους και διαφανείς μηχανισμούς για την διαχείριση του ίδιου του συστήματος, οι σημαντικότεροι εκ των οποίων είναι οι (Agent Management System) και DF (Directory Facilitator).
Ο AMS είναι, στην πραγματικότητα, ένας πράκτορας, που έχει τον εποπτικό έλεγχο της πλατφόρμας, παρέχοντας τις περισσότερες από τις υπηρεσίες της, ενώ ο DF είναι ο πράκτορας, που παρέχει τις υπηρεσίες καταλόγου στην πλατφόρμα.
Επιπρόσθετα, το JADE υποστηρίζει και διασύνδεση με το σύστημα κανόνων Jess, παρέχοντας με αυτό τον τρόπο δυνατότητες ελέγχου των συλλογιστικών ικανοτήτων των πρακτόρων.
Η πλατφόρμα Jadex [Braubach & Pokahr, 2013] ακολουθεί το μοντέλο BDI (πεποίθηση – επιθυμία – πρόθεση) και διευκολύνει την κατασκευή ευφυών πρακτόρων, επιτρέποντας τον προγραμματισμό τους σε XML και Java.
Το ερευνητικό πρόγραμμα για το Jadex διεξάγεται από την ομάδα κατανεμημένων και πληροφοριακών συστημάτων του πανεπιστημίου του Αμβούργου.
Το ανεπτυγμένο λογισμικό είναι διαθέσιμο υπό την άδεια LGPL GNUs και εξελίσσεται συνεχώς.
Το Jadex έχει χρησιμοποιηθεί στο πλαίσιο διαφόρων ερευνών, διδασκαλίας και βιομηχανικών εφαρμογών, μερικά από τα οποία περιγράφονται στην ιστοσελίδα του2.
Έχει χρησιμοποιηθεί, ακόμη, για την δημιουργία εφαρμογών σε τομείς, όπως η προσομοίωση και ο κινητός προγραμματισμός.
Για παράδειγμα, το Jadex χρησιμοποιήθηκε για την ανάπτυξη μιας πολυπρακτορικής εφαρμογής για την διαπραγμάτευση των προγραμμάτων θεραπείας στα νοσοκομεία [Braubach et al., 2014].
Στην τελευταία έκδοση, το μοντέλο προγραμματισμού του Jadex, βασίζεται στην έννοια των ενεργών συστατικών, που 2 Ιστοσελίδα Jadex: http://www.activecomponents.org/bin/view/About/New+Home με την σειρά τους βασίζονται εννοιολογικά στην SCA (service component architecture).
Αυτό επιτρέπει το σχεδιασμό μιας εφαρμογής ως ιεραρχική αποσύνθεση των συστατικών που αλληλεπιδρούν μέσω υπηρεσιών και, έτσι, η πολυπλοκότητα γίνεται ελεγχόμενη.
Άλλωστε, τα ενεργά συστατικά επεκτείνουν την SCA σε διάφορες κατευθύνσεις, καθώς πρόκειται να εργαστούν σε ταυτόχρονα και κατανεμημένα δυναμικά συστήματα.
Το JAMES II (Java Framework for Modeling & Simulation) [Himmelspach & Uhrmacher, 2007] είναι ένα πλαίσιο βασισμένο στην γλώσσα Java, χωρίς εξωτερικές εξαρτήσεις, για μοντελοποίηση και προσομοίωση.
Βασίζεται σε μια αρχιτεκτονική αρθρωμάτων (plug-in), η οποία ονομάζεται «plug'n simulate».
Αυτή η αρχιτεκτονική επιτρέπει σε οποιαδήποτε τεχνική μοντελοποίησης και προσομοίωσης να ενσωματωθεί στο πλαίσιο μέσω αρθρωμάτων, επιτρέποντας, έτσι, μέγιστη ευελιξία.
Επιπλέον, το πλαίσιο παρέχει καλά ορισμένες αφαιρέσεις, αλγορίθμους, ροές εργασίας και εργαλεία, με έμφαση στην αποτελεσματικότητα.
Σε αυτό το πλαίσιο, το JAMES II παρέχει εκατοντάδες αρθρώματα, επιτρέποντας την αυτόματη επιλογή από την λίστα των διαθέσιμων εναλλακτικών αρθρωμάτων.
Ωστόσο, δεν επιβάλλει την επαναχρησιμοποίηση των τμημάτων του αλλά επιτρέπει στους χρήστες του να επιλέξουν αυτοί ποια λειτουργία θέλουν να εφαρμόσουν.
Επιπλέον, επιτρέπει τον πλήρη έλεγχο των τύπων και των παραμέτρων των πειραμάτων, όπως οι σαρώσεις παραμέτρων, η βελτιστοποίηση, οι υπολογιστικές πολιτικές και ο αριθμός των επαναλήψεων.
Μέχρι στιγμής, το JAMES II έχει χρησιμοποιηθεί σε διάφορους τομείς εφαρμογής, από την υλοποίηση μικρών πειραμάτων έως την υλοποίηση πειραμάτων μεγάλης διασποράς.
Το JAS [Sonnessa, 2004] δεν είναι μια καθαρά πρακτορική πλατφόρμα, ωστόσο, λειτουργεί ως τέτοια.
Το JAS είναι ένα εργαλείο προσομοίωσης που έχει σχεδιαστεί ειδικά για την μοντελοποίηση ευφυών πρακτόρων.
Πρόκειται για έναν κλώνο της βιβλιοθήκης Swarm, που αναπτύχθηκε από τους ερευνητές του ινστιτούτου Santa Fe, γραμμένο στην γλώσσα Java.
Πολλά από τα χαρακτηριστικά του JAS βασίζονται σε ανοιχτού κώδικα βιβλιοθήκες τρίτων.
Ο πυρήνας του είναι η μηχανή προσομοίωσης του, που βασίζεται στο πρότυπο προσομοίωσης διακριτών γεγονότων, το οποίο επιτρέπει διαχείριση του χρόνου με μεγάλη ακρίβεια και σε πολλαπλά επίπεδα.
Χάρη σε αυτή την μηχανή διακριτών γεγονότων, το JAS αποτελεί ένα καλό εργαλείο για την προσομοίωση τόσο διακριτών όσο και συνεχών πρακτορικών μοντέλων.
Αυτό καθιστά το JAS ένα γενικό εργαλείο προσομοίωσης διακριτών γεγονότων, που μπορεί όμως να αναπαραστήσει και μοντέλα προσομοίωσης ροής διαδικασιών.
Το Jason [Bordini et al., 2007] είναι ένας διερμηνέας για μια επεκτεταμένη έκδοση της AgentSpeak [Rao, 1996], μιας BDI γλώσσας λογικού προγραμματισμού, προσανατολισμένης στους πράκτορες.
Το Jason είναι γραμμένο στην γλώσσα Java, υλοποιεί την λειτουργική σημασιολογία της γλώσσας και παρέχει μια πλατφόρμα, με πλήθος παραμετροποιήσιμων χαρακτηριστικών, για την ανάπτυξη πολυπρακτορικών συστημάτων.
Χρησιμοποιώντας το περιβάλλον του Jason, ένα πολυπρακτορικό σύστημα μπορεί να κατανεμηθεί μέσα σε ένα δίκτυο με ευκολία.
Μερικά από τα χαρακτηριστικά του είναι η επικοινωνία μεταξύ των πρακτόρων, οι σχολιασμοί στις ετικέτες σχεδίου, οι πλήρως παραμετροποιήσιμες λειτουργίες επιλογής και οι λειτουργίες εμπιστοσύνης.
Ακόμη, προσφέρει μια αρχιτεκτονική εύκολα επεκτάσιμη από τους χρήστες και ένα σαφώς ορισμένο πολυπρακτορικό περιβάλλον, που μπορεί να χρησιμοποιηθεί για προσομοιώσεις πραγματικών φαινομένων.
Το Jason μπορεί, μεταξύ άλλων, να ενσωματωθεί και να χρησιμοποιηθεί στο περιβάλλον της πλατ-
Το JIAC (Java-based Intelligent Agent Componentware) [Hirsch et al., 2009] είναι ένα πλαίσιο και μια αρχιτεκτονική που διευκολύνει την ανάπτυξη και την λειτουργία μεγάλης κλίμακας, κατανεμημένων εφαρμογών και υπηρεσιών.
Υποστηρίζει τον σχεδιασμό και την ανάπτυξη πολυπρακτορικών συστημάτων, από την σύλληψη έως την πλήρη ανάπτυξη τους.
Επιτρέπει, μεταξύ άλλων, την επαναχρησιμοποίηση εφαρμογών και υπηρεσιών, ακόμη και την τροποποίηση τους κατά την διάρκεια εκτέλεσης τους.
Τέλος, τα κομβικά σημεία του JIAC είναι η δυνατότητα κατανεμημένης υλοποίησης, η επεκτασιμότητα, η προσαρμοστικότητα και η αυτονομία.
Το MaDKit (Multiagent Development Kit) [Gutknecht & Ferber, 2000] είναι μια ανοιχτού κώδικα επεκτάσιμη πολυπρακτορική πλατφόρμα, βασισμένη στο οργανωτικό μοντέλο AGR (Agent/Group/Role) και την γλώσσα Java.
Οι πράκτορες στην πλατφόρμα MaDKit δρουν σε ομάδες, ο καθένας με τον δικό του ρόλο, δημιουργώντας τεχνητές κοινωνίες.
Η πλατφόρμα παρέχει ορισμένες γενικές λειτουργίες σχετικά με τους πράκτορες, όπως είναι η διαχείριση του κύκλου ζωής, η ανταλλαγή μηνυμάτων και η κατανεμημένη ανάπτυξη ενώ επιτρέπει μεγάλη ετερογένεια στις αρχιτεκτονικές των πρακτόρων και τις γλώσσες επικοινωνίας.
Το MASON [Luke et al., 2005] είναι ένα γρήγορο, εύκολα επεκτάσιμο εργαλείο διακριτών γεγονότων.
Είναι υλοποιημένο στην γλώσσα Java και λειτουργεί ως πλατφόρμα προσομοίωσης για πολυπρακτορικά συστήματα.
Είχε σχεδιαστεί για να χρησιμεύει ως βάση για ένα ευρύ φάσμα εργασιών προσομοίωσης πολυπρακτορικών συστημάτων, από περιπτώσεις ρομποτικής έως περιπτώσεις μηχανικής μάθησης σε κοινωνικά πολύπλοκα περιβάλλοντα.
Η πλατφόρμα MASON διαχωρίζει προσεκτικά το μοντέλο με την απεικόνιση του, επιτρέποντας έτσι στα μοντέλα να αποσπώνται δυναμικά από τις εφαρμογές απεικόνισης τους ή ακόμη και να συνδέονται με περισσότερες από μια τέτοιες εφαρμογές.
Το πολυπρακτορικό προγραμματιστικό περιβάλλον μοντελοποίησης NetLogo [Tisue & Wilensky, 2004] έχει σχεδιαστεί, σύμφωνα με το πνεύμα της γλώσσας προγραμματισμού Logo.
Το περιβάλλον αυτό επιτρέπει την εξερεύνηση ποικίλων φαινομένων, καθώς παρέχει μια εκτενή βιβλιοθήκη μοντέλων για ένα ευρύ φάσμα τομέων, όπως η οικονομία, η βιολογία, η φυσική, η χημεία, η ψυχολογία και η δυναμική, εν γένει, των συστημάτων.
Μπορεί να χρησιμοποιηθεί τόσο από τους εκπαιδευτικούς στην εκπαιδευτική κοινότητα όσο και από ειδικούς που δεν έχουν υπόβαθρο προγραμματισμού στο μοντέλο, που σχετίζεται με τα φαινόμενα που μελετώνται.
Πέραν της εξερεύνηση, το περιβάλλον της NetLogo επιτρέπει και την συγγραφή νέων μοντέλων αλλά και την τροποποίηση υφισταμένων.
Επιπλέον, υποστηρίζει το HubNet, μια τεχνολογία που χρησιμοποιεί την NetLogo για την εκτέλεση συμμετοχικών προσομοιώσεων μέσα στην τάξη.
Για παράδειγμα, σε μια συμμετοχική προσομοίωση, μια ομάδα χρηστών λαμβάνει μέρος στην θέσπιση της συμπεριφοράς ενός συστήματος, ενεργεί δηλαδή ως ένας ξεχωριστός, ανεξάρτητος φορέας.
Έτσι, η NetLogo είναι πολύ δημοφιλής στον τομέα της εκπαίδευσης και της ερευνητικής κοινότητας.
Η σουίτα Repast [North et al., 2007] είναι μια ομάδα προηγμένων, ανοιχτού κώδικα και, επομένως, ελεύθερων πολυπρακτορικών πλατφορμών μοντελοποίησης και προσομοίωσης που βρίσκονται υπό συνεχή ανάπτυξη για περισσότερα από 14 χρόνια.
Αρχικά, αναπτύχθηκε στο Πανεπιστήμιο του Σικάγο από ένα εργαστήριο κοινωνικών επιστημών, το Social Science Research Computing Lab.
Είναι ένα ευρέως χρησιμοποιούμενο πολυπρακτορικό εργαλείο, που παρέχει πολλαπλές υλοποιήσεις σε διάφορες γλώσσες με πολλά ενσωματωμένα χαρακτηριστικά.
Επί του παρόντος, υπάρχουν δύο εκδόσεις του Repast και διάφοροι τρόποι για να γράψει κανείς ένα μοντέλο σε κάθε έκδοση, με στόχο την ικανοποίηση πολλών διαφορετικών ειδών χρηστών και περιπτώσεων.
Το SeSAm (Shell for Simulated Agent Systems) [Klügl, 2009] είναι ένα γενικό περιβάλλον για την ανάπτυξη και την προσομοίωση πολυπρακτορικών μοντέλων, που επιτρέπει στους επιστήμονες να κατασκευάσουν μοντέλα μέσω του οπτικού προγραμματισμού, δεδομένου ότι το πρότυπο των ευφυών πρακτόρων είναι αρκετά διαισθητικό, ειδικά στις περιπτώσεις μοντελοποίησης κοινωνιών.
Οι κύριες οντότητες σε ένα μοντέλο του SesAm είναι οι πράκτορες, οι πόροι και ο κόσμος.
Το SeSAm επιτρέπει, επιπλέον, την κλιμάκωση για τις περιπτώσεις πολύπλοκων πολυπρακτορικών προσομοιώσεων, όπως είναι, για παράδειγμα, χαρακτηριστικά και λειτουργίες ορισμένες από τον χρήση αλλά και τύποι δεδομένων ειδικά ορισμένοι για το κάθε μοντέλο.
Οι προσομοιώσεις μπορούν να εκτελούνται για διαφορετικές καταστάσεις και να συγκεντρώνονται τελικά στα λεγόμενα πειράματα, ενώ μέσω της ανάλυσης είναι δυνατή η συλλογή και η οπτικοποίηση των δεδομένων προσομοίωσης.
Πριν από την έναρξη εκτέλεσης κάθε προσομοίωσης, το μοντέλο μεταγλωττίζεται με την χρήση τεχνικών βελτιστοποίησης και έτσι η δυναμική του οπτικού προγραμματισμού συνδυάζεται με την ταχύτητα εκτέλεσης.
Το SeSAm ήταν αρχικά ένα σύστημα βασισμένο στη γλώσσα Lisp, όμως από το 2000 επανασχεδιάστηκε και υλοποιήθηκε στην γλώσσα Java.
Τέλος, το Swarm [Swarmfest, 2012] είναι το πρώτο επαναχρησιμοποιήσιμο εργαλείο λογισμικού που δημιουργήθηκε για την μοντελοποίηση και προσομοίωση ευφυών πρακτόρων.
Αναπτύχθηκε στο ινστιτούτο Santa Fe το 1994 και σχεδιάστηκε ειδικά για εφαρμογές τεχνητής ζωής και μελέτες πολυπλοκότητας, με σκοπό την προσομοίωση πολύπλοκων προσαρμοστικών πολυπρακτορικών συστημάτων.
Τέλος, παρότι ήταν γραμμένο στην γλώσσα Objective-C, στην συνέχεια μεταφέρθηκε και αυτό στη γλώσσα Java.
Σύγκριση και Αξιολόγηση Πολυπρακτορικών Συστημάτων Όπως είναι φανερό, η ετερογένεια αλλά και ο μεγάλος αριθμός διαθέσιμων συστημάτων και εργαλείων για τους ευφυείς πράκτορες είναι γεγονός.
Επομένως, η επιλογή της σωστής ή της καταλληλότερης πλατφόρμας για ένα δεδομένο πρόβλημα εξακολουθεί να είναι μια πρόκληση για κάθε ερευνητή.
Η έλλειψη συγκεκριμένων τυποποιημένων κριτηρίων είναι ένα ανοικτό ζήτημα στον τομέα των ευφυών πρακτόρων, που τείνει να αποκτά μόνο ατομικές λύσεις.
Ωστόσο, η ύπαρξη καθολικών κριτηρίων για την σύγκριση και την αξιολόγηση των πολυπρακτορικών συστημάτων θα προσφέρει μια σειρά πλεονεκτημάτων.
Από την μια πλευρά, θα είναι δυνατή η σύγκριση διαφορετικών ερευνών και, από την άλλη πλευρά, οι συγκρίσεις και οι αξιολογήσεις κάθε πλατφόρμας κατά τη διάρκεια ενός χρονικού διαστήματος θα αποκαλύπτουν την πρόοδο που έχει ή δεν έχει επιτευχθεί ακόμη και αν οι έρευνες διεξάγονται από διαφορετικούς ερευνητές.
Σε μια προσπάθεια να παρουσιαστούν οι διαθέσιμες πλατφόρμες με ομοιόμορφο τρόπο, που να διευκολύνει την σύγκριση μεταξύ τους και την εξαγωγή συμπερασμάτων έγινε, αρχικά, μια μελέτη της σχετικής βιβλιογραφίας.
Στόχος της μελέτης ήταν να συγκεντρωθούν τα πλέον χρησιμοποιούμενα κριτήρια αξιολόγησης, ακόμη και αν δεν αναφέρονται ρητά ως τέτοια [Gupta & Kansal, 2011;
Στην συνέχεια, μελετήθηκαν διεξοδικά οι ερευνητικές αρχές που προτείνονται από τον Braubach και τους συνεργάτες του [Braubach et al., 2008].
Οι ερευνητές αυτοί προτείνουν ένα γενικό κατάλογο καθολικών κριτηρίων για την ανάπτυξη ετερογενών πολυπρακτορικών έργων, ο οποίος βασίζεται σε υπάρχοντα πρότυπα όπως το ISO 9126 και το ISO 9241 [ISO/IEC 9126-1:2001, 2001;
Με βάση τα παραπάνω, στο πλαίσιο της παρούσας διατριβής, προτείνεται μια συγκεκριμένη κατευθυντήρια γραμμή για την αξιολόγηση και την σύγκριση των πολυπρακτορικών συστημάτων, η οποία σχετίζεται άμεσα με το πεδίο δράσης και την ποιότητα των παρεχόμενων υπηρεσιών κάθε πλατφόρμας.
Συγκεκριμένα, προτείνεται η χρήση πέντε διακριτών κατηγοριών κριτηρίων, των ιδιοτήτων κάθε πλατφόρμας (platform properties), της χρηστικότητας της (usability), της ικανότητας λειτουργίας της (operating ability), των γενικών χαρακτηριστικών της (pragmatics) και της διαχείρισης της ασφάλειας (security management) που προσφέρει.
Κάθε μία από αυτές τις κατηγορίες έχει μια σειρά από επιμέρους υποκριτήρια που αναλύουν με λεπτομέρεια κάθε πλατφόρμα.
Πίνακας 3.1.
Κριτήρια αξιολόγησης των πολυπρακτορικών συστημάτων.
Απλότητα Απόδοση Εγκατάσταση Γενική ασφάλεια Άδεια Εκμάθηση Σταθερότητα Υποστήριξη χρηστών Δικαιοσύνη
Οι ιδιότητες της πλατφόρμας αναφέρονται στις πρωτογενείς έννοιες κάθε πλατφόρμας, περιγράφοντας τα βασικά χαρακτηριστικά της, που είναι απαραίτητα για έναν πιθανό χρήστη ή προγραμματιστή προκειμένου να κατανοήσει το πεδίο και το εύρος χρήσης της πλατφόρμας.
Η χρηστικότητα αναφέρεται στην καταλληλότητα της πλατφόρμας για την κατασκευή των πολυπρακτορικών εφαρμογών.
Η ικανότητα λειτουργίας αναφέρεται σε όλες τις πτυχές που λαμβάνονται υπόψη κατά την εκτέλεση.
Με άλλα λόγια, η ικανότητα λειτουργίας δείχνει την ποιότητα της πλατφόρμας.
Τα γενικά χαρακτηριστικά αναφέρονται σε εξωτερικούς παράγοντες που είτε σχετίζονται με την κατασκευή είτε με την λειτουργία της πλατφόρμας.
Πιο συγκεκριμένα, υποδεικνύουν εάν η πλατφόρμα μπορεί να χρησιμοποιηθεί στην πράξη ή όχι.
Τέλος, η διαχείριση της ασφάλειας αναφέρεται, φυσικά, σε θέματα ασφάλειας, υποδεικνύοντας εάν η πλατφόρμα θεωρείται ασφαλής ή όχι.
Στον Πίνακα παρουσιάζονται οι κατηγορίες των κριτηρίων μαζί με τα επιμέρους υποκριτήρια τους.
Οι ιδιότητες και τα γενικά χαρακτηριστικά της πλατφόρμας είναι αρκετά κατανοητά, χωρίς ανάγκη περαιτέρω επεξηγήσεων.
Η ομάδα των κριτήριων χρηστικότητας είναι επίσης εύκολα κατανοητή.
Η απλότητα υποδεικνύει, αφενός, πόσο απλοί και κατανοητοί είναι οι μηχανισμοί της πλατφόρμας και, αφετέρου, πόσο εύκολο είναι για έναν προγραμματιστή να χρησιμοποιήσει την ίδια την πλατφόρμα.
Το κριτήριο της εκμάθησης αναφέρεται στο εάν οι μηχανισμοί της πλατφόρμας είναι οικείοι για την ερευνητική κοινότητα ή όχι, δεδομένου ότι ήδη γνωστοί μηχανισμοί χρειάζονται λιγότερη ή και καθόλου προσπάθεια για την εκμάθηση και την χρήστη τους ενώ άγνωστοι μηχανισμοί θα μπορούσαν να απαιτήσουν χρόνο και προσπάθεια.
Η δυνατότητα κλιμάκωσης αναφέρεται σε ένα πιθανόν κρίσιμο ζήτημα, δηλαδή στο εάν η πλατφόρμα έχει τη δυνατότητα να χειριστεί προβλήματα διαφόρων μεγεθών.
Η συμμόρφωση σε πρότυπα, από την άλλη πλευρά, είναι ένα από τα πιο σημαντικά χαρακτηριστικά μιας πολυπρακτορικής πλατφόρμας, καθώς είναι ένας δείκτης της ευελιξίας της πλατφόρμας, δηλαδή όσο περισσότερα πρότυπα υιοθετεί μια πλατφόρμα, τόσο πιθανότερο είναι να συνεργαστεί με άλλες εφαρμογές.
Η επικοινωνία, τέλος, είναι επίσης σημαντική, δεδομένου ότι αναφέρεται στον τύπο των μηνυμάτων τόσο της ενδοεπικοινωνίας όσο και της επικοινωνίας μεταξύ διαφορετικών συστημάτων.
Η ομάδα των κριτηρίων που σχετίζονται με την ικανότητα λειτουργίας, από την άλλη πλευρά, αναφέρεται σε πιο εξειδικευμένα θέματα.
Η απόδοση περιγράφει πόσο αποτελεσματική είναι η πλατφόρμα σε σχέση με τον χώρο και τον χρόνο λειτουργίας.
Σε αυτό το πλαίσιο, μελετήθηκε πόσο γρήγορη είναι η επικοινωνία των πρακτόρων αλλά και ποια είναι η ταχύτητα λειτουργίας της ίδιας της πλατφόρμας.
Οι τιμές κυμαίνονται από μέτριες, υπό την έννοια ότι η ταχύτητα είναι ανεκτή αλλά όχι ιδιαίτερα γρήγορη, έως υψηλές, υπό την έννοια ότι η απόδοση της πλατφόρμας είναι εξαιρετική.
Η σταθερότητα αναφέρεται στο πόσο σταθερή είναι η πλατφόρμα στην περίπτωση μακροχρόνιας εκτέλεσης ενώ η ευρωστία αναφέρεται στο πόσο ανεκτική είναι η πλατφόρμα σε περιπτώσεις σφαλμάτων.
Στην παρούσα μελέτη, η ευρωστία της πλατφόρμας είναι μια τιμή που αντιπροσωπεύει την συχνότητα των διακοπών λειτουργίας, με βάση όλα τα διαθέσιμα στοιχεία, και κυμαίνεται από μέτρια έως υψηλή (πολλές διακοπές).
Στην συνέχεια, οι γλώσσες προγραμματισμού και τα λειτουργικά συστήματα αναφέρονται στις γλώσσες και στα συστήματα που χρησιμοποιούνται στην ή από την πλατφόρμα, αντιστοίχως.
Τέλος, η διαχείριση της ασφάλειας είναι μια σημαντική πτυχή για τα πολυπρακτορικά συστήματα.
Η κλασική περίπτωση της γενικής ασφάλειας αναφέρεται σε εκείνα τα πρωτόκολλα και τους μηχανισμούς που προστατεύουν την πρόσβαση στην πλατφόρμα ενώ η δικαιοσύνη αναφέρεται σε εκείνους τους ειδικούς μηχανισμούς που εγγυώνται την ίση μεταχείριση.
Επιπλέον, η ασφάλεια της πλατφόρμας απαιτεί περισσότερους μηχανισμούς προκειμένου να διασφαλιστεί η ενίσχυση της απρόσκοπτης και ομαλής της λειτουργίας, μέσω, μεταξύ άλλων, της αποτροπής κακόβουλων ενεργειών.
Στην παρούσα μελέτη, η ασφάλεια της πλατφόρμας κυμαίνεται από ασθενή σε καλή, υψηλή και ισχυρή (με αυτή την σειρά) υποδεικνύοντας την ποσότητα των μηχανισμών ασφαλείας που είναι διαθέσιμα στην πλατφόρμα.
Ωστόσο, τα κλασικά ζητήματα ασφάλειας δεν είναι αρκετά για την κοινότητα των πρακτόρων, μια πτυχή που κερδίζει ολοένα και περισσότερο προσοχή από την ερευνητική κοινότητα είναι η διαχείριση της εμπιστοσύνης και της αξιοπιστίας μεταξύ των πρακτόρων που δρουν στα πολυπρακτορικά συστήματα.
Μοντέλα εμπιστοσύνης βοηθούν τους πράκτορες να αποφασίσουν ποιον να εμπιστευτούν, ενθαρρύνοντας αξιόπιστη συμπεριφορά και αποτρέποντας ανέντιμη δράση, παρέχοντας το μέσο για να ποσοτικοποιηθεί η φήμη και, εν τέλει, η εμπιστοσύνη στο περιβάλλον [Resnick et al., 2000].
Με άλλα λόγια, δεν είναι μόνο σημαντικό να έχουμε μια ασφαλή πλατφόρμα αλλά απαιτείται η κοινότητα που δρα σε αυτή την πλατφόρμα να είναι σε θέση να χρησιμοποιεί μηχανισμούς εμπιστοσύνης.
Μέχρι σήμερα, μόνο η πλατφόρμα EMERALD έχει υιοθετήσει τέτοιους μηχανισμούς που υποστηρίζουν μια ποικιλία λογικών και γλωσσών.
Ως εκ τούτου, δεν περιλαμβάνεται η διαχείριση της εμπιστοσύνης ως ξεχωριστό κριτήριο, αν και είναι σημαντικό, δεδομένου ότι δεν υποστηρίζεται από τις πλατφόρμες παρά μόνο από την πλατφόρμα EMERALD.
Στην συνέχεια, πέντε πίνακες παρουσιάζουν τις τιμές των κριτηρίων για καθεμία από τις πλατφόρμες που παρουσιάστηκαν στην προηγούμενη ενότητα.
Τα βασικά χαρακτηριστικά της κάθε πλατφόρμας παρουσιάζονται στον Πίνακα 3.2, όπου περιλαμβάνονται για λόγους ενημέρωσης η τελευταία έκδοση της πλατφόρμας καθώς και ο υπεύθυνος για την έκδοση και συντήρηση της οργανισμός.
Τα χαρακτηριστικά ευχρηστίας της κάθε πλατφόρμας παρουσιάζονται στον Πίνακα 3.3, ενώ ο πίνακας 3.4 παρουσιάζει τα χαρακτηριστικά λειτουργίας.
Τα γενικά χαρακτηριστικά κάθε πλατφόρμας παρουσιάζονται στον Πίνακα ενώ, τέλος, πληροφορίες σχετικά με την διαχείριση της ασφάλειας σε κάθε πλατφόρμα παρουσιάζονται στον Πίνακα 3.6.
Οι δύο τελευταίες στήλες του πίνακα αυτού περιλαμβάνουν επίσης την κύρια δημοσίευση κάθε πλατφόρμας και ένα υπερσύνδεσμο για λόγους αναφοράς και εξοικονόμησης χώρου.
Πίνακας 3.2.
Κατηγοριοποίηση Πολυπρακτορικών Συστημάτων Είναι γεγονός ότι οι προγραμματιστές και οι χρήστες χρειάζονται βοήθεια για να διακρίνουν ποιες πολυπρακτορικές πλατφόρμες και εργαλεία εμφανίζουν σε γενικές γραμμές παρόμοιες ιδιότητες, έτσι ώστε να είναι, εν τέλει, σε θέση να κατανοήσουν σε ποιες περιπτώσεις, ποιες επιλογές πρέπει να γίνουν.
Για το σκοπό αυτό, στο πλαίσιο της παρούσας διατριβής παρουσιάζεται μια κατηγοριοποίηση των παραπάνω εργαλείων με σκοπό να απαντηθούν οι πλέον κοινές ερωτήσεις, όπως, για παράδειγμα, ποιες πλατφόρμες χρησιμοποιούν την γλώσσα που χρειάζεται ή γνωρίζει η ομάδα ανάπτυξης αλλά και ποια είναι η πιο κατάλληλη πλατφόρμα για την υπό μελέτη περίπτωση.
Οι γλώσσες προγραμματισμού είναι σημαντικές, καθώς διαφορετικές γλώσσες έχουν διαφορετικές επιπτώσεις, όσον αφορά την εκφραστικότητα, την ευκολία του προγραμματισμού, την φορητότητα και την συμβατότητα.
Συνήθως, οι πλατφόρμες που αφορούν τους ευφυείς πράκτορες είναι γραμμένες στις γλώσσες C, C++ ή Java, ωστόσο υπάρχουν διάφορες γλώσσες προγραμματισμού που μπορούν να χρησιμοποιηθούν για τον προγραμματισμό ενός πολυπρακτορικού συστήματος.
Πολλές από αυτές τις γλώσσες έχουν προέλθει από την ανάγκη για εξειδίκευση, έτσι κάποιες από αυτές δημιουργήθηκαν και χρησιμοποιούνται στο πλαίσιο μιας συγκεκριμένης μόνο πλατφόρμας.
Στον Πίνακα 3.7 που ακολουθεί γίνεται αναφορά μόνο σε εκείνες τις γλώσσες που χρησιμοποιούνται για να αναπτυχθεί ένα πολυπρακτορικό σύστημα πάνω στην πλατφόρμα και όχι σε εκείνες που χρησιμοποιήθηκαν για να υλοποιηθεί η ίδια η πλατφόρμα.
Αξίζει να σημειωθεί ότι η κύρια γλώσσα προγραμματισμού που υιοθετήθηκε από τα πολυπρακτορικά συστήματα είναι η γλώσσα Java.
Σχεδόν το 80% από τις πλατφόρμες χρησιμοποιούν την γλώσσα Java ως την κύρια γλώσσα προγραμματισμού τους ενώ περίπου το 15% από τις πλατφόρμες χρησιμοποιούν την γλώσσα C++ και μόλις το 5% χρησιμοποιεί την γλώσσα C.
Πρέπει, επιπλέον, να σημειωθεί ότι στην κατηγοριοποίηση συμπεριλαμβάνεται και η XML, παρότι δεν είναι καθαρά μια γλώσσα προγραμματισμού, καθώς χρησιμοποιείται σε πολλές περιπτώσεις προσομοίωσης για σκοπούς αναπαράστασης γνώσης και επικοινωνίας.
Η κατηγοριοποίηση σύμφωνα με την γλώσσα προγραμματισμού που παρουσιάζεται σε αυτή την ενότητα θα μπορούσε να είναι ένα χρήσιμο εργαλείο, κάθε φορά που η γλώσσα είναι το κριτήριο για την επιλογή πλατφόρμας.
Για παράδειγμα, εάν υπάρχει ανάγκη για μια γενικού σκοπού, αντικειμενοστραφή γλώσσα με λίγες εξαρτήσεις υλοποίησης, τότε θα πρέπει να επιλέγονται οι πλατφόρμες που χρησιμοποιούν την γλώσσα Java.
Από την άλλη πλευρά, εάν το υπό ανάπτυξη μοντέλο ή η προσομοίωση πρέπει να εκτελείται χωρίς εξωτερικές εφαρμογές, όπως είναι το Java virtual machine – JVM, τότε θα πρέπει να επιλέγονται πλατφόρμες που χρησιμοποιούν τις γλώσσες C/C++.
Τέλος, στις περιπτώσεις εκείνες όπου είναι επιθυμητό να περιγραφεί τι θα πρέπει να επιτύχει το υπό ανάπτυξη σύστημα, παρά πως ακριβώς θα το επιτύχει, τότε πλατφόρμες που υποστηρίζουν γλώσσες δηλωτικού προγραμματισμού ή προγραμματισμού με κανόνες είναι οι πλέον κατάλληλες.
Πίνακας 3.7.
Κατηγοριοποίηση πλατφορμών σύμφωνα με την γλώσσα προγραμματισμού.
Συμμόρφωση στα Πρότυπα της FIPA Η FIPA (Foundation for Intelligent Physical Agents), όπως έχει αναφερθεί, είναι ένας διεθνής οργανισμός αφιερωμένος στην προώθηση του κλάδου των ευφυών πρακτόρων.
Για το σκοπό αυτό, προωθεί την ανάπτυξη προτύπων και προδιαγραφών που υποστηρίζουν την διαλειτουργικότητα μεταξύ πρακτόρων και πολυπρακτορικών εφαρμογών.
Η συμμόρφωση στα πρότυπα και τις προδιαγραφές της FIPA αποτελεί σημείο αναφοράς για πολλούς ερευνητές.
Ορισμένες πλατφόρμες είναι πλήρως συμβατές με αυτές τις προδιαγραφές ενώ άλλες υιοθετούν μερικές μόνο από αυτές.
Για παράδειγμα, οι πλατφόρμες JAS και Agent Factory υποστηρίζουν μόνο εκείνες τις προδιαγραφές που αφορούν τον κύκλο ζωής των πρακτόρων, ενώ οι AGLOBE και Jason υποστηρίζουν τις προδιαγραφές που αναφέρονται στις αρχές της επικοινωνίας και την γλώσσα (ACL και KQML).
Ο Πίνακας 3.8 που ακολουθεί παρουσιάζει μια επισκόπηση της κατηγοριοποίησης των παραπάνω πλατφορμών και εργαλείων σύμφωνα με την συμμόρφωση τους στα πρότυπα και τις προδιαγραφές της FIPA.
Οι προδιαγραφές και τα πρότυπα της FIPA είναι απαραίτητα όταν μελετώνται δυναμικές, ευέλικτες και αναπροσαρμόσιμες περιπτώσεις, καθώς η συμμόρφωση με αυτά παρέχει πλεονεκτήματα που θα μπορούσαν να αποδειχτούν χρήσιμα ή ακόμη και ζωτικής σημασίας σε ορισμένες περιπτώσεις.
Για παράδειγμα, η συμβατότητα με την FIPA εγγυάται την αρχιτεκτονική και την απόδοση του συστήματος, λόγω των ισχυρών και δοκιμασμένων πρωτοκόλλων που επιτρέπουν την συνεργασία και την διαλειτουργικότητα των πρακτόρων.
Επιπλέον, οι προδιαγραφές της FIPA είναι δημοφιλείς στην ερευνητική κοινότητα που μελετά τους ευφυείς πράκτορες και, ως εκ τούτου, υπάρχει διαθέσιμη άφθονη γνώση και υποστήριξη.
Ωστόσο, εναπόκειται στον κάθε ερευνητή να αποφασίσει εάν η έρευνα του χρειάζεται συμμόρφωση στα πρότυπα της FIPA ή όχι και φυσικά σε ποιο βαθμό.
Πίνακας 3.8.
Κατηγοριοποίηση πλατφορμών σύμφωνα με την συμμόρφωση στα πρότυπα της FIPA.
Πλήρης συμμόρφωση JADE, Jadex, JACK, EMERALD
Ορισμένες πλατφόρμες είναι γενικού σκοπού και μπορούν να χρησιμοποιηθούν για ένα μεγάλο εύρος πεδίων εφαρμογής ενώ άλλες είναι ειδικού σκοπού.
Στην πραγματικότητα, μια πλατφόρμα ειδικού σκοπού είναι μια πλατφόρμα που δημιουργήθηκε για ένα συγκεκριμένο πεδίο εφαρμογής και επομένως είναι πιο αποτελεσματική εάν χρησιμοποιείται για εφαρμογές αυτού του πεδίου.
Παρόλα αυτά, ορισμένες από αυτές τις πλατφόρμες μπορούν να χρησιμοποιηθούν σε πολλούς άλλους τομείς.
Στον Πίνακα 3.9 παρουσιάζονται διάφορα πεδία εφαρμογής, με τις πλατφόρμες που ειδικεύονται ή χρησιμοποιούνται συνήθως σε κάθε ένα από αυτά.
Η παρούσα κατηγοριοποίηση υποδεικνύει ποια πλατφόρμα θα μπορούσε να είναι περισσότερο κατάλληλη για ένα συγκεκριμένο τομέα.
Για παράδειγμα, εάν πρόκειται για μια κοινωνική μελέτη, τότε οι πλατφόρμες SeSAm ή Repast θεωρούνται καλύτερη επιλογή.
Τα γεωγραφικά συστήματα πληροφοριών, όμως, μελετώνται καλύτερα με την χρήση πλατφορμών όπως οι AGLOBE, Cougaar ή SeSAm.
Επιπλέον, υπάρχουν πλατφόρμες που μπορούν να χρησιμοποιηθούν σχεδόν σε κάθε τομέα, όπως το JADE.
Ωστόσο, συνήθως υπάρχουν περισσότερες από μία επιλογές (πλατφόρμες) για κάθε τομέα, επομένως, η τελική επιλογή εξαρτάται από τον συνδυασμό των επιθυμητών χαρακτηριστικών που παρουσιάζει κάθε πλατφόρμα.
Για παράδειγμα, εάν υπάρχει ανάγκη για μία πλατφόρμα γενικού σκοπού που χρησιμοποιεί τις γλώσσες C/C++, τότε πρέπει να χρησιμοποιηθεί η πλατφόρμα MaDKit (συνδυασμός στοιχείων από τους πίνακες 3.7 και 3.9).
Πίνακας 3.9.
Κατηγοριοποίηση πλατφορμών σύμφωνα με το πεδίο εφαρμογής τους.
Γενικού σκοπού κατανεμημένες
Γενικού σκοπού πολυπρακτορι-
Επιστημονικές Swarm, MASON, Cormas, Repast (Social Sciences), MaDKit, CybelePro, προσομοιώσεις SeSAm, AnyLogic, GAMA Δυναμικά και πολύπλοκα περι-
Γεωγραφικά συστήματα πραγ-
Κινητού προγραμματισμού JADE, Jadex, Agent Factory
Τεχνητής ζωής και μελέτης συ-
Φυσικοί πόροι & περιβάλλον Cormas, Swarm, SeSAm, AnyLogic.
Τεχνολογίες Σημασιολογικού Ιστού Όπως έχει ήδη αναφερθεί, ο Ιστός κινείται προς την κατεύθυνση ενός πραγματικά παγκόσμιου χωριού, συνδέοντας ανθρώπους και γνώση.
Η ιδέα της δημιουργίας ενός δικτύου περιεχομένου, αποθηκευμένου στον Ιστό, το οποίο θα επιτρέπει στις μηχανές να κατανοούν πλήρως το νόημα των δεδομένων και να ικανοποιούν, έτσι, τα αιτήματα των χρηστών τους, θα γίνει κάποια στιγμή απόλυτη πραγματικότητα.
Η αυξανόμενη πολυπλοκότητα και η έκταση αυτής της γνώσης, ωστόσο, δημιουργεί την ανάγκη για πιο ισχυρά εργαλεία.
Επομένως, το ερώτημα είναι εάν οι πλατφόρμες πρακτόρων είναι ή θα είναι σε θέση να αντιμετωπίσουν αυτή την πραγματικότητα.
Με άλλα λόγια, το ερώτημα είναι εάν οι πράκτορες που δημιουργούνται σε αυτές τις πλατφόρμες, θα είναι σε θέση να διασχίζουν το διαδίκτυο, να ενσωματώνουν και να διαχειρίζονται την διαθέσιμη γνώση.
Μέχρι στιγμής, δεν υπάρχει καμία έρευνα, που να λαμβάνει υπόψη της αυτό το ζήτημα.
Έτσι, στα πλαίσια της παρούσας διατριβής έγινε μια προσπάθεια να μελετηθεί ποιες πολυπρακτορικές πλατφόρμες μπορούν να χρησιμοποιηθούν στον Ιστό.
Για το σκοπό αυτό, μελετήθηκε ποιες από τις παραπάνω πλατφόρμες υποστηρίζουν τεχνολογίες Σημασιολογικού Ιστού ή έχουν την προοπτική να το κάνουν.
Η προοπτική μιας πλατφόρμας δεν έχει να κάνει με την τρέχουσα ωριμότητά της σε τεχνολογίες Σημασιολογικού Ιστού, παρά με την εν γένει δυνατότητα που παρουσιάζει.
Η πλατφόρμα EMERALD, για παράδειγμα, είναι πλήρως προσανατολισμένη στον Σημασιολογικό Ιστό ενώ η πλατφόρμα Jadex υποστηρίζει ορισμένες μόνο από τις τεχνολογίες του, όπως για παράδειγμα την XML.
Έτσι, το EMERALD μπορεί άμεσα να χρησιμοποιηθεί σε εφαρμογές ιστού ενώ το Jadex πρέπει πρώτα να επεκταθεί.
Την ίδια στιγμή, υπάρχουν πολλές πλατφόρμες που δεν υποστηρίζουν ακόμα τεχνολογίες Σημασιολογικού Ιστού αλλά η αρχιτεκτονική τους θα μπορούσε εύκολα να επεκταθεί και σε αυτή την κατεύθυνση.
Η πλατφόρμα Cormas, για παράδειγμα, δεν είναι ακόμη προσανατολισμένη προς αυτή την κατεύθυνση αλλά μια επέκταση της με γλώσσες του Σημασιολογικού Ιστού θα μπορούσε να αποκαλύψει πως οι πράκτορες δρουν κάτω από πραγματικές συνθήκες για λογαριασμό των χρηστών τους.
Σε αυτό το πλαίσιο, ο Πίνακας 3.10 παρουσιάζει μια κατηγοριοποίηση των παραπάνω πλατφορμών και εργαλείων σύμφωνα με το βαθμό, υψηλό, μέσο ή χαμηλό, της υποστήριξής τους σε τεχνολογίες Σημασιολογικού Ιστού (βλ.
Πίνακα 3.9 και 3.10).
Πλατφόρμες με μέσο βαθμό υποστήριξης συνήθως έχουν υιοθετήσει μία ή περισσότερες σημασιολογικές τεχνολογίες Ιστού (συνήθως XML), για παράδειγμα η πλατφόρμα SeSAm είναι η μόνη που υποστηρίζει οντολογίες αλλά τίποτε άλλο ακόμη, ενώ εκείνες με χαμηλό βαθμό έχουν κακή ή καθόλου υποστήριξη σε οτιδήποτε αφορά τον Ιστό.
Πίνακας 3.10.
Κατηγοριοποίηση πλατφορμών σύμφωνα με την υποστήριξη τεχνολογιών Σημασιολο-
Υψηλή EMERALD (RuleML/Reaction RuleML, Jess, XML, RDF/S, SOAP) (SWIXML, XML), SeSAm (Οντολογίες)
Είναι φανερό ότι τα συστήματα και τα μοντέλα που πρέπει να αναλυθούν γίνονται όλο και πιο πολύπλοκα.
Σε αυτό το πλαίσιο, η τεχνολογία των ευφυών πρακτόρων θα μπορούσε να αποδειχθεί ένα ισχυρό και χρήσιμο εργαλείο για τους ερευνητές.
Πράγματι, ο προγραμματισμός πολυπρακτορικών συστημάτων κερδίζει συνεχώς έδαφος.
Έτσι, σε αυτή την ενότητα της διατριβής, αφού παρουσιάστηκαν, εν συντομία, οι βασικές αρχιτεκτονικές ευφυών πρακτόρων και η καθιερωμένη γλώσσα και πρωτόκολλο επικοινωνίας στο χώρο, μελετήθηκαν είκοσι τέσσερις διαθέσιμες πλατφόρμες πρακτόρων που αναπτύχθηκαν από διαφορετικές ομάδες, είτε ακαδημαϊκά είτε εμπορικά προσανατολισμένες.
Η μελέτη κατέδειξε την πλατφόρμα JADE ως την πιο δημοφιλή, δεδομένου ότι είναι καθαρά σχεδιασμένη στην γλώσσα Java, υποστηρίζοντας διάφορα είδη συστημάτων.
Επιπλέον, μεταξύ των πλατφορμών εντοπίζονται και ορισμένα εμπορικά προϊόντα, γεγονός ελπιδοφόρο, καθώς φαίνεται να στρέφονται στην τεχνολογία πρακτόρων και η βιομηχανία.
Επιπλέον, αυτή η ποιοτική σύγκριση και κατάταξη των πολυπρακτορικών πλατφορμών αφενός καλύπτει την ανάγκη για μια ενημερωμένη επισκόπηση του τομέα και αφετέρου έχει την δυνατότητα να βοηθήσει έναν ερευνητή να αποφασίσει ποια πλατφόρμα από αυτές καλύπτει καλύτερα τις ανάγκες του/της.
Για παράδειγμα, κάθε φορά που πρέπει να επιλεγεί μια πλατφόρμα, η σταδιακή μελέτη των συγκριτικών πινάκων, που παρουσιάστηκαν στην παρούσα ενότητα, μπορεί να οδηγήσει στην τομή των επιθυμητών χαρακτηριστικών και επομένως στην κατάλληλη πλατφόρμα.
Σε μια τέτοια περίπτωση, θα μπορούσε κανείς να ξεκινήσει από τον πίνακα που περιγράφει το πεδίο εφαρμογής κάθε πλατφόρμας, περιορίζοντας σημαντικά το εύρος των πιθανών επιλογών και κατόπιν να αποκλείσει ορισμένες από αυτές με κριτήριο την γλώσσα προγραμματισμού, την ευκολία εκμάθησης ή την τρέχουσα κατάσταση της πλατφόρμας έως ότου εντοπίσει την καλύτερη δυνατή επιλογή για την περίπτωση του.
Ωστόσο, η συμβολή της παρούσας διατριβής δεν περιορίζεται μόνο στην συγκριτική μελέτη και παρουσίαση των δημοφιλέστερων πλατφορμών και εργαλείων ανάπτυξης πολυπρακτορικών συστημάτων.
Προκειμένου να δοθεί η δυνατότητα σύγκρισης και αξιολόγησης των ευρημάτων τέτοιων μελετών, προτάθηκε μια σειρά καθολικών κριτηρίων.
Έτσι, με την υιοθέτηση καθολικών κριτηρίων σύγκρισης και αξιολόγησης, μελέτες που αναπτύχθηκαν ακόμη και από διαφορετικές ερευνητικές ομάδες θα είναι δυνατό να συγκριθούν ή να αλληλοσυμπληρωθούν, εξάγοντας σημαντικά συμπεράσματα.
Παράλληλα, θα είναι δυνατή όχι μόνο η παρακολούθηση της πορείας μιας πλατφόρμας στο χρόνο αλλά και η πορεία της ίδιας της τεχνολογίας των ευφυών πρακτόρων καταδεικνύοντας την εξέλιξη και την δυναμική του χώρου.
Σε αυτό το πλαίσιο, στην παρούσα συγκριτική μελέτη χρησιμοποιήθηκαν τα προτεινόμενα καθολικά κριτήρια, τα οποία χωρίζονται σε πέντε ομάδες, αυτές των ιδιοτήτων κάθε πλατφόρμας, της χρηστικότητας της, της ικανότητας λειτουργίας της, των γενικών χαρακτηριστικών της και της διαχείρισης της ασφάλειας στην πλατφόρμα.
Πρακτικά, αυτή η έρευνα κατέδειξε τις δυνατότητες κάθε πλατφόρμας και κατ’ επέκταση τα πιθανά οφέλη, που παρουσιάζει η χρήση κάθε μιας από αυτές για την ανάπτυξη πολυπρακτορικών εφαρμογών.
Με βάση τα σχετικά ευρήματα, που παρουσιάστηκαν σε αυτό το κεφάλαιο, στo πλαίσιo της παρούσας διατριβής επιλέχθηκε η πλατφόρμα JADE για την ανάπτυξη του πολυπρακτορικού συστήματος EMERALD.
Το σύστημα EMERALD, που συμπεριλήφθηκε στην παραπάνω μελέτη, είναι προσανατολισμένο στον Σημασιολογικό Ιστό, αποτελεί συμβολή της παρούσας διατριβής και περιγράφεται αναλυτικά στο επόμενο (τέταρτο) κεφάλαιο.
Η πλατφόρμα JADE αποτέλεσε την βάση για την ανάπτυξη του συστήματος EMERALD, καθώς λειτουργεί όχι μόνο ως πλατφόρμα υλοποίησης πολυπρακτορικών εφαρμογών αλλά και ως ενδιάμεσο λογισμικό, κατάλληλο για την ανάπτυξη νέων πολυπρακτορικών συστημάτων, όπως το EMERALD.
Συγκεκριμένα, η πλατφόρμα JADE επιλέχθηκε καθώς όπως καταγράφηκε στην παραπάνω συγκριτική μελέτη, επιπρόσθετα της δημοφιλίας και της εκτεταμένης χρήσης της από την ερευνητική κοινότητα, παρουσιάζει μια σειρά σημαντικών γνωρισμάτων.
Από τα σημαντικότερα χαρακτηριστικά της πλατφόρμας αποτελεί το γεγονός ότι είναι ανοικτού κώδικα και πλήρως υλοποιημένη στην γλώσσα Java.
Αυτό το χαρακτηριστικό, σε συνδυασμό με την αρχιτεκτονική της υλοποίησης της, της προσδίδει ευελιξία και της επιτρέπει να υποστηρίζει την ανάπτυξη κατανεμημένων πολυπρακτορικών συστημάτων, ακόμη και αν τα μηχανήματα φιλοξενίας διαθέτουν διαφορετικό λειτουργικό.
Επιπρόσθετα, η πλατφόρμα JADE, μεταξύ άλλων, είναι συμβατή με της προδιαγραφές της FIPA, διαθέτει κατάλληλες δομές για την υποστήριξη του μηχανισμού Jess ενώ, παράλληλα, υποστηρίζει υπηρεσίες καταλόγου και ασύγχρονη επικοινωνία μεταξύ των πρακτόρων.
Έτσι, η πλατφόρμα JADE κρίθηκε κατάλληλη για τους ερευνητικούς σκοπούς της παρούσας διατριβής. 4 4 EMERALD: Ένα Πολυπρακτορικό Σύστημα για τον Σημασιολογικό Ιστό
Ένα από τα κύρια ζητήματα στην διαλειτουργικότητα των ευφυών πρακτόρων είναι το μεγάλο εύρος των τεχνολογιών αναπαράστασης γνώσης και συλλογιστικής [Genesereth & Fikes, 1992;
Στον τομέα των μεταδεδομένων και οντολογιών έχουν γίνει μεγάλα βήματα προόδου με την καθιέρωση των ευρέως αποδεκτών προτύπων RDF, RDF Schema και OWL.
Όμως δεν υπάρχει αντίστοιχη πρόοδος στον τομέα των κανόνων και της λογικής.
Οι ευφυείς πράκτορες δεν είναι υποχρεωμένοι να υπακούουν ή να κατανοούν την λογική και τον φορμαλισμό αναπαράστασης κανόνων άλλων πρακτόρων και, στην πραγματικότητα, δεν το κάνουν.
Διάφοροι τρόποι αντιμετώπισης του προβλήματος, που κυμαίνονται από την υιοθέτηση κοινών φορμαλισμών έως τον εξοπλισμό κάθε πράκτορα με την δική του μηχανή εξαγωγής συμπερασμάτων, έχουν προταθεί, χωρίς, ωστόσο να είναι πρακτικά εφικτοί ή αποδοτικοί.
Σε αυτό το πλαίσιο, η παρούσα διατριβή προτείνει μια νέα, απλούστερη και περισσότερο βιώσιμη προσέγγιση.
Η προσέγγιση αυτή δεν βασίζεται στην σημασιολογική διαλειτουργικότητα αλλά στην ανταλλαγή βάσεων κανόνων, έτσι, οι πράκτορες κατανοούν ο ένας τον άλλο, χωρίς να χρησιμοποιούν κοινό φορμαλισμό.
Στην πράξη, αυτό επιτυγχάνεται μέσω εξωτερικών υπηρεσιών συλλογιστικής, που προσφέρονται υπό την μορφή ευφυών πρακτόρων, με την γενική ονομασία Reasoners.
Οι υπηρεσίες αυτές, ωστόσο, δεν είναι αρκετές για να επιτευχθεί η αποτελεσματική δράση των ευφυών πρακτόρων στο περιβάλλον του Σημασιολογικού Ιστού.
Για αυτό το σκοπό, η παρούσα διατριβή, προτείνει, επιπρόσθετα, την σχεδίαση και υλοποίηση ενός νέου πλαισίου για διαλειτουργικούς, βασισμένους στην γνώση ευφυείς πράκτορες.
Το πλαίσιο αυτό αποτελεί ένα νέο σύστημα, που ονομάζεται EMERALD [Kravari et al., 2009b;
Kravari et al., 2010b] και προσφέρει πλέον των παραπάνω υπηρεσιών συλλογιστικής, ένα πλήθος υπηρεσιών και τεχνολογιών που διευκολύνουν την δράση των ευφυών πρακτόρων.
Συγκεκριμένα, προτείνεται, επιπλέον, η ανάπτυξη ενός γενικού, επαναχρησιμοποιήσιμου προτύπου για παραμετροποιήσιμους, βασισμένους στην γνώση πράκτορες, που ονομάζεται KC-Agents [Kravari et al., 2009b;
Σημαντική συμβολή του μοντέλου αποτελεί η ευκολία που προσφέρει για μερικό ή ολικό επαναπροσδιορισμό της συμπεριφοράς των πρακτόρων, χωρίς πρόσθετο προγραμματιστικό κόστος, ενισχύοντας την αποτελεσματικότητα και την διαλειτουργικότητα τους.
Επιπρόσθετα, οι προσφερόμενες υπηρεσίες, εμπλουτίζονται ακόμη περισσότερο, καθώς προτείνεται η ανάπτυξη προηγμένων υπηρεσιών σημασιολογικού καταλόγου και αναζήτησης, καθώς και υπηρεσιών αναζήτησης βασισμένων στην αξιοπιστία των υπηρεσιών, οι οποίες επιτρέπουν στους ευφυείς πράκτορες να εντοπίζουν τους καταλληλότερους για αυτούς συνεργάτες.
Συνεχίζοντας την προσπάθεια για αυξημένη αποτελεσματικότητα και διαλειτουργικότητα, η παρούσα διατριβή προτείνει, επίσης, την ενσωμάτωση στο σύστημα EMERALD μιας σειράς μηχανισμών εκτίμησης της αξιοπιστίας των πρακτόρων, καθώς η εμπιστοσύνη στα πολυπρακτορικά συστήματα αποτελεί ένα ιδιαίτερα κρίσιμο ζήτημα.
Ακόμη, προτείνεται μια γραφική διεπαφή χρήστη, η οποία ενοποιεί όλες τις παραπάνω υπηρεσίες και λειτουργίες ενώ, παράλληλα, παρέχει μια σειρά στατιστικών στοιχείων.
Η διεπαφή αυτή επιτρέπει στους χρήστες να εποπτεύουν την δράση των πρακτόρων τους αλλά, κυρίως, επιτρέπει στους προγραμματιστές να ελέγχουν την απόδοση των μηχανισμών και των μοντέλων τους, δίνοντας τους την δυνατότητα για αξιολόγηση και βελτίωση.
Τέλος, για λόγους πληρότητας, μελετάται μια σειρά περιπτώσεων χρήσης που καταδεικνύουν την χρησιμότητα του συστήματος και ό-
Επισκόπηση του Συστήματος EMERALD Το σύστημα EMERALD [Kravari et al, 2009b;
Kravari et al., 2010b] αποτελεί ένα γενικό και ασφαλές πλαίσιο για διαλειτουργικούς, βασισμένους στην γνώση, ευφυείς πράκτορες που δρουν στον Σημασιολογικό Ιστό.
Βασίζεται στα πρότυπα του Σημασιολογικού Ιστού και της FIPA, προσφέροντας ευελιξία, διαλειτουργικότητα και δυνατότητες επαναχρησιμοποίησης.
Για την υλοποίηση του χρησιμοποιείται ως βάση η πλατφόρμα JADE [Bellifemine et al., 2003;
Bellifemine et al., 2007], η οποία επεκτείνεται με νέες δυνατότητες.
Στην Εικόνα 4.1 παρουσιάζεται μια γενική επισκόπηση της δομής του συστήματος.
Στο EMERALD, κάθε χρήστης ελέγχει έναν μοναδικό πράκτορα γενικού σκοπού.
Για την δημιουργία και την συντήρηση του πράκτορα αυτού, το σύστημα προτείνει ένα επαναχρησιμοποιήσιμο και παραμετροποιήσιμο πρότυπο, το πρότυπο KC-Agents.
Το πρότυπο αποτελείται από ένα πρακτορικό μοντέλο, που ονομάζεται KC Model, μια σειρά προηγμένων υπηρεσιών «χρυσού οδηγού» (AYPS Advanced Yellow Pages Services), ή απλά καταλόγου, και μια βιβλιοθήκη εξωτερικών μεθόδων (BJL –Basic Java Library).
Σύμφωνα με το μοντέλο KC Model, κάθε πράκτορας διαθέτει, μεταξύ άλλων, μια βάση γνώσης (Jess KB), που περιέχει την γνώση και την στρατηγική του.
Η βάση γνώσης αλλάζει εύκολα, χωρίς πρόσθετο προγραμματιστικό κόστος, επιτρέποντας στον χρήστη να διατηρεί πάντοτε έναν συμβατό με τις επιθυμίες του πράκτορα.
Φυσικά, η χρήση του προτύπου είναι προαιρετική, δεν είναι απαραίτητο οι πράκτορες που δρουν στο EMERALD να συμμορφώνονται με αυτό.
Προαιρετική, επίσης, είναι και η χρήση της γραφικής διεπαφής που προσφέρει το σύστημα για την εποπτεία των πρακτόρων.
Οι πράκτορες του περιβάλλοντος μπορούν να επικοινωνούν μεταξύ τους αλλά, καθώς, δεν είναι απαραίτητο να μοιράζονται έναν κοινό φορμαλισμό κανόνων ή λογικής, χρησιμοποιούν τις ανεξάρτητες υπηρεσίες συλλογιστικής του συστήματος για να κατανοήσουν ο ένας τον άλλο.
Οι υπηρεσίες αυτές, όπως έχει αναφερθεί, προσφέρονται μέσω ειδικών πρακτόρων που ονομάζονται Reasoners.
Αυτοί είναι επιφορτισμένοι με την προώθηση της βάσης γνώσης που λαμβάνουν στον κατάλληλο μηχανισμό εξαγωγής συμπερασμάτων και την επιστροφή των αποτελεσμάτων στον πράκτορα.
Για να διασφαλιστεί ότι οι μηχανισμοί εξαγωγής συμπερασμάτων που χρησιμοποιούνται είναι αξιόπιστοι, επιλέχθηκαν μόνο έμπιστες υπηρεσίες συλλογιστικής που φιλοξενούνται από έγκυρους οργανισμούς όπως η Κοινοπραξία του Παγκόσμιου
Κεφάλαιο 4 – EMERALD: Ένα Πολυπρακτορικό Σύστημα Σημασιολογικού Ιστού
Ιστού (W3C) και ο οργανισμός RuleML.org.
Όπως, περιγράφεται στο έβδομο κεφάλαιο της διατριβής, το EMERALD έχει ήδη χρησιμοποιηθεί [Kravari et al., 2011c], ως φορέας παροχής υπηρεσιών συλλογιστικής στο SymposiumPlanner, μια πολυπρακτορική εφαρμογή για την διοργάνωση συνεδρίων που αναπτύχθηκε πάνω στην πολυπρακτορική πλατφόρμα Rule Responder
Μηχανή εξαγωγής συμπερασμάτωνReasonerΠροσωπικός πράκτορας Επιπλέον, το σύστημα EMERALD συμβάλει καθοριστικά στην βελτίωση της αποτελεσματικότητας των πρακτόρων που δραστηριοποιούνται σε αυτό, με την υιοθέτηση μιας σειράς μοντέλων εμπιστοσύνης και αξιοπιστίας.
Πρόκειται, για μηχανισμούς εκτίμησης της αξιοπιστίας των πρακτόρων, η ανάπτυξη των οποίων μελετάται στο έκτο κεφάλαιο της διατριβής, οι οποίοι επιτρέπουν στους πράκτορες να χτίσουν σχέσεις εμπιστοσύνης, εκτιμώντας και αξιολογώντας την συμπεριφορά των εταίρων τους.
Επί του παρόντος, το σύστημα προσφέρει έναν αριθμό, κυρίως υβριδικών, μοντέλων που ακολουθούν τόσο την κεντρική προσέγγιση (SERM, T-REX, HARM) όσο και την κατανεμημένη (DRM, DISARM).
Τα μοντέλα που απαιτούν κεντρικό διαχειριστή, είτε διαθέτουν στο σύστημα δικό τους ειδικό πράκτορα διαχειριστή, όπως τα TREX και HARM, είτε προσφέρονται μέσω της υπηρεσίας AYPS, όπως το SERM.
Τέλος, η υπηρεσία AYPS σε συνεργασία με τον ειδικό πράκτορα MA (Manager), που εκτελεί χρέη διαχειριστή της γραφικής διεπαφής του συστήματος EMERALD, προσφέρει πρόσθετες υπηρεσίες, όπως τις υπηρεσίες σημασιολογικού καταλόγου και αναζήτησης και τις υπηρεσίες αναζήτησης βασισμένων στην αξιοπιστία των υπηρεσιών, που περιγράφονται στην συνέχεια.
Συμπερασματικά, στόχος του EMERALD είναι να εφαρμόσει και να παρέχει όσο το δυνατόν περισσότερα καθιερωμένα πρότυπα του χώρου των πολυπρακτορικών συστημάτων και του Σημασιολογικού Ιστού, όπως είναι τα ACL, RuleML, RDF/S και OWL, για την ενίσχυση της διαλειτουργικότητας των ευφυών πρακτόρων στον Σημασιολογικό Ιστό.
Πρακτικά, οι εμπλεκόμενες τεχνολογίες του Σημασιολογικού Ιστού υπηρετούν τον ρόλο της τεχνικής υποδομής του EMERALD.
Σε αυτό το πλαίσιο, στο σύστημα έχουν ήδη αναπτυχθεί διάφορες πιλοτικές εφαρμογές, όπως αυτές της μεσιτείας (brokering) [Benjamins et al., 1999;
Antoniou et al., 2007] και διαπραγμάτευσης (negotiation) [Sidner, 1994;
Υπηρεσίες Εξαγωγής Συμπερασμάτων Τις περισσότερες φορές δύο ή περισσότεροι πράκτορες, που προσπαθούν να επικοινωνήσουν, κατανοούν διαφορετικές γλώσσες (κανόνων).
Για να έχουν, ωστόσο, νόημα οι αλληλεπιδράσεις τους, θα πρέπει με κάποιο τρόπο να κατανοεί ο ένας τις θέσεις και τα επιχειρήματα του άλλου, δηλαδή τα λογικά συμπεράσματα που προκύπτουν από τα αντίστοιχα σύνολα κανόνων και τα γεγονότα.
Μια λύση σε αυτό το ζήτημα συμβατότητας θα μπορούσε να προκύψει μέσω της υιοθέτησης κοινών φορμαλισμών.
Δεν θα ήταν, όμως, ρεαλιστικό να επιχειρηθεί η επιβολή συγκεκριμένων φορμαλισμών λογικής και κανόνων σε ένα ραγδαία μεταβαλλόμενο περιβάλλον, όπως ο Ιστός.
Μια άλλη λύση θα μπορούσε να αποτελέσει ο εξοπλισμός κάθε πράκτορα με την δική του μηχανή εξαγωγής συμπερασμάτων, καθώς θα του επέτρεπε να συλλάβει την λογική των άλλων πρακτόρων.
Ωστόσο, κάθε μηχανή κανόνων διαθέτει δικό της φορμαλισμό, κατά συνέπεια, οι πράκτορες θα έπρεπε τουλάχιστον να χρησιμοποιούν μια κοινή γλώσσα ανταλλαγής λογικών κανόνων.
Με άλλα λόγια, θα ήταν πιθανό να επιτευχθεί διαλειτουργικότητα μεταξύ των πρακτόρων, όσον αφορά τον συλλογισμό, μέσω της μετάφρασης του λαμβανόμενου συνόλου κανόνων στον φορμαλισμό που χρησιμοποιεί ο λαμβάνων πράκτορας.
Αυτό, φυσικά, μπορεί να επιτευχθεί μόνο όταν οι πράκτορες χρησιμοποιούν τον ίδιο φορμαλισμό κανόνων με διαφορετικό συντακτικό ή όταν ο ένας φορμαλισμός μπορεί να μεταφραστεί σημασιολογικά στον άλλο, όπως, για παράδειγμα, μετάφραση μεταξύ αναιρέσιμης λογικής και κανόνων Datalog [Bassiliades et al., 2006].
Δεν είναι, όμως, πάντα εφικτή η δημιουργία ενός σχήματος μετάφρασης από μια γλώσσα κανόνων στην άλλη, επομένως, ούτε αυτή η προσέγγιση μπορεί να επιλύσει βιώσιμα το ζήτημα της διαλειτουργικότητας, παρά μόνο το μεταθέτει από την ανταλλαγή επιχειρημάτων στην μετάφραση κανόνων.
Σε αυτό το πλαίσιο, η παρούσα διατριβή προτείνει μια νέα, περισσότερο ρεαλιστική και βιώσιμη προσέγγιση, η οποία περιλαμβάνει αξιόπιστες, ανεξάρτητες υπηρεσίες συλλογιστικής, οι οποίες αντλούν την απαραίτητη γνώση από την βάση κανόνων του πράκτορα και προχωρούν σε επαλήθευση των αποτελεσμάτων.
Ειδικότερα, προτείνεται μια απλούστερη προσέγγιση, η οποία βασίζεται στην ανταλλαγή των βάσεων κανόνων, επιτρέποντας στους πράκτορες να ανταλλάσσουν τις θέσεις και τα επιχειρήματα τους, χωρίς να χρειάζεται να συμμορφώνονται με ένα κοινό πρότυπο κανόνων ή λογικής.
Έτσι, ο λαμβάνων πράκτορας χρησιμοποιεί μια εξωτερική υπηρεσία συλλογιστικής για να κατανοήσει την σημασιολογία των κανόνων, δηλαδή το σύνολο των αποτελεσμάτων που προκύπτουν από την βάση κανόνων που έλαβε.
Πρόσθετη καινοτομία της προσέγγισης αποτελεί το γεγονός ότι οι υπηρεσίες συλλογιστικής προσφέρονται υπό την μορφή ευφυών πρακτόρων.
Συγκεκριμένα, κάθε προσφερόμενη υπηρεσία ενσωματώνεται σε έναν ειδικό για αυτό το σκοπό ευφυή πράκτορα, που ονομάζεται Reasoner [Kravari et al., 2010c].
Επομένως, οι πράκτορες που δρουν στον περιβάλλον δεν επιβαρύνονται, παραμένουν ευέλικτοι, καθώς οι εργασίες συλλογιστικής και επαλήθευσης των αποτελεσμάτων μεταφέρεται στους πράκτορες που προσφέρουν τις υπηρεσίες συλλογιστικής.
Έτσι, το σύστημα EMERALD προκειμένου να συμβάλει στην βελτίωση της διαλειτουργικότητας των ευφυών πρακτόρων, υποστηρίζει, μέσω των πρακτόρων Reasoners, μια εύκολα επεκτάσιμη σειρά μηχανισμών εξαγωγής συμπερασμάτων που χρησιμοποιούν διάφορους τύπους λογικών.
Κάθε Reasoner υποστηρίζει έναν συγκεκριμένο μηχανισμό εξαγωγής συμπερασμάτων και προσφέρει την αντίστοιχη υπηρεσία στους υπόλοιπους πράκτορες του περιβάλλοντος.
Στην πραγματικότητα, κάθε Reasoner μπορεί να συμπεριφέρεται ως υπηρεσία ιστού, να επικοινωνεί δηλαδή με τον προκαθορισμένο για αυτόν μηχανισμό, προκειμένου εκείνος να διεξάγει τις απαραίτητες ενέργειες για την παροχή των αποτελεσμάτων (Εικόνα 4.2).
Η διαδικασία είναι σχετικά απλή και μπορεί να χρησιμοποιηθεί για την ενσωμάτωση οποιουδήποτε μηχανισμού εξαγωγής συμπερασμάτων.
Κάθε Reasoner είναι σταθερά διαθέσιμος και περιμένει νέα αιτήματα (ACL τύπου «REQUEST»).
Μόλις λάβει ένα έγκυρο αίτημα, καλεί τον σχετικό μηχανισμό συλλογιστικής και επιστρέφει τα αποτελέσματα (ACL τύπου «INFORM»).
Ένα παράδειγμα ACL μηνύματος, που βασίζεται στην περιγραφή Fipa20003, γραμμένο σε ένα παρόμοιο με το CLIPS συντακτικό είναι το εξής:
Σύμφωνα με το παραπάνω μήνυμα, ένας πράκτορας, με το όνομα AgentA αποστέλλει σε έναν από τους Reasoners (xx-Reasoner) την διεύθυνση (C:\\rulebase.ruleml) της RuleML βάσης κανόνων που θέλει να κατανοήσει.
Όπως είναι φανερό, οι Reasoners δεν χρησιμοποιούν μια συγκεκριμένη γλώσσα κανόνων, παρά μεταφέρουν διευθύνσεις αρχείων μέσω των ACL μηνυμάτων είτε από τον αιτούντα πράκτορα προς τον μηχανισμό συλλογιστικής είτε το αντίστροφο.
Φυσικά, το περιεχόμενο των αρχείων πρέπει να είναι γραμμένο, στην κατάλληλη γλώσσα κανόνων.
Επομένως, εναπόκειται στον χρήστη του αιτούντος πράκτορα να παρέχει τα κατάλληλα αρχεία, λαμβάνοντας κάθε φορά υπόψη τις προδιαγραφές των μηχανισμών.
Ένα σημαντικό χαρακτηριστικό της διαδικασίας είναι ότι κάθε φορά που ένας Reasoner λαμβάνει ένα έγκυρο αίτημα, εκκινεί ένα νέο στιγμιότυπο του, σχετιζόμενου με αυτόν, μηχανισμού εξαγωγής συμπερασμάτων.
Επομένως, είναι δυνατό να εξυπηρετηθούν πολλαπλά αιτήματα ταυτόχρονα και ανεξάρτητα (Εικόνα 4.3).
Έτσι, τα νέα αιτήματα εξυπηρετούνται σχεδόν αμέσως, 3 Περιγραφή Fipa2000 για τις παραμέτρους του ACL μηνύματος: www.fipa.org. χωρίς να επιβαρύνουν την απόδοση του συστήματος, δεδομένου ότι η μόνη διαδοχική λειτουργία είναι η μεταφορά των αιτημάτων και των αποτελεσμάτων μεταξύ των πρακτόρων και των μηχανισμών, διαδικασία με πολύ χαμηλή απαίτηση σε χρόνο.
Στο σύστημα EMERALD έχουν ήδη υλοποιηθεί / ενσωματωθεί διάφορες υπηρεσίες εξαγωγής συμπερασμάτων (Reasoners) που ακολουθούν δύο κυρίως φορμαλισμούς, της συνεπαγωγικής (deductive) και της αναιρέσιμης (defeasible) συλλογιστικής.
Ειδικότερα, υποστηρίζονται δύο υπηρεσίες συνεπαγωγικής συλλογιστικής, προσφερόμενες από τους πράκτορες RReasoner και Prova-Reasoner, και τρεις υπηρεσίες αναιρέσιμης συλλογιστικής, προσφερόμενες από τους DR-Reasoner, SPINDLE-Reasoner και DR-Prolog-Reasoner.
Επιπλέον, για λόγους πληρότητας και ενίσχυσης της απόδοσης, προσφέρεται και μια υπηρεσία επαλήθευσης αποδείξεων (Proofing validator) για την αναιρέσιμη συλλογιστική.
Ο Πίνακας 4.1 παρουσιάζει τα κύρια χαρακτηριστικά των μηχανισμών συλλογιστικής που χρησιμοποιούνται στις προτεινόμενες υπηρεσίες.
Να σημειωθεί ότι οι υπηρεσίες αυτές, παρότι, προσφέρονται μέσω του περιβάλλοντος EMERALD, μπορούν να ενσωματωθούν και να χρησιμοποιηθούν σε οποιοδήποτε άλλο πολυπρακτορικό σύστημα.
Πίνακας 4.1.
Χαρακτηριστικά μηχανισμών συλλογιστικής.
R-Reasoner R-DEVICE συνεπαγωγική RDF/CLIPS/RuleML 2η Ορθή DR-Reasoner DR-DEVICE αναιρέσιμη RDF/CLIPS/RuleML 1η Ορθή Prova-Reasoner Prova συνεπαγωγική Prolog/Java 1η Ανάστροφη SPINdleReasoner SPINdle αναιρέσιμη XML/Java 0η Ορθή DR-PrologReasoner DR-Prolog αναιρέσιμη RDF/RuleML/DRProlog 1η Ανάστροφη Proofing Validator DR-Prolog αναιρέσιμη XML/ DR-Prolog 1η Ανάστροφη
Υπηρεσία Συνεπαγωγικής Συλλογιστικής R-Reasoner Η πρώτη υπηρεσία συνεπαγωγικής συλλογιστικής, προσφέρεται από τον πράκτορα RReasoner και βασίζεται στο σύστημα R-DEVICE [Bassiliades & Vlahavas, 2006], ένα αντικειμενοστρεφές σύστημα συνεπαγωγικών κανόνων για την διεξαγωγή ερωτημάτων και συλλογιστικής σε RDF μεταδεδομένα και RDF Schema οντολογίες.
Το σύστημα βασίζεται σε ένα αντικειμενοστρεφές μοντέλο RDF δεδομένων, το οποίο διαφέρει από το καθιερωμένο μοντέλο δεδομένων της RDF σε μορφή τριπλετών, καθώς χειρίζεται τις ιδιότητες RDF ταυτόχρονα σαν αντικείμενα αλλά και σαν τυπικά χαρακτηριστικά ή ιδιότητες αντικειμένων, όπως συμβαίνει στον κλασικό αντικειμενοστρεφή προγραμματισμό.
Το σύστημα R-DEVICE μετατρέπει τις τριπλέτες RDF σε αντικείμενα CLIPS (COOL) και χρησιμοποιεί μια συνεπαγωγική γλώσσα κανόνων για την διεξαγωγή ερωτημάτων και συλλογιστικής σε αυτά, ακολουθώντας ορθή ακολουθία εκτέλεσης.
Με αυτό τον τρόπο, οι ιδιότητες των διαφόρων πόρων δεν βρίσκονται διασκορπισμένες σε πολλές τριπλέτες, όπως συμβαίνει στα περισσότερα αντίστοιχα συστήματα, με αποτέλεσμα την καλύτερη απόδοση του συστήματος.
Ένα δείγμα κανόνα στο, παρόμοιο με το CLIPS, συντακτικό της γλώσσας παρουσιάζεται παρακάτω.
Συγκεκριμένα, παρατίθεται ο κανόνας test-rule, ο οποίος αναζητά τους τίτλους των ιστοσελίδων (κλάση website) που δημιουργήθηκαν από τον «John Smith».
Η σημασιολογία της γλώσσας κανόνων του R-DEVICE είναι παρόμοια με αυτή της Datalog [Abiteboul et al, 1995], με μια σχετικά απλή διαδικασία επαλήθευσης αποδείξεων και ένα αντικειμενοστρεφές συντακτικό στο πνεύμα της F-Logic [Kifer et al., 1995].
Η διαδικασία απόδειξης του R-DEVICE υποδεικνύει ότι, όταν πληρείται η συνθήκη του κανόνα, τότε εξάγεται το συμπέρασμα και το αντίστοιχο αντικείμενο εισάγεται στην βάση γνώσης.
Το σύστημα υποστηρίζει μη-μονότονα συμπεράσματα, επομένως, όταν η συνθήκη ενός κανόνα παύει να είναι αληθής, ενώ έχει ικανοποιηθεί, τότε το αντίστοιχο αντικείμενο αποσύρεται από την βάση.
Ουσιαστικά, το R-DEVICE διαθέτει μια ισχυρή συνεπαγωγική γλώσσα κανόνων, η οποία είναι σε θέση να εκφράσει ποικίλα ερωτήματα τόσο σχετικά με την οντολογία RDF Schema όσο και με τα δεδομένα, συμπεριλαμβανομένων των γενικευμένων εκφράσεων μονοπατιού (path expressions), της διαστρωματωμένης άρνησης (stratified negation), της συνάθροισης (aggregation) και της διαλογής (sorting).
Το δεύτερης τάξης συντακτικό της γλώσσας (μεταβλητά κατηγορήματα και ιδιότητες) μεταφράζεται σε σύνολα κανόνων πρώτης τάξης με την χρήση μεταδεδομένων του RDF σχήματος, έτσι ώστε να μπορεί να εκτελεστεί η συλλογιστική πάνω στο μοντέλο δεδομένων RDF.
Τέλος, η γλώσσα κανόνων του συστήματος έχει και ένα συντακτικό συμβατό με αυτό της γλώσσας RuleML, επεκτείνοντας την Datalog με την άρνηση-ως-αποτυχία (negation-as-failure) της RuleML, που επίσης διαθέτει αντικειμενοστρεφή χαρακτηριστικά.
Στην πράξη, ο R-Reasoner τροφοδοτεί το σύστημα R-DEVICE με μια βάση κανόνων σε RuleML και RDF δεδομένα και λαμβάνει τελικά τα συμπεράσματα σε RDF μορφή.
Υπηρεσία Συνεπαγωγικής Συλλογιστικής Prova-Reasoner Η δεύτερη συνεπαγωγική υπηρεσία συλλογιστικής προσφέρεται από τον Prova-Reasoner και στηρίζεται στην μηχανή κανόνων Prova [Kozlenkov et al., 2006].
Στην πράξη, η Prova είναι όχι μόνο ένας μηχανισμός εξαγωγής συμπερασμάτων αλλά και μια γλώσσα με συντακτικό παρόμοιο με αυτό της γλώσσας Prolog.
Η μηχανή Prova (από το Prolog+Java) προέρχεται από την Mandarax [Dietrich et al., 2003], μια παλαιότερη μηχανή εξαγωγής συμπερασμάτων, γραμμένη στην γλώσσα Java.
Η Prova επέκτεινε την Mandarax με ένα κατάλληλο συντακτικό συμβατό με την γλώσσα Prolog και αναδραστικούς κανόνες.
Συγκεκριμένα, η Prova υποστηρίζει κατανεμημένες υπηρεσίες εξαγωγής συμπερασμάτων, ανταλλαγή κανόνων και μηχανισμούς λήψης αποφάσεων βασισμένους σε κανόνες.
Επιπλέον, συνδυάζει δηλωτικούς κανόνες, οντολογίες και εξαγωγή συμπερασμάτων με τον δυναμικό αντικειμενοστρεφή προγραμματισμό.
Υποστηρίζει, ακόμη, συλλογιστική σε οντολογίες και προσδιορισμό της αναδραστικής συμπεριφοράς των πρακτόρων μέσω της ενσωμάτωσης στην γλώσσα Java κανόνων παραγωγής και αναδραστικών κανόνων, αντίστοιχα.
Ως δηλωτική γλώσσα με κανόνες παραγωγής, η Prova διαθέτει ένα Prolog συντακτικό, που επιτρέπει κλήσεις σε μεθόδους της γλώσσας Java.
Έτσι, συγχωνεύει μια ισχυρή Java βάση με Prolog χαρακτηριστικά, όπως η οπισθοδρόμηση.
Για παράδειγμα, το ακόλουθο τμήμα κώδικα της γλώσσας Prova [Kozlenkov et al., 2006], παραθέτει έναν κανόνα, του οποίου το σώμα αποτελείται από μια σειρά κλήσεων μεθόδων της γλώσσας Java.
Από την άλλη, οι αναδραστικοί κανόνες της γλώσσας Prova εφαρμόζονται για τον προσδιορισμό της συμπεριφοράς των πρακτόρων, αφήνοντας περισσότερο κρίσιμες λειτουργίες, όπως η ανταλλαγή των μηνυμάτων των πρακτόρων, στις Java επεκτάσεις της γλώσσας.
Επομένως, η Prova μπορεί να συνδυαστεί με διάφορα συστήματα και υπηρεσίες για την ανάπτυξη πλαισίων επικοινωνίας, όπως το JADE και το JMS4.
Οι αναδραστικοί κανόνες στην Prova διαθέτουν ένα αναστέλλον κατηγόρημα (blocking predicate) στην κεφαλή (rcvMsg) και πυροδοτούνται με την λήψη του αντίστοιχου γεγονότος.
Το κατηγόρημα rcvMsg έχει την ακόλουθη σύνταξη: rcvMsg(Protocol, To, Performative, [Predicate|Args] | Context).
Το κατηγόρημα sendMsg, από την άλλη πλευρά, είναι ενσωματωμένο στο σώμα των αναδραστικών κανόνων και αποτυγχάνει μόνο εάν οι παράμετροι είναι εσφαλμένες ή εάν το μήνυμα δεν μπορούσε να σταλεί λόγω διαφόρων άλλων λόγων, όπως προβλήματα σύνδεσης με το δίκτυο.
Το τμήμα κώδικα [Kozlenkov et al., 2006], που ακολουθεί, παραθέτει έναν απλοποιημένο αναδραστικό κανόνα για τον τύπο queryref της FIPA.
Έτσι, ο Prova-Reasoner, κάθε φορά που λαμβάνει σχετικό ερώτημα, αποστέλλει στην μηχανή την βάση γνώσης, γραμμένη στην γλώσσα Prolog και λαμβάνει τελικά τα συμπεράσματα, με την βοήθεια της γλώσσας
Υπηρεσία Αναιρέσιμης Συλλογιστικής DR-Reasoner Η πρώτη υπηρεσία αναιρέσιμης συλλογιστικής προσφέρεται από τον DR-Reasoner και στηρίζεται στο DR-DEVICE [Bassiliades et al., 2006], μια μηχανή εξαγωγής συμπερασμάτων αναιρέσιμης λογικής για το περιβάλλον του Σημασιολογικού Ιστού.
Η μηχανή DR-DEVICE βασίζεται στην μηχανή συλλογιστικής R-DEVICE, που παρουσιάστηκε σε προηγούμενη ενότητα, και μπορεί να εκτελεί συλλογιστική σε RDF μεταδεδομένα, που βρίσκονται στον Ιστό, με την χρήση κανόνων αναιρέσιμης λογικής.
Το DR-DEVICE δέχεται ως είσοδο την διεύθυνση μιας βάσης κανόνων αναιρέσιμης λογικής, η οποία περιέχει μόνο κανόνες, ενώ τα γεγονότα για το πρόγραμμα κανόνων περιέχονται σε RDF έγγραφα, των οποίων η διεύθυνση ορίζεται μέσα στην βάση κανόνων.
Έτσι, η βάση κανόνων φορτώνεται στο σύστημα και, στην συνέχεια, τα καθορισμένα γεγονότα (δεδομένα) λαμβάνονται από τον Ιστό.
Κατά την διάρκεια της διαδικασίας συμπερασμού, τα συμπεράσματα των κανόνων υλοποιούνται μέσα στο DR-DEVICE ως αντικείμενα και τα στιγμιότυπα των εξαγόμενων (derived) κλάσεων, μαζί με τους ορισμούς RDF/S για τις εξαγόμενες κλάσεις, εξάγονται (export), τελικά, με την μορφή ενός RDF εγγράφου.
Επιπλέον, είναι δυνατή και η παροχή επεξηγήσεων σχετικά με τα μη αποδεκτά αντικείμενα [Bassiliades et al., 2007].
Το DR-DEVICE υποστηρίζει όλα τα χαρακτηριστικά της αναιρέσιμης λογικής, όπως τα διάφορα είδη κανόνων και οι προτεραιότητες μεταξύ τους, οι δύο τύποι άρνησης, ισχυρή και άρνηση-ως-αποτυχία, καθώς και τα αμοιβαία αποκλειόμενα λεκτικά.
Παρόμοια με το R-DEVICE, οι κανόνες μπορούν να εκφραστούν είτε σε μία παρόμοιαμε-το-CLIPS γλώσσα, είτε σε στην γλώσσα DR-RuleML, η οποία επεκτείνει την οικογένεια γλωσσών RuleML με στοιχεία αναιρέσιμης λογικής [Boley, 2003].
Η DR-RuleML προσθέτει επεκτάσεις σχετικές με τους τύπους των κανόνων, τις σχέσεις υπεροχής μεταξύ τους, τα αντικρουόμενα λεκτικά αλλά και τους περιορισμούς σε ορίσματα και συναρτήσεις.
Σημειωτέον, ότι παρόλο που το DR-Device αποτελεί επέκταση του R-Device, η γλώσσα κανόνων του είναι πρώτης τάξης, δηλαδή υποστηρίζονται κατηγορήματα και μεταβλητές στην θέση των ορισμά-
Για παράδειγμα, ο κανόνας αναιρέσιμης λογικής r2: apartment(X)  acceptable(X), που υποδεικνύει ότι ένα διαμέρισμα είναι αποδεκτό, μπορεί να αναπαρασταθεί στο παρόμοιο-με-το-CLIPS συντακτικό του DR-DEVICE ως εξής:
Αντίστοιχα, ο κανόνας r4: pets(X)  ¬acceptable(X), με σχέση υπεροχής έναντι του προηγούμενου κανόνα και «ισχυρή» άρνηση, μπορεί να αναπαρασταθεί ως εξής:
Να σημειωθεί ότι η αντίστοιχη υλοποίηση των κανόνων στο συντακτικό της DR-RuleML παρατίθεται στην συνέχεια της διατριβής.
Στην πράξη, επομένως, ο πράκτορας DR-Reasoner, παρέχει στο σύστημα την λαμβάνουσα βάση γνώσης, γραμμένη στην γλώσσα RuleML.
Είναι ευθύνη του συστήματος DRDEVICE να εντοπίσει και να ανακτήσει από τον Ιστό τα απαραίτητα RDF δεδομένα.
Όταν η διαδικασία ολοκληρωθεί και προκύψουν τα συμπεράσματα, αυτά επιστρέφονται στον πράκτορα DR-Reasoner υπό την μορφή RDF δεδομένων, συμπεριλαμβανομένων των RDF/S ορισμών, και εκείνος με την σειρά του τα επιστρέφει στον πράκτορα που τα ζήτησε.
Υπηρεσία Αναιρέσιμης Συλλογιστικής SPINdle-Reasoner Η επόμενη υπηρεσία αναιρέσιμης συλλογιστικής προσφέρεται από τον πράκτορα SPINdleReasoner και βασίζεται στην ανοιχτού κώδικα, βασισμένη στην γλώσσα Java, μηχανή εξαγωγής συμπερασμάτων SPINdle [Lam & Governatori, 2009].
Η μηχανή αυτή δέχεται θεωρίες αναιρέσιμης λογικής, οι οποίες αναπαρίστανται είτε μέσω ενός προκαθορισμένου συντακτικού κειμένου είτε μέσω ενός προσαρμοσμένου XML λεξιλογίου, τις επεξεργάζεται και εξάγει τα αποτελέσματα σε XML μορφή.
Ειδικότερα, το SPINdle, όπως και το DR-DEVICE, υποστηρίζει όλα τα χαρακτηριστικά της αναιρέσιμης λογικής, δηλαδή γεγονότα, ισχυρούς και αναιρέσιμους κανόνες, αναιρέτες και σχέσεις υπεροχής.
Επιπρόσθετα, υποστηρίζει τροπική (modal) αναιρέσιμη λογική [Governatori & Rotolo, 2008] με άρνηση και αμοιβαία αποκλειόμενα λεκτικά.
Το SPINdle, ωστόσο, δεν είναι μόνο ένας μηχανισμός εξαγωγής συμπερασμάτων αλλά και ένα αυτόνομο σύστημα, που διαθέτει, επιπλέον, έναν οπτικό επεξεργαστή για την επεξεργασία των κοινών, δηλαδή όχι τροπικών, θεωριών αναιρέσιμης λογικής.
Ένα παράδειγμα θεωρίας, που ακολουθεί το προκαθορισμένο συντακτικό της μηχανής SPINdle, παρουσιάζεται παρακάτω.
Η θεωρία αυτή έχει ανακτηθεί από την ιστοσελίδα του SPINdle5.
Σημειωτέον ότι η λογική που υποστηρίζει το SPINdle είναι μηδενικής τάξης, δηλαδή δεν υπάρχουν κατηγορήματα και μεταβλητές, παρά μόνο άτομα. >> sh #Ο Nanook είναι ένα Siberian husky.
Ο κανόνας R2 είναι πιο γενικός από τον κανόνα R3. #Με βάση την αναιρέσιμη λογική, ο Nanook δεν πρέπει να γαυγίζει, δηλαδή
Υπηρεσία Αναιρέσιμης Συλλογιστικής DR-Prolog-Reasoner Η τελευταία υπηρεσία αναιρέσιμης συλλογιστικής προσφέρεται από τον πράκτορα DR-PrologReasoner και βασίζεται στον μηχανισμό DR-Prolog [Antoniou & Bikakis, 2007].
Ο μηχανισμός και το συντακτικό της DR-Prolog χρησιμοποιούν κανόνες, γεγονότα και οντολογίες και υποστηρίζουν όλα τα σημαντικά πρότυπα του Σημασιολογικού Ιστού, όπως είναι οι RDF/S, OWL και RuleML.
Επιπλέον, υποστηρίζει με μονότονους και μη κανόνες, την ανοικτή και την κλειστή υπόθεση κόσμου και την συλλογιστική με ασυνέπειες.
Ο DR-Prolog-Reasoner ακολουθεί, όπως είναι φυσικό, την γενική λειτουργικότητα των πρακτόρων που παρέχουν τις υπηρεσίες συλλογιστικής, ωστόσο, στην περίπτωση του, πρέπει να προστεθούν κάποια νέα βήματα στην διαδικασία, προκειμένου να είναι σε θέση να επεξεργαστεί τα ληφθέντα ερωτήματα και να στείλει πίσω την κατάλληλη απάντηση σε RDF μορφή (Εικόνα 4.4) [Kravari et al, 2011a;
5 Ιστοσελίδα SPINdle: http://spin.nicta.org.au/spindleOnline/index.html Συγκεκριμένα, ο DR-Prolog-Reasoner λαμβάνει ένα νέο ερώτημα στην γλώσσα RuleML, το οποίο πρέπει να συμμορφώνεται με ένα συγκεκριμένο πρότυπο της γλώσσας RuleML.
Πρόκειται για ένα επεκτεταμένο συντακτικό της RuleML, που χρησιμοποιείται από το σύστημα DRProlog.
Προκειμένου να εξαχθούν οι DR-Prolog κανόνες, που περιλαμβάνονται στο RuleML ερώτημα, χρησιμοποιείται ένας νέος συντακτικός αναλυτής (parser), που ονομάζεται Ο RuleMLParser λαμβάνει το RuleML αρχείο που περιέχει το ερώτημα, εξάγει τους κανόνες και τους αποθηκεύει σε ένα νέο αρχείο (* .P) σε DR-Prolog μορφή.
Ειδικότερα, ο συντακτικός αναλυτής, αρχικά, διαχωρίζει το αρχείο RuleML σε τμήματα, υποδεικνύοντας τους κανόνες.
Έπειτα, κάθε κανόνας διαιρείται και επεξεργάζεται.
Κάθε επεξεργασμένο τμήμα του RuleML κανόνα, δημιουργεί ένα συγκεκριμένο τμήμα του κανόνα DR-Prolog.
Τελικά, τα παραγόμενα DR-Prolog τμήματα συνδυάζονται, σχηματίζοντας τους DR-Prolog κανόνες (Εικόνα 4.5).
Επιπλέον, ο συντακτικός αναλυτής ελέγχει τα ερωτήματα που περιλαμβάνονται στο RuleML ερώτημα, προσδιορίζοντας εάν πρόκειται για ερωτήματα που αφορούν απάντηση ή απόδειξη.
Ωστόσο, η μετατροπή του RuleML ερωτήματος στο συντακτικό της DR-Prolog δεν είναι αρκετή.
Τα RDF δεδομένα πρέπει, επίσης, να μεταφραστούν σε DR-Prolog μορφή.
Τυπικά, τα διαθέσιμα δεδομένα / τριπλέτες είναι σε RDF μορφή και πρέπει να μετασχηματιστούν σε γεγονότα της γλώσσας Prolog.
Για το σκοπό αυτό, χρησιμοποιείται ένας άλλος συντακτικός αναλυτής, που ονομάζεται RDFParser.
Αυτός ο αναλυτής χρησιμοποιεί το λεγόμενο SW Knowledge Middleware6, ένα σύνολο εργαλείων για την συντακτική ανάλυση, την αποθήκευση, τον χειρισμό και την διεξαγωγή ερωτημάτων στις βάσης γνώσης του Σημασιολογικού Ιστού, την εξαγωγή RDF τριπλετών και την μετατροπή τους σε Prolog γεγονότα (Εικόνα 4.6).
Με αυτό τον τρόπο, ένα νέο ερώτημα στο συντακτικό DR-Prolog και τα σχετικά δεδομένα, υπό την μορφή Prolog γεγονότων, είναι διαθέσιμα, επιτρέποντας στον DR-Prolog-Reasoner να εκκινήσει τον μηχανισμό συλλογιστικής που υποστηρίζει.
Μόλις, τα αποτελέσματα της συλλογιστικής (στην γλώσσα Prolog) είναι διαθέσιμα, ο DR-Prolog-Reasoner πρέπει να τα μετατρέψει σε RDF μορφή και να τα διαβιβάσει στον αιτούντα πράκτορα.
Για το σκοπό αυτό, χρησιμοποιείται ένας τρίτος συντακτικός αναλυτής, που ονομάζεται ResultParser.
Αυτός ο αναλυτής λαμβάνει το αρχικό ερώτημα (σε DR-Prolog) και τα αποτελέσματα (μια Prolog λίστα) και επιστρέφει τα αποτελέσματα του ερωτήματος σε RDF (Εικόνα 4.7).
Είναι σημαντικό, σε αυτό το σημείο, να αναφθεί ότι τα RDF αποτελέσματα που επιστρέφονται περιέχουν μόνο τα αποτελέσματα που απαιτούνται από το αρχικό ερώτημα και όχι όλα τα στοιχεία που είναι διαθέσιμα στην βάση
Εξοπλισμός DR-Prolog-Reasoner με δυνατότητες παροχής αποδείξεων Εάν οι χρήστες, άνθρωποι και πράκτορες, πρόκειται να χρησιμοποιήσουν και να ενσωματώσουν τις απαντήσεις ενός συστήματος, όπως το EMERALD, θα πρέπει να τις εμπιστεύονται.
Ένας παράγοντας που αυξάνει την εμπιστοσύνη στα συστήματα είναι όταν τα τελευταία είναι σε θέση να εξηγούν τις ενέργειες, τις πηγές και τις πεποιθήσεις τους.
Οι υπηρεσίες επαλήθευσης των αποδείξεων είναι εξαιρετικά σημαντικές για αυτό το σκοπό, καθώς επιτρέπουν στους χρήστες να εμπιστεύονται τα αποτελέσματα των υπηρεσιών συλλογιστικής.
Τα παραδοσιακά μοντέλα αξιοπιστίας, όπως αυτά που παρουσιάζονται στην συνέχεια, μπορούν να εγγυηθούν την αξιοπιστία των πρακτόρων, συμπεριλαμβανομένων των πρακτόρων που παρέχουν υπηρεσίες συλλογιστικής (Reasoners), αλλά δεν μπορούν να εγγυηθούν την ορθότητα της ίδιας της παρεχόμενης υπηρεσίας.
Ωστόσο, τα αποτελέσματα που ανταλλάσσονται μεταξύ των πρακτόρων θα πρέπει, με κάποιο τρόπο, να επαληθεύονται.
Με άλλα λόγια, θα πρέπει να παρέχεται η απόδειξη για κάθε συγκεκριμένο ισχυρισμό, αποτέλεσμα μιας διαδικασίας συλλογιστικής, αλλά και να επικυρώνεται αυτή η απόδειξη.
Ως εκ τούτου, η αυτοματοποίηση της παραγωγής, της ανταλλαγής και της επικύρωσης αποδείξεων είναι σημαντική για κάθε εργασία συλλογιστικής στον Σημασιολογικό Ιστό.
Σε αυτό το πλαίσιο, ο DR-Prolog-Reasoner εξοπλίστηκε με μια νέα υπηρεσία παροχής αποδείξεων, έτσι ώστε να είναι σε θέση όχι μόνο να παρέχει τα κατάλληλα αποτελέσματα για ένα ερώτημα που λαμβάνει αλλά και να εξηγεί πως προέκυψαν αυτά, αυξάνοντας την εμπιστοσύνη των χρηστών.
Ειδικότερα, ο DR-Prolog-Reasoner εξοπλίστηκε με μια αναιρέσιμη υπηρεσία επεξήγησης αποδείξεων, μέσω ενός συστήματος [Antoniou et al., 2008], το οποίο παράγει αυτόματα επεξηγήσεις αποδείξεων, χρησιμοποιώντας ένα δημοφιλές σύστημα λογικού προγραμματισμού (XSB).
Αυτό το σύστημα υποστηρίζει επεξηγήσεις σε αναιρέσιμη λογική τόσο για θετικές όσο και για αρνητικές απαντήσεις σε ερωτήματα των χρηστών.
Επιπλέον, χρησιμοποιεί έναν αλγόριθμο κλαδέματος που αφαιρεί τις περιττές πληροφορίες προκειμένου να διατυπώσει μια λογική απόδειξη.
Ωστόσο, παρά το γεγονός ότι η παροχή και επεξήγηση αποδείξεων είναι εξαιρετικά χρήσιμη, υπάρχει μια ακόμη πιο σημαντική πτυχή, αυτή του ελέγχου των επεξηγήσεων.
Ως εκ τούτου, ο DR-Prolog-Reasoner εξοπλίστηκε και με την λειτουργικότητα μιας νέας υπηρεσίας επαλήθευσης αποδείξεων, υπηρεσία που παρουσιάζεται στην συνέχεια (Ενότητα 4.2.6).
Πρακτικά, η υπηρεσία αυτή δεν είναι μια αυτόνομη υπηρεσία, αυτό συμβαίνει στην περίπτωση της υπηρεσία επαλήθευσης αποδείξεων Proofing Validator (Ενότητα 4.2.6), αποτελεί όμως ένα επιπλέον χαρακτηριστικό, που μπορεί να προσφερθεί όταν απαιτείται από τον αιτούντα πράκτορα.
Πιο συγκεκριμένα, οι επεξηγήσεις των αποδείξεων τροφοδοτούνται στην υπηρεσία επαλήθευσης αποδείξεων, η οποία, με την σειρά της, ελέγχει την εγκυρότητα των συμπερασμάτων.
Με αυτό τον τρόπο, ο DR-Prolog-Reasoner είναι πλέον σε θέση όχι μόνο να επεξεργάζεται ερωτήματα αλλά να παρέχει, επίσης, επεξηγήσεις αποδείξεων (για τα αποτελέσματα της συλλογιστικής) και ελέγχους εγκυρότητας (για τις επεξηγήσεις των αποδείξεων).
Ωστόσο, οι επεξηγήσεις και ο έλεγχος της εγκυρότητάς τους, μέσω της υπηρεσίας επαλήθευσης αποδείξεων, είναι διαθέσιμα, όπως έχει αναφερθεί, μόνο κατόπιν απαίτησης.
Με άλλα λόγια, ο DRProlog-Reasoner μπορεί να χρησιμοποιείται με την συνηθισμένη του ιδιότητα, αυτή της παροχής υπηρεσιών συλλογιστικής, και κάθε φορά που απαιτείται μπορεί να παρέχει και επεξηγήσεις, αποστέλλοντας στον αιτούντα πράκτορα τα αποτελέσματα μαζί με τις επεξηγήσεις τους και την διαβεβαίωση εγκυρότητας.
Υπηρεσία Επαλήθευσης Αποδείξεων Proofing Validator Δεδομένης της σημαντικότητας των αποδείξεων και της επαλήθευσης τους, σε αυτή την ενότητα, προτείνεται μια νέα υπηρεσία επαλήθευσης αποδείξεων, που ονομάζεται Proof Validator [Kravari et al., 2011a;
Η υπηρεσία αυτή επιπλέον της παρούσας αυτόνομης δράσης της, έχει ενσωματωθεί και στην υπηρεσία DR-Prolog-Reasoner, που περιγράφηκε στην προηγούμενη ενότητα, ως επιπλέον προσφερόμενο χαρακτηριστικό, καθώς αποτελεί σημαντικό στοιχείο διασφάλισης ποιότητας.
Πρακτικά, ο Proof Validator είναι ένας ελεγκτής αναιρέσιμων αποδείξεων που ακολουθεί την λειτουργικότητα των υπηρεσιών παροχής συλλογιστικής (Reasoners), υπό την έννοια ότι λαμβάνει αιτήματα και αποστέλλει πίσω την απάντηση του.
Ωστόσο, έχει, επίσης, την δυνατότητα να ενσωματωθεί σε οποιοδήποτε άλλο σύστημα.
Η αρμοδιότητά του είναι να αποφασίσει εάν οι παρεχόμενες αποδείξεις, δοθείσας μιας θεωρίας σε XML, είναι έγκυρες ή όχι.
Στην περίπτωση που οι αποδείξεις δεν είναι έγκυρες, επιστρέφεται ένα κατάλληλο μήνυμα σφάλματος, ανάλογα με την φύση του προβλήματος.
Ειδικότερα, η υπηρεσία Proof Validator, αρχικά, λαμβάνει το αίτημα επαλήθευσης, στην συνέχεια, αναλύει τις ληφθείσες αποδείξεις και κατασκευάζει, με βάση αυτές, ένα Prolog ερώτημα.
Επιπρόσθετα, αναλύεται και μετασχηματίζεται κατάλληλα και η ληφθείσα θεωρία, η οποία στην συνέχεια εισάγεται στον μηχανισμό Prolog, προκειμένου να χρησιμοποιηθεί στην διαδικασία επαλήθευσης που διεξάγει η υπηρεσία.
Οι (XML) αποδείξεις περιέχουν πολλές πλεονάζουσες ή περιττές πληροφορίες, οι οποίες παραλείπονται από το ερώτημα επαλήθευσης.
Για παράδειγμα, στοιχεία που δηλώνουν την «αποδειξιμότητα» ενός κατηγορήματος μαζί με το κατηγόρημα και, συχνά, το όνομα του κανόνα είναι μείζονος σημασίας ενώ, από την άλλη πλευρά, στοιχεία που περιγράφουν το σώμα ενός κανόνα ή τις σχέσεις υπεροχής αγνοούνται.
Σε αυτό το σημείο, πρέπει να σημειωθεί ότι λόγω της έλλειψης ενός XML σχήματος ή ενός DTD που περιγράφει τις προδιαγραφές των αποδείξεων, ο συντακτικός αναλυτής δεν είναι σε θέση να παρέχει επικύρωση της XML.
Σε αυτό το πλαίσιο, έχουν γίνει ορισμένες παραδοχές για την υλοποίηση του Proof Validator.
Συγκεκριμένα, θεωρείται ότι η θεωρία είναι η ίδια με εκείνη που δόθηκε στην γεννήτρια αποδείξεων και, επιπλέον, κάθε δοθείσα θεωρία γίνεται αποδεκτή ως έγκυρη, χωρίς ελέγχους.
Ακόμη, δεν πραγματοποιούνται έλεγχοι αναδρομικά, επομένως, οποιαδήποτε πληροφορία απαιτείται πρέπει να παρέχεται στην αρχή.
Τέλος, κάθε δοθείσα στην θεωρία γνώση
7 Περισσότερες πληροφορίες σχετικά με τις ομάδες έργου που εργάστηκαν για τον DR-Prolog Reasoner και τον Proof Validator, βρίσκονται στην ιστοσελίδα http://www.csd.uoc.gr/~hy566/project2010.html. θεωρείται ότι είναι σίγουρα αποδεικτέα.
Για παράδειγμα, όλα τα γεγονότα προστίθενται ως αναμφίβολη γνώση, ανεξάρτητα από την παρουσία δήλωσης στις αποδείξεις που τα υποστη-
Η υπηρεσία Proof Validator διακρίνει δύο ομάδες συλλογών (collections), δομών θεωρίας (theory structures) και δομών συνεπαγωγικών αποδείξεων (proof deduction structures).
Οι δομές θεωρίας είναι τέσσερις βάσεις γνώσης που περιέχουν τους αυστηρούς κανόνες, τους αναιρέσιμους κανόνες, τα γεγονότα και τους κανόνες ιεραρχίας.
Αυτές βοηθούν στην ανάκτηση οποιασδήποτε πληροφορίας χρησιμοποιείται από τις αποδείξεις.
Οι δομές συνεπαγωγικών αποδείξεων είναι βάσεις γνώσεις που περιέχουν οποιαδήποτε συναγόμενη πληροφορία η οποία έχει ήδη δηλωθεί στις αποδείξεις και επιβεβαιωθεί από τον μηχανισμό επαλήθευσης.
Ένα παράδειγμα κανόνα που προσθέτει γνώση στην βάση definitelykb είναι το ε-
Όλα τα γεγονότα που περιλαμβάνονται στην θεωρία προστίθενται, επίσης, στην βάση γνώσης definitelykb.
Αυτό σημαίνει ότι κάθε δηλωμένο γεγονός γίνεται, εξ ορισμού, δεκτό από τον μηχανισμό επαλήθευσης.
Για παράδειγμα, οι ακόλουθες δύο δηλώσεις γίνονται δεκτές, υπό την προϋπόθεση ότι το f είναι γεγονός της θεωρίας.
Οι κανόνες δεν αναφέρονται ρητά στα αποτελέσματα της επαλήθευσης των αποδείξεων, καθώς, όπως έχει αναφερθεί, είναι αποδεκτοί εκ των προτέρων και, έτσι, θεωρούνται έγκυροι.
Αντ’ αυτών, στις αποδείξεις χρησιμοποιείται μια απλή αναφορά του ονόματος τους.
Για παράδειγμα, η ύπαρξη του defeasibly(e,r2) στις αποδείξεις σημαίνει ότι το e εξάγεται, χρησιμοποιώντας τον κανόνα r2, ο οποίος μπορεί να βρεθεί στην βάση γνώσης της αρχικής θεωρίας.
Ένα συμπέρασμα στη θεωρία D είναι ένα προσημασμένο λεκτικό (tagged literal), που μπορεί να είναι είτε οριστικό (αναμφίβολο) είτε αναιρέσιμο [Antoniou et al., 2001].
Σε αυτό το πλαίσιο, η παρούσα υπηρεσία επαλήθευσης χρησιμοποιεί δύο ξεχωριστά κατηγορήματα για τις αυστηρές συνεπαγωγές, τα +Δ (αναμφίβολα) και –Δ (όχι αναμφίβολα), και δυο για τις αναιρέσιμες συνεπαγωγές, τα + (αναιρέσιμα) και – (όχι αναιρέσιμα).
Για τις θετικές συνεπαγωγές (+Δ, +), όταν το συμπέρασμα αποδεικνύεται από έναν κανόνα, το όνομα του κανόνα απαιτείται από τον μηχανισμό της επαλήθευσης.
Διαφορετικά, όταν, για παράδειγμα, το συμπέρασμα είναι ένα γεγονός ή όταν έχει ήδη δοθεί ή αφαιρεθεί σε προηγούμενο στάδιο, δεν απαιτείται.
Αυτή η προσέγγιση ακολουθείται για λόγους αποτελεσματικότητας.
Για τις αρνητικές συνεπαγωγές, από την άλλη πλευρά, είναι περιττό να δοθεί το όνομα του κανόνα.
Αυτό οφείλεται στο γεγονός ότι, ακόμη και εάν από έναν κανόνα προκύψει ένα αρνητικό αποτέλεσμα, ο μηχανισμός επαλήθευσης πρέπει να ανακτήσει όλους τους υπάρχοντες σχετικούς κανόνες, ανεξάρτητα από το εάν οι αποδείξεις τους αναφέρουν ή όχι.
Για παράδειγμα, οι κανόνες που ελέγχουν εάν ένα λεκτικό, το οποίο φέρεται να είναι είτε γεγονός είτε ένα ήδη αποδεδειγμένο λεκτικό, είναι αναμφίβολα αποδεικτέο ή όχι, είναι οι ακόλουθοι.
Το δεύτερο όρισμα χρησιμοποιείται για να δηλώσει εάν τα σφάλματα θα τυπωθούν ή όχι και λαμβάνει δύο τιμές, printOn και printOff.
Οι δύο πρώτοι κανόνες ελέγχουν εάν το Χ είναι γεγονός ενώ ο τρίτος ελέγχει εάν έχει ήδη χαρακτηριστεί αναμφίβολα αποδεικτέο λεκτικό.
Σε περίπτωση που αποτύχουν αυτοί οι τρεις κανόνες, τότε το X δεν είναι τίποτα από τα δύο και ο τέταρτος κανόνας τυπώνει ένα μήνυμα σφάλματος.
Στην συνέχεια επεξηγούνται τα στάδια της επαλήθευσης για ένα σύνθετο παράδειγμα.
Μια έγκυρη και ορθή απόδειξη είναι η ακόλουθη:
Οι τέσσερις πρώτες δηλώσεις εξάγονται εύκολα, καθώς τα a, b, c και d είναι γεγονότα.
Για την τελευταία, defeasibly(e,r2), πρέπει να γίνουν κάποιοι έλεγχοι αποδείξεων όπως οι ακό-
Υπάρχει κανόνας «r2» στην θεωρία με κεφαλή e;
Υπάρχει αναμφίβολη απόδειξη για το ~e;
Υπάρχει κάποιος επιτιθέμενος κανόνας;
Είναι ο r2 υψηλότερης προτεραιότητας από τον r3;
Είναι οι συνθήκες του r3 (c) αναιρέσιμα αποδεικτέες;
Υπάρχει κάποιος επιτιθέμενος κανόνας για τον r3 (διαφορετικό από τον r2), ο οποίος τον νικά;
Ναι, ο r1, καθώς οι συνθήκες του ισχύουν και r1 > r3.
Είναι ο r2 υψηλότερης προτεραιότητας από τον r4;
Όπως έχει ήδη αναφερθεί, οι πράκτορες δεν περιορίζονται στην κατοχή λογικών και στρατηγικών απόλυτα υλοποιημένων στον κώδικα τους.
Αντ' αυτού, μπορούν να είναι γενικοί ή παραμετροποιήσιμοι.
Σε αυτό το πλαίσιο, η παρούσα διατριβή προτείνει ένα γενικό, επαναχρησιμοποιήσιμο πρότυπο για την δημιουργία και παραμετροποίηση ευέλικτων ευφυών πρακτόρων στο περιβάλλον του Σημασιολογικού Ιστού.
Το πρότυπο, αυτό, ονομάζεται KC-Agents και αποτελείται, όπως έχει ήδη αναφερθεί (Εικόνα 4.8), από ένα πρακτορικό μοντέλο, που ονομάζεται KC Model, μια σειρά προηγμένων υπηρεσιών καταλόγου / «χρυσού οδηγού» (AYPS) και μια βιβλιοθήκη εξωτερικών μεθόδων (BJL) [Kravari et al., 2009b;
Σύμφωνα με το μοντέλο KC Model, κάθε πράκτορας είναι εξοπλισμένος με μια βάση γνώσης (Jess KB) και έναν μηχανισμό κανόνων Jess8 για να διαχειρίζεται αυτήν την βάση.
Η βάση γνώσης, πρακτικά, αποτελεί ένα αρχείο γραμμένο στην γλώσσα κανόνων Jess (.clp) και περιέχει την γνώση του πράκτορα, υπό την μορφή γεγονότων (facts), και το μοτίβο της συμπεριφοράς του, υπό την μορφή παραγωγικών κανόνων (rules).
Η βάση γνώσης αλλάζει εύκολα, χωρίς πρόσθετο προγραμματιστικό κόστος.
Με την αλλαγή της, οι γνώσεις ή και η συμπεριφορά του πράκτορα αμέσως τροποποιείται αναλόγως.
Έτσι, ο πράκτορας παραμένει πάντοτε ενημερωμένος και συμβατός με τις γνώσεις και τους στόχους του χρήστη του.
Οι περιπτώσεις χρήσης που παρουσιάζονται στο τέλος του κεφαλαίου καταδεικνύουν αυτό το χαρακτηριστικό.
Πιο συγκεκριμένα, οι πράκτορες που συμμορφώνονται με τις προδιαγραφές του μοντέλου, περιγράφονται με γεγονότα και κανόνες.
Σε αυτή την περιγραφή, η γενική μορφή των κανόνων αναπαρίσταται ως result ← rule (preconditions).
Η εσωτερική γνώση του πράκτορα είναι ένα σύνολο γεγονότων (F), που αποτελείται από το υποσύνολο Fu και το υποσύνολο Fe.
Το σύνολο γεγονότων Fu αφορά γεγονότα καθορισμένα από τον χρήση ενώ το σύνολο γεγονότων Fe αφορά γεγονότα του περιβάλλοντος.
Τα παραπάνω ορίζονται τυπικά ως:
Η συμπεριφορά του πράκτορα είναι ένα σύνολο (P) πιθανών ενεργειών, εκφρασμένων σε παραγωγικούς κανόνες της γλώσσας Jess.
Το σύνολο P αποτελείται από κανόνες που εξά8 Ιστοσελίδα Jess, http://www.Jessrules.com. γουν νέα γεγονότα, εισάγοντας τα στην βάση γνώσης (υποσύνολο A) και κανόνες που οδηγούν στην εκτέλεση ειδικών ενεργειών (υποσύνολο S).
Οι ειδικές ενέργειες αφορούν είτε την επικοινωνία των πρακτόρων (υποσύνολο C) είτε την κλήση Java μεθόδων (υποσύνολο J).
ACLMessage είναι ένα πρότυπο για τον καθορισμό των ACL μηνυμάτων στην γλώσσα Jess ενώ το κατηγόρημα JavaMethod αναφέρεται στις ορισμένες από τον χρήστη, μεθόδους Java.
Μια γενική περιγραφή για το συντακτικό των κανόνων επικοινωνίας είναι η εξής: όπου communicative-act, sender, receiver και content είναι τέσσερις από τις παραμέτρους του προτύπου ACLMessage, σύμφωνα με τις προδιαγραφές της FIPA.
Από την άλλη πλευρά, οι ορισμένες από τον χρήστη μέθοδοι Java μπορούν να καλούνται μέσα από τους κανόνες της γλώσσας Jess, για την εκτέλεση ειδικών ενεργειών, όπως η προσπέλαση συγκεκριμένου περιεχομένου σε ένα αρχείο.
Ένα γενικό συντακτικό για αυτούς τους κανόνες είναι:
Στον παραπάνω κανόνα, το ?x αφορά ένα νέο στιγμιότυπο μιας συγκεκριμένης Java κλάσης, το $?a είναι η λίστα των ορισμάτων που απαιτούνται από την κλάση της συγκεκριμένης μεθόδου και ?y είναι το επιστρεφόμενο αποτέλεσμα.
Προηγμένες Υπηρεσίες Καταλόγου Το πρότυπο KC-Agents παρέχει, επιπλέον, προηγμένες παραμετροποιήσιμες διαδικασίες για τις υπηρεσίες του καταλόγου πρακτόρων ή «χρυσού οδηγού».
Οι διαδικασίες, αυτές, ονομάζονται προηγμένες υπηρεσίες χρυσού οδηγού (Advanced Yellow Pages Service AYPS) και αφορούν τόσο τις παρεχόμενες από τους πράκτορες υπηρεσίες όσο και αυτές που αναζητούν [Kravari et al., 2010b;
Στην πλατφόρμα JADE, που αποτελεί την βάση του συστήματος EMERALD, οι παραδοσιακές υπηρεσίες χρυσού οδηγού παρέχονται από τον πράκτορα Directory Facilitator (DF) [Bellifemine et al., 2003;
Ο πράκτορας αυτός επιστρέφει ικανοποιητικά αποτελέσματα, ωστόσο τα αποτελέσματα αυτά έχουν την μορφή περιεχομένου ACL μηνύματος, γεγονός που τα καθιστά ακατάλληλα τόσο για τους πράκτορες που ακολουθούν το πρότυπο KC-Agents όσο και για τους υπόλοιπους πράκτορες που δρουν στο περιβάλλον του συστήματος EMERALD.
Το γεγονός αυτό αποτέλεσε πρωταρχικό κίνητρο για την ανάπτυξη προηγμένων υπηρεσιών, κατάλληλων για αυτόματη χρήση.
Έτσι, με τις προηγμένες υπηρεσίες, που προτείνονται στην παρούσα διατριβή και περιλαμβάνουν υπηρεσίες σημασιολογικού καταλόγου και αναζήτησης καθώς και υπηρεσίες βασισμένες στην αξιοπιστία των υπηρεσιών, οι παραδοσιακές υπηρεσίες χρυσού οδηγού αυτοματοποιούνται πλήρως και επεκτείνονται.
Πιο συγκεκριμένα, οι υπηρεσίες σημασιολογικού καταλόγου είναι σημαντικές για τους πράκτορες των πολυπρακτορικών συστημάτων, καθώς πρέπει ο ένας να εντοπίζει τον άλλο, προκειμένου να ικανοποιήσουν τις ανάγκες τους.
Για παράδειγμα, ένας πράκτορας θα ήταν αδύνατο να εντοπίσει έναν μηχανικό (engineer) χωρίς μια υπηρεσία χρυσού οδηγού.
Επιπλέον, εάν δεν υπάρχει μηχανικός, που να δραστηριοποιείται στο περιβάλλον, ο πράκτορας θα πρέπει να αναζητήσει κάποιον σχετικό τεχνίτη (mechanic).
Σε αυτό το πλαίσιο, οι προτεινόμενες προηγμένες υπηρεσίες σημασιολογικού καταλόγου υποστηρίζουν τόσο μερική αναζήτηση όσο και αναζήτηση συνωνύμων.
Έτσι, για κάθε καταχωρημένο πράκτορα, κάθε φορά που ζητείται, επιστρέφονται πληροφορίες όπως το όνομα του, ο τύπος του, ο χρόνος καταχώρησης του στο σύστημα και η δραστηριότητα του.
Φυσικά, οι πληροφορίες αυτές είναι, ως οφείλουν, πάντοτε ενημερωμένες και έγκυρες.
Από την άλλη πλευρά, δεδομένου ότι οι υπηρεσίες αναζήτησης που βασίζονται στην αξιοπιστία των υπηρεσιών έχουν ήδη αναγνωριστεί ως πολύ σημαντικές, στην παρούσα διατριβή προτείνονται υπηρεσίες, υπεύθυνες για την παρουσίαση πληροφοριών σχετικών με όλα τα διαθέσιμα στο σύστημα μοντέλα αξιοπιστίας, τα οποία παρουσιάζονται αναλυτικά στο έκτο κεφάλαιο της παρούσας διατριβής.
Οι πληροφορίες αυτές περιλαμβάνουν το όνομα του μοντέλου, τον τύπο και την μετρική του, τον χρόνο εισαγωγής του στο σύστημα, τον αριθμό των περιπτώσεων που χρησιμοποιήθηκε αλλά και από ποιον χρησιμοποιήθηκε.
Επιπλέον, διασφαλίζεται και η ιδιωτικότητα κάθε πράκτορα, καθώς κάθε ένας από αυτούς καταγράφει τις υπηρεσίες που παρέχει ή/και αναζητά σε ένα ξεχωριστό αρχείο, προσβάσιμο μόνο από τον ίδιο.
Μόνο όταν ο πράκτορας επιθυμεί να διαφημίσει μία ή περισσότερες υπηρεσίες, ενεργοποιείται η κατάλληλη υπηρεσία AYPS και τις τοποθετεί σε ένα αποθετήριο.
Κατά τον ίδιο τρόπο, μόνο όταν ο πράκτορας αναζητά κάποια συγκεκριμένη υπηρεσία, η υπεύθυνη υπηρεσία AYPS διασχίζει το χώρο αποθήκευσης, ομαδοποιώντας και ταξινομώντας τις υπηρεσίες σύμφωνα με το πεδίο εφαρμογής και τον τύπο τους, μεταξύ άλλων.
Με αυτόν τον τρόπο επιτρέπει στους, αιτούντες την υπηρεσία, πράκτορες να υποβάλλουν σύνθετα ερωτήματα, επιστρέφοντας πάντοτε τους κατάλληλους, γι’ αυτούς, παρόχους υπηρεσιών.
Η διαδικασία επικοινωνίας με τις υπηρεσίες AYPS είναι παρόμοια με αυτή που ακολουθείται από τους ειδικούς πράκτορες Reasoners.
Συγκεκριμένα, κάθε πράκτορας που θέλει να χρησιμοποιήσει μια υπηρεσία αποστέλλει ένα ACL μήνυμα τύπου «REQUEST» στον πράκτορα διαχειριστή των υπηρεσιών AYPS.
Τα αποτελέσματα επιστρέφονται με τον ίδιο τρόπο μέσω ACL μηνυμάτων τύπου «INFORM».
Για την ευκολότερη και αποτελεσματικότερη επικοινωνία των πρακτόρων, παρέχεται μια διεπαφή προγραμματισμού εφαρμογών (API), η οποία περιέχει τις απαραίτητες συναρτήσεις (Παράρτημα Γ).
Από αυτές τις συναρτήσεις ξεχωρίζουν τρείς, οι οποίες αφορούν τις τρεις πιθανές περιπτώσεις της μορφής των αιτημάτων και, κατ’ επέκταση, την μορφή της απάντησης.
Συγκεκριμένα, η πρώτη μέθοδος ελέγχει εάν ένα αίτημα είναι σε μορφή Jess γεγονότος ή όχι.
Εάν είναι, τότε η απάντηση θα είναι επίσης γραμμένη στο συντακτικό της γλώσσας Jess (Εικόνα 4.9α).
Για παράδειγμα, η πληροφορία σχετικά με τους πιθανούς παρόχους, όσον αφορά το πρότυπο KC-Agents, επιστρέφεται ως Jess γεγονότα με καθορισμένη μορφή, δηλαδή (service_type (PROVIDER_NAME πάροχο)), έτσι ώστε να είναι δυνατή η αυτόματη χρήση της από τους πράκτορες του προτύπου.
Εάν, ωστόσο δεν είναι, θα ελεγχθεί εάν είναι σε μορφή απλού κειμένου (Εικόνα 4.9β) ή σε κάποιο άλλο συντακτικό, παρόμοιο με αυτό των συναρτήσεων, δηλαδή εάν το αίτημα περιέχει μια άμεση κλήση συνάρτησης, όπως ακριβώς γίνεται σε ένα πρόγραμμα (Εικόνα 4.9γ).
Φυσικά, σε κάθε περίπτωση, η απάντηση θα είναι στην ίδια μορφή.
Τέλος, εάν η σύνταξη του αιτήματος είναι άγνωστη, θα αποσταλεί ένα ενημερωτικό μήνυμα σφάλματος («wrong format or wrong arguments»).
BJL: Βιβλιοθήκη Εξωτερικών Μεθόδων Προκειμένου να παρέχεται μια τυπική διασύνδεση επικοινωνίας μεταξύ της βάσης γνώσης, που είναι υλοποιημένη στην γλώσσα κανόνων Jess, και του ίδιου του πράκτορα, η δομή του οποίου είναι υλοποιημένη στην γλώσσα Java, αναπτύχθηκε μια βιβλιοθήκη Java μεθόδων (Basic Java Library BJL), η οποία περιλαμβάνει όλες τις απαραίτητες, για αυτό το σκοπό, μεθόδους.
Κάθε μέθοδος της βιβλιοθήκης μπορεί να κληθεί από τις ενέργειες του, συμβατού με το πρότυπο KC-Agents, πράκτορα, δηλαδή μέσω των Jess κανόνων παραγωγής που περιέχει η βάση γνώσης του.
Η σύνταξη αυτών των κανόνων ακολουθεί το πρότυπο:
H μεταβλητή ?t δεσμεύει ένα νέο στιγμιότυπο της βιβλιοθήκης BJL και η μεταβλητή ?str περιέχει την επιστρεφόμενη τιμή.
Για παράδειγμα, η μέθοδος createRulebase, δημιουργεί ένα αντίγραφο ασφαλείας της βάσης κανόνων, προσδιορίζοντας τα RDF δεδομένα εισόδου ενώ η μέθοδος extractTriples εξάγει τις τριπλέτες από ένα αρχείο RDF και τις αποθηκεύει ως γεγονότα.
Προκειμένου να εξαχθεί κάποια «γνώση» από αυτά τα δεδομένα πρέπει να εκτελεστούν οι κατάλληλοι κανόνες. ‘Ένα παράδειγμα τέτοιου κανόνα, όπου ανακαλύπτεται η ιδιότητα Α του Β είναι το εξής:
Μηχανισμοί Εμπιστοσύνης και Αξιοπιστίας Ο Tim Berners-Lee περιέγραψε την εμπιστοσύνη ως θεμελιώδες συστατικό του οράματος του για τον Σημασιολογικό Ιστό [Berners-Lee, 1999;
Επομένως, δεν αποτελεί έκπληξη το γεγονός ότι η εμπιστοσύνη θεωρείται κρίσιμη για τις συναλλαγές των ευφυών πρακτόρων που δρουν σε αυτόν, όπου πρέπει να αλληλεπιδρούν κάτω από αβέβαιες και επικίνδυνες καταστάσεις.
Στην βιβλιογραφία, υπάρχουν διάφορες μετρικές εμπιστοσύνης, ορισμένες αφορούν την εμπειρία του παρελθόντος, ορισμένες δίνουν έμφαση στις γνώμες των εταίρων ενός πράκτορα και ορισμένες χρησιμοποιούν την προηγούμενη εμπειρία ενός μόνο πράκτορα.
Κατά την τελευταία δεκαετία, έχουν προταθεί πολλά διαφορετικά μοντέλα και μετρικές αλλά τα περισσότερα δεν έχουν τύχει ευρείας εφαρμογής.
Για παράδειγμα, πέντε τέτοιες περιπτώσεις περιγράφονται στο [Macarthur, 2008], μεταξύ αυτών το Sporas [Zacharia et al., 2000] φαίνεται να είναι η πλέον χρησιμοποιούμενη μετρική, μολονότι η CR (Certified Reputation) [Huynh et al., 2006b] είναι μια από τις πιο δημοφιλείς.
Σε αυτό το πλαίσιο, το προτεινόμενο πολυπρακτορικό σύστημα EMERALD υιοθετεί την χρήση ορισμένων μοντέλων και μετρικών.
Συγκεκριμένα, η παρούσα διατριβή πραγματεύεται την σχεδίαση, υλοποίηση και χρήση πέντε νέων, πρωτότυπων υβριδικών μοντέλων εμπιστοσύνης και αξιοπιστίας, τα όποια και ενσωματώνονται στο προτεινόμενο σύστημα.
Αναλυτικά, η προσέγγιση κάθε ενός από αυτά τα μοντέλα μελετάται στο έκτο κεφάλαιο της διατριβής.
Ωστόσο, για λόγους πληρότητας, στην παρούσα ενότητα παρουσιάζεται σύντομη επισκόπηση τους.
Πιο συγκεκριμένα, όπως αναφέρθηκε, τα πέντε μοντέλα αποτελούν υβριδικές προσεγγίσεις, δηλαδή συνδυάζουν τόσο την άμεση προσωπική εμπειρία όσο και τις διαθέσιμες μαρτυρίες τρίτων.
Ειδικότερα, πρόκειται για υβριδικά μοντέλα εκτίμησης της φήμης κάθε πράκτορα, με άλλα λόγια, της γνώμης των υπολοίπων για τον πράκτορα.
Στην πραγματικότητα, τα μοντέλα φήμης, ή εμπιστοσύνης γενικότερα, παρέχουν το μέσο για να προσδιοριστεί ποσοτικά η φήμη και τελικά η εμπιστοσύνη [Resnick et al., 2000], επιτρέποντας στους πράκτορες να εδραιώσουν σχέσεις που οδηγούν σε αμοιβαία οφέλη.
Σε αυτό το πλαίσιο, απώτερος στόχος κάθε μοντέλου είναι να αναπαριστά τις διαπροσωπικές σχέσεις του πραγματικού κόσμου και να οδηγεί σε λογικά και ρεαλιστικά συμπεράσματα παρόμοια με την ανθρώπινη λογική.
Από τα πέντε μοντέλα, τα τρία ακολουθούν τις αρχές της κεντρική προσέγγισης, διαθέτoντας, μεταξύ άλλων, μια κεντρική διαχειριστική αρχή ενώ τα υπόλοιπα δυο αποτελούν κατανεμημένες προσεγγίσεις.
Τα τρία μοντέλα της κεντρικής προσέγγισης, ονομάζονται SERM [Kravari et al., 2010b;
Kravari & Bassiliades, 2012b], T-REX [Kravari et al., 2010a] και HARM [Kravari & Bassiliades, 2012a] ενώ τα κατανεμημένα ονομάζονται DRM [Kravari et al., 2010b;
Kravari & Bassiliades, 2012b] και DISARM [kravari & Bassiliades, 2015b].
Το SERM σχεδιάστηκε κυρίως για την αξιολόγηση των υπηρεσιών συλλογιστικής που παρέχονται από τους ειδικούς πράκτορες Reasoners του συστήματος EMERALD και, έτσι , επικεντρώνεται κυρίως σε κριτήρια κατάλληλα για την αξιολόγηση τέτοιων υπηρεσιών, όπως είναι η ορθότητα (Correctness) και η πληρότητα (Completeness) της παρεχόμενης υπηρεσίας, η ευελιξία (Flexibility) και ο χρόνος απόκρισης (Response time).
Φυσικά, το μοντέλο μπορεί να χρησιμοποιηθεί και σε οποιαδήποτε άλλη περίπτωση αξιολόγησης στο περιβάλλον.
Το T-REX βασίζεται σε παρόμοια με το SERM κριτήρια, όπως είναι η ορθότητα, η πληρότητα και ο χρόνος απόκρισης.
Ωστόσο, είναι ένα δυναμικό και ευέλικτο μοντέλο, που μπορεί να μεταβληθεί από ένα σύστημα μαρτυριών σε ένα σύστημα απόλυτα βασισμένο στην προηγούμενη προσωπική εμπειρία του πράκτορα που το χρησιμοποιεί.
Επιπρόσθετα, το συγκεκριμένο μοντέλο υιοθετεί μια μεθοδολογία για την μείωση της υπολογιστικής πολυπλοκότητας, παρέχοντας τελικά έναν μηχανισμό με χαμηλό εύρος ζώνης και χαμηλό αποθηκευτικό και υπολογιστικό κόστος.
Το μοντέλο HARM, από την άλλη πλευρά, βελτιώνει ακόμη περισσότερο την αποτελεσματικότητα της υβριδικής προσέγγισης, μέσω μια νέας πρωτότυπης προσέγγισης που συνδυάζει τα πλεονεκτήματα των υβριδικών μοντέλων με αυτά της χρήσης κανόνων, μέσα από το πρίσμα της χρονικής αναιρέσιμης λογικής.
Λαμβάνει υπόψη του κριτήρια, όπως η εγκυρότητα (validity), η πληρότητα, η ορθότητα και ο χρόνος απόκρισης ενώ εισάγει δύο νέες παραμέτρους, την βεβαιότητα (confidence) και την σημαντικότητα (transaction value).
Οι δύο τελευταίες παράμετροι δεν λαμβάνονται υπόψη κατά τον υπολογισμό της φήμης ενός πράκτορα αλλά συμβάλουν στην βέλτιστη επιλογή αναφορών για τον υπολογισμό.
Παρόμοια, το μοντέλο DISARM υιοθετεί την χρήση της αναιρέσιμης (όχι χρονικής) λογικής για την παροχή ενός ευέλικτου, κατανεμημένου αυτή τη φορά, μοντέλου.
Στην πραγματικότητα, το DISARM αποτελεί μια αναβαθμισμένη και επεκτεταμένη προσέγγιση που βασίζεται εν μέρει στις βασικές αρχές του μοντέλου HARM.
Σε αυτό το πλαίσιο, επιπρόσθετα, των κριτηρίων και παραμέτρων που χρησιμοποιούνται στο μοντέλο HARM, εισάγεται η έννοια της συνεργασίας (cooperation) και της έκβασης (outcome feeling), βελτιώνοντας την αποτελεσματικότητα της εκτίμησης.
Ένα ιδιαίτερο και πρωτότυπο χαρακτηριστικό της προσέγγισης του μοντέλου DISARM είναι ότι το περιβάλλον των ευφυών πρακτόρων αντιμετωπίζεται ως κοινωνική δομή, υιοθετώντας την έννοια των γειτόνων.
Με αυτό τον τρόπο, προσεγγίζεται ακόμη περισσότερο η ανθρώπινη συμπεριφορά ενώ μειώνεται και η δυσκολία εντοπισμού αναφορών.
Τέλος, το κατανεμημένο μοντέλο φήμης DRM βασίζεται σε δυο από τα πλέον αξιοσημείωτα μοντέλα, το SPORAS και το Certified Reputation, παρέχοντας έναν απλό αλλά αξιόπιστο μηχανισμό εκτίμησης.
Γραφική Διεπαφή Χρήστη – Υπηρεσίες Αναζήτησης και Εποπτείας Μια πληθώρα πολυπρακτορικών συστημάτων, όπως το EMERALD, είναι ήδη διαθέσιμα και χρησιμοποιούνται.
Ωστόσο, παρά την συμβολή κάθε συστήματος και τις προσπάθειες ορισμένων προσεγγίσεων [Ilarri et al., 2007;
Lee et al., 2006], υπάρχει μια σαφής έλλειψη σε εργαλεία επαρκούς αναζήτησης υπηρεσιών και εποπτείας του πολυπρακτορικού συστήματος και των ευφυών πρακτόρων που δρουν σε αυτό.
Αυτή η έλλειψη εργαλείων αποτελεί ένα κρίσιμο μειονέκτημα τόσο για την μελέτη των πολυπρακτορικών συστημάτων όσο και για την εμπιστοσύνη των ανθρώπων-χρηστών στην αποδοτικότητα τους.
Για την αντιμετώπιση αυτών των ζητημάτων, η παρούσα διατριβή προτείνει μια νέα και βιώσιμη, βασισμένη στους ευφυείς πράκτορες, προσέγγιση.
Πιο συγκεκριμένα, όπως έχει ήδη παρουσιαστεί (ενότητα 4.3), στα πλαίσια της διατριβής σχεδιάστηκαν και υλοποιήθηκαν προηγμένες υπηρεσίες, οι οποίες διακρίνονται σε δύο κύριες κατηγορίες, τις υπηρεσίες αναζήτησης και σημασιολογικού καταλόγου και τις υπηρεσίες αναζήτησης που βασίζονται στην αξιοπιστία των υπηρεσιών [Kravari & Bassiliades, 2012b].
Επιπρόσθετα αυτών, προτείνονται και εργαλεία εποπτείας, όπως η παρακολούθηση στατιστικών στοιχείων σχετικά με την χρήση των μοντέλων αξιοπιστίας στο σύστημα.
Ωστόσο, παρά το γεγονός ότι αυτές οι υπηρεσίες ενσωματώνονται και προσφέρονται μέσω των υπηρεσιών χρυσού οδηγού (AYPS) του συστήματος EMERALD, η γενική αρχιτεκτονική της προσέγγισης (Εικόνα 4.10) μπορεί να υιοθετηθεί από οποιοδήποτε
Κομβικό στοιχείο της προτεινόμενης αρχιτεκτονικής αποτελεί ο πράκτορας Monitoring Agent (MA), ο οποίος είναι επιφορτισμένος με τα καθήκοντα του διαχειριστή.
Η επιλογή ενός πράκτορα ως βάσης για την υλοποίηση προσφέρει ευελιξία, καθώς είναι πιο εύκολο για τους πράκτορες που δρουν στο περιβάλλον να επικοινωνούν και να αλληλεπιδρούν με έναν άλλο ανεξάρτητο πράκτορα.
Έτσι, ο πράκτορας MA είναι υπεύθυνος για την παρακολούθηση, την καταγραφή και την παρουσίαση των πληροφοριών που σχετίζονται με κάθε αλληλεπίδραση που λαμβάνει χώρα μεταξύ των πρακτόρων του συστήματος.
Όσον αφορά την αποθήκευση των εγγραφών προτείνεται η χρήση μιας βάσης δεδομένων, καθώς προσφέρει σημαντικά πλεονεκτήματα, όπως η εύκολη, ευέλικτη και γρήγορη επεξεργασία δεδομένων.
Επιπλέον, δεδομένου ότι οι προτεινόμενες υπηρεσίες οφείλουν να υπηρετούν, εκτός από τους ίδιους τους πράκτορες, και τους ανθρώπους-χρήστες, ο πράκτορας MA διαθέτει ένα γραφικό περιβάλλον που του επιτρέπει να αλληλεπιδρά με τους χρήστες.
Σε αυτή την γραφική διεπαφή βρίσκονται διαθέσιμες όλες οι υπηρεσίες, οι οποίες ομαδοποιούνται σε τέσσερις καρτέλες, την AYPS, την TRUST, την STATISTICS και την SYNONYMS.
Προηγμένες Υπηρεσίες Σημασιολογικού Καταλόγου Η πρώτη καρτέλα, που ονομάζεται AYPS (Εικόνα 4.11), περιλαμβάνει τις υπηρεσίες σημασιολογικού καταλόγου, οι οποίες είναι υπεύθυνες για την καταγραφή και παρουσίαση πληροφοριών σχετικά με τους καταχωρημένους πράκτορες.
Οι πληροφορίες αυτές αποθηκεύονται δυναμικά στην βάση δεδομένων του διαχειριστή MA και αφορούν το όνομα αυτών των πρακτόρων, τον τύπο τους, τον χρόνο καταχώρησης τους στο σύστημα και την δραστηριότητα τους.
Έτσι, ο πράκτορας MA είναι πάντα σε θέση να ανακτά τις πιο πρόσφατες πληροφορίες.
Η υπηρεσία καταλόγου και, κατά συνέπεια, η καρτέλα AYPS, διαχωρίζεται σε δύο τμήματα, το τμήμα αναζήτησης (άνω ήμισυ της καρτέλας) και το τμήμα περιγραφής (κάτω ήμισυ).
Όσον αφορά, το τμήμα περιγραφής, ο πράκτορας MA πραγματοποιεί ένα ερώτημα στην βάση δεδομένων και ανακτά μια λίστα με όλους τους εγγεγραμμένους πράκτορες.
Έπειτα, τους ταξινομεί σε αύξουσα αλφαβητική σειρά ανάλογα με το όνομα τους.
Αυτή η ταξινομημένη λίστα εμφανίζεται στην περιοχή «Agent names».
Κάθε φορά που ένας χρήστης επιλέγει κάποιον από αυτούς, οι σχετικές με αυτόν πληροφορίες εμφανίζεται στην περιοχή «Description».
Για παράδειγμα, στην Εικόνα 4.12 υπάρχουν, ήδη, στην λίστα ορισμένοι καταχωρημένοι πράκτορες (a1, a2, …).
Έτσι, επιλέγοντας τον πράκτορα b1 πληροφορούμαστε για τον χρόνο καταχώρησης του στο σύστημα, το καθολικό και το τοπικό του όνομα, τον τύπο του κ.ο.κ.
Πρέπει να σημειωθεί, επίσης, ότι επιπρόσθετα της προεπιλεγμένης επιλογής ταξινόμησης (ταξινόμηση με βάση το όνομα), οι χρήστες μπορούν να επιλέξουν ανάμεσα στην ταξινόμηση με βάση τον τύπο και στην ταξινόμηση με βάση τον χρόνο.
Η επιλογή του τύπου αφορά στον παρεχόμενο από τον πράκτορα τύπο υπηρεσίας ενώ ο χρόνος αφορά τον χρόνο καταχώρησης του πράκτορα στην βάση του συστήματος.
Το τμήμα αναζήτησης της υπηρεσίας καταλόγου, από την άλλη πλευρά, υποστηρίζει άμεση αναζήτηση, παρέχοντας τρεις βασικές κατηγορίες, αναζήτηση με βάση το όνομα, τον τύπο ή τον χρόνο καταχώρησης (Εικόνα 4.13).
Οι δύο πρώτες κατηγορίες υποστηρίζουν μερική αναζήτηση, ωστόσο μόνο στην περίπτωση του τύπου υποστηρίζεται αναζήτηση συνωνύμων (βλ. επόμενη υποενότητα).
Η μερική αναζήτηση διαθέτει τρεις επιλογές, προθέματος (prefix), περιεχομένου (infix) και κατάληξης (suffix).
Η επιλογή προθέματος επιστρέφει όλους τους πράκτορες που το όνομα τους (ή ο τύπος τους) αρχίζει με τους δακτυλογραφημένους χαρακτήρες ενώ, αντίστοιχα, η επιλογή περιεχομένου επιστρέφει αυτούς που τους περιέχουν και η επιλογή κατάληξης αυτούς που τελειώνουν με τους συγκεκριμένους χαρακτήρες.
Τέλος, διατίθεται και η επιλογή της ακριβούς αναζήτησης, η οποία αναφέρεται στην κοινή ακριβή αναζήτηση, αλλά είναι διαθέσιμη μόνο στην αναζήτηση με βάση τον τύπο.
Ωστόσο, αυτή η επιλογή ενεργοποιεί μία ακόμη επιλογή, αυτή της συμπερίληψης των συνωνύμων («synonyms included»).
Κάθε φορά που περιλαμβάνονται και συνώνυμα, ο πράκτορας MA πραγματοποιεί δύο αναζητήσεις στην βάση δεδομένων.
Η πρώτη επιστρέφει όλους τους πράκτορες που έχουν τον ακριβή τύπο και η δεύτερη όλους όσοι ο τύπος τους είναι ίδιος με οποιοδήποτε διαθέσιμο συνώνυμο.
Η τελική λίστα περιέχει είτε και τις δυο περιπτώσεις πρακτόρων είτε μόνο αυτών που προκύπτουν από τα συνώνυμα εφόσον δεν υπάρχει ακριβής αντιστοιχία.
Όσον αφορά τον χρόνο, η αναζήτηση αφορά το χρονικό σημείο καταχώρησης του πράκτορα και μπορεί να προσδιοριστεί με ακρίβεια μέσω του καθορισμού της ώρας, των λεπτών και των δευτερολέπτων.
Κάθε φορά που επιλέγεται ένας συγκεκριμένος χρόνος, ο χρήστης έχει την δυνατότητα να επιλέξει την χρονική περίοδο που τον ενδιαφέρει.
Υπάρχουν τρεις διαθέσιμες επιλογές για αυτό, συγκεκριμένα, πριν, ίση και μετά το επιλεγμένο χρονικό σημείο.
Τέλος, πρέπει να σημειωθεί ότι η επιστρεφόμενη λίστα είναι πάντοτε ταξινομημένη σε αύξουσα αλφαβητική σειρά για όλα τα είδη των αναζητήσεων.
Προηγμένες Υπηρεσίες Σημασιολογικής Αναζήτησης Η υπηρεσία σημασιολογικής αναζήτησης επιτρέπει στους χρήστες να προσθέσουν ή να αφαιρέσουν συνώνυμα ή ακόμη και να τα επεξεργαστούν.
Η υπηρεσία υποστηρίζει για το σκοπό αυτό δύο ταξινομημένες λίστες, μία (κύρια) για τις αποθηκευμένες λέξεις και μια για τα συνώνυμά τους.
Η προσθήκη, διαγραφή ή επεξεργασία οποιουδήποτε από τα στοιχεία των λιστών προκαλεί άμεσες ενημερώσεις στις εγγραφές της βάσης δεδομένων.
Φυσικά, ο πράκτορας MA προστατεύει τις λίστες και, κατά συνέπεια, την βάση δεδομένων από διπλές εγγραφές.
Η λειτουργικότητα της υπηρεσίας παρουσιάζεται στην καρτέλα «Synonyms» της γραφικής διεπαφής (Εικόνα 4.14).
Στο άνω ήμισυ τμήμα της καρτέλας υπάρχει η πρώτη ταξινομημένη λίστα («Word list»).
Εκεί, ο χρήστης είναι σε θέση να δει όλες τις διαθέσιμες εγγραφές.
Επιπλέον, μπορεί να προσθέσει συνώνυμα για οποιαδήποτε από αυτές.
Για το σκοπό αυτό, η υπηρεσία παρέχει μια άλλη ταξινομημένη λίστα («Synonym list») με όλα τα διαθέσιμα συνώνυμα.
Σε αυτό το πλαίσιο, κάθε φορά που ένας χρήστης επιλέγει οποιαδήποτε από τις διαθέσιμες λέξεις, τα συνώνυμα της εμφανίζονται στην προαναφερθείσα λίστα συνωνύμων.
Εκεί, μπορεί να προσθέσει νέα συνώνυμα, να διαγράψει ή και να επεξεργαστεί τα υπάρχοντα.
Τέλος, είναι φανερό ότι η ακριβής αναζήτηση, που παρουσιάστηκε στην προηγούμενη υποενότητα, είναι απόλυτα συνδεδεμένη με την παραπάνω υπηρεσία, καθώς η επιλογή «synonyms included» αφορά την υπηρεσία συνωνύμων που παρουσιάστηκε εδώ.
Υπηρεσίες Αναζήτησης Βασισμένων στην Αξιοπιστία των Υπηρεσιών Οι υπηρεσίες αναζήτησης που βασίζονται στην αξιοπιστία των υπηρεσιών είναι μια ιδιαίτερη κατηγορία υπηρεσιών, που υποστηρίζει, μεταξύ άλλων, έναν μηχανισμό εποπτείας και καταγραφής των αλληλεπιδράσεων και των αξιολογήσεων μεταξύ των πρακτόρων του συστήματος.
Το ζήτημα της εμπιστοσύνης και της αξιοπιστίας στα πολυπρακτορικά συστήματα, όπως αναφέρθηκε στην προηγούμενη ενότητα (4.4), είναι ιδιαίτερα σημαντικό και πραγματεύεται στο έκτο κεφάλαιο της διατριβής.
Ωστόσο, για λόγους πληρότητας, στην παρούσα υποενότητα, παρουσιάζεται το τμήμα της γραφικής διεπαφής του συστήματος EMERALD, που υποστηρίζει τις υπηρεσίες αναζήτησης υπηρεσιών και στατιστικών στοιχείων, που σχετίζονται με δεδομένα αξιοπιστίας.
Για το σκοπό αυτό γίνεται ενδεικτική χρήση ενός σεναρίου εμπορίας λογισμικού, όπου εμπλέκονται επίσης ενδεικτικά δύο μοντέλα αξιοπιστίας, τα οποία προτείνονται και περιγράφονται αναλυτικά στο έκτο κεφάλαιο της παρούσας διατριβής.
Σε αυτό το σημείο, πρέπει να σημειωθεί ότι έγινε ενδεικτική επιλογή σεναρίου χρήσης και μοντέλων αξιοπιστίας, καθώς στόχος της παρούσας ενότητας είναι η παρουσίαση των προσφερόμενων υπηρεσιών του συστήματος EMERALD και όχι των χαρακτηριστικών και των δυνατοτήτων των μοντέλων αξιοπιστίας, τα οποία μελετώνται αναλυτικά στο σχετικό (έκτο) κεφάλαιο της διατριβής.
Σε αυτό το πλαίσιο, οι παρεχόμενες υπηρεσίες ομαδοποιούνται στις καρτέλες TRUST και STATISTICS της γραφικής διεπαφής.
Συγκεκριμένα, η καρτέλα TRUST (Εικόνα 4.15) παραθέτει την κυριότερη, βασισμένη στην αξιοπιστία, υπηρεσία αναζήτησης του πράκτορα MA.
Η υπηρεσία αυτή είναι, καταρχήν, υπεύθυνη για την παρουσίαση όλων των πληροφοριών που σχετίζονται με τα υποστηριζόμενα από το σύστημα μοντέλα αξιοπιστίας.
Σε αυτό το πλαίσιο, ο πράκτορας MA πραγματοποιεί ένα ερώτημα στην βάση δεδομένων και ανακτά μια λίστα με τα διαθέσιμα μοντέλα (π.χ. SERM και T-REX).
Οι χρήστες μπορούν να ανανεώσουν την λίστα οποιαδήποτε στιγμή μέσω της επιλογής «show available models».
Στη συνέχεια, ο πράκτορας ΜΑ ταξινομεί τα επιστρεφόμενα μοντέλα σε αλφαβητική σειρά και τα παραθέτει στην περιοχή κειμένου της καρτέλας.
Κάθε φορά που ένας χρήστης επιλέγει κάποιο από αυτά, οι σχετικές πληροφορίες, δηλαδή το όνομα του μοντέλου, ο τύπος και η μετρική του, καθώς και πληροφορίες σχετικά με τον χρόνο που προστέθηκε στο σύστημα και το πόσες φορές χρησιμοποιήθηκε, εμφανίζονται κατάλληλα στις υπόλοιπες περιοχές της καρτέλας.
Μέρος των εγγραφών της βάσης δεδομένων παρουσιάζεται στην Εικόνα 4.16.
Επιπλέον, στην καρτέλα TRUST υπάρχει η επιλογή «detail», η οποία είναι υπεύθυνη για την παρουσίαση των πληροφοριών που σχετίζονται με τους πράκτορες που χρησιμοποιούν κάθε ένα από τα διαθέσιμα μοντέλα αξιοπιστίας.
Για παράδειγμα, το μοντέλο T-REX (Εικόνα χρησιμοποιήθηκε από πέντε πράκτορες, οι οποίοι παρουσιάζονται σε μια αλφαβητικά ταξινομημένη λίστα.
Επιλέγοντας οποιονδήποτε από αυτούς, ο χρήστης ενημερώνεται για το πόσες φορές αυτός ο πράκτορας χρησιμοποίησε το μοντέλο, ποια είναι η τρέχουσα τιμή της φήμης του, καθώς και ποιο είναι το εύρος αυτής της τιμής (για να μπορέσει να εκτιμήσει την αξιοπιστία του).
Επιπρόσθετα όλων αυτών, οι υπηρεσίες αναζήτησης που βασίζονται στην αξιοπιστία των υπηρεσιών προσφέρουν και δυνατότητες στατιστικής μελέτης.
Συγκεκριμένα, ο γενικός πράκτορας διαχειριστής όλων αυτών των υπηρεσιών, ΜΑ, παρέχει ορισμένες στατιστικές υπηρεσίες μέσω της καρτέλας STATISTICS της γραφικής διεπαφής.
Οι υπηρεσίες αυτές συλλέγουν και παρουσιάζουν πληροφορίες σχετικά με την δραστηριότητα των πρακτόρων του συστήματος.
Ειδικότερα, παρέχεται μια σειρά γραφημάτων που παρουσιάζουν πληροφορίες σχετικές με την χρήση των μοντέλων αξιοπιστίας και την αντίστοιχη δράση των πρακτόρων.
Το πρώτο από τα γραφήματα παρουσιάζει την τιμή της φήμης σε σχέση με τον χρόνο, πρόκειται για την εξέλιξη της τιμής της φήμης ενός συγκεκριμένου πράκτορα με την πάροδο του χρόνου (για κάθε μοντέλο αξιοπιστίας που χρησιμοποίησε).
Η Εικόνα 4.17 παρουσιάζει ένα τέτοιο παράδειγμα, το οποίο αποκαλύπτει ότι αυτός ο πράκτορας (seller1) χρησιμοποίησε μόνο το μοντέλο SERM και ότι η φήμη του είναι ανοδική με την πάροδο του χρόνου.
Ο πράκτορας MA ανανεώνει το γράφημα, αυτόματα, κάθε πέντε δευτερόλεπτα.
Αυτό το γράφημα μπορεί να χρησιμοποιηθεί για την πρόβλεψη της μελλοντικής συμπεριφοράς του πράκτορα, καθώς επιτρέπει την παρατήρηση της πορείας του.
Το δεύτερο γράφημα σχετίζεται με τα διαθέσιμα μοντέλα αξιοπιστίας (εδώ SERM και T-REX).
Οι χρήστες μπορούν να επιλέξουν μεταξύ αυτών των μοντέλων και να μελετήσουν την μέση τιμή φήμης των πρακτόρων που χρησιμοποίησαν το μοντέλο (Εικόνα 4.18).
Ο πράκτορας MA ανανεώνει και αυτό το γράφημα κάθε πέντε δευτερόλεπτα.
Στιγμιότυπα αυτού του γραφήματος μπορούν να συγκριθούν έτσι ώστε να αναγνωρισθούν συσχετισμοί και συνδιακυμάνσεις μεταξύ των μοντέλων αξιοπιστίας, καθώς και η πιθανή απόδοση κάθε μοντέλου.
Το τρίτο γράφημα σχετίζεται με τις παρεχόμενες υπηρεσίες των πρακτόρων.
Προκειμένου να ανακαλύψουν τους καλύτερους παρόχους, όσον αφορά ένα συγκεκριμένο μοντέλο αξιοπιστίας, οι χρήστες επιλέγουν το είδος της υπηρεσίας που τους ενδιαφέρει, τον αριθμό των καλύτερων παρόχων που θέλουν να ελέγξουν (top-k) καθώς και το μοντέλο αξιοπιστίας που προτιμούν.
Λαμβάνοντας όλα αυτά υπόψη, ο πράκτορας MA παρέχει το κατάλληλο γράφημα (Εικόνας 4.19), παρουσιάζοντας τους k καλύτερους παρόχους (με βάση το μοντέλο αξιοπιστίας SERM) στο σύστημα.
Αυτό το γράφημα μπορεί να χρησιμοποιηθεί για να αναγνωρισθούν οι καλύτεροι πάροχοι κάθε είδους που δρουν στο περιβάλλον.
Το τέταρτο γράφημα είναι παρόμοιο με το προηγούμενο, όσον αφορά τους τύπους των υπηρεσιών και τα μοντέλα αξιοπιστίας, αλλά λαμβάνει υπόψη πόσες φορές κάθε πράκτορας χρησιμοποίησε το επιλεγμένο μοντέλο και όχι ποια είναι η τιμή της φήμης του πράκτορα (Εικόνα 4.20).
Αυτό το γράφημα μπορεί να χρησιμοποιηθεί για να αναγνωρισθεί ποιο είναι το πιο κοινό μοντέλο αξιοπιστίας που χρησιμοποιείται από τους καλύτερους παρόχους.
Το τελευταίο γράφημα σχετίζεται με την χρήση των μοντέλων αξιοπιστίας.
Παρουσιάζει τις αναλογικές σχέσεις των μοντέλων αξιοπιστίας σε μια συγκεκριμένη χρονική στιγμή (Εικόνα 4.21).
Το γράφημα αυτό δεν ανανεώνεται αυτόματα αλλά υποστηρίζει μια επιλογή ανανέωσης.
Τέλος, μπορεί να χρησιμοποιηθεί για να αναγνωρισθεί το πλέον διαδεδομένο μοντέλο αξιοπιστίας, καθώς και η σχετική χρήση όλων των μοντέλων.
Περίπτωση χρήσης – δεδομένα γραφημάτων Τα δεδομένα που παρουσιάζονται στα παραπάνω γραφήματα, αποτελούν πραγματικά δεδομένα ενός σεναρίου εμπορίας λογισμικού.
Συγκεκριμένα, το σενάριο περιλαμβάνει δύο ανεξάρτητες ομάδες πρακτόρων, υλοποιημένων στο σύστημα EMERALD, και τον προαναφερθέντα πράκτορα ΜΑ.
Η πρώτη ανεξάρτητη ομάδα είναι η ομάδα των πελατών, πιθανοί αγοραστές που χρησιμοποιούν το σύστημα για να αγοράσουν κάποιο λογισμικό.
Η δεύτερη ομάδα είναι η ομάδα των πωλητών, οι οποίοι κατέχουν κάποιο λογισμικό και είναι πρόθυμοι να το πουλήσουν.
Η ομάδα των πελατών αποτελείται από τέσσερις ανεξάρτητους πελάτες-πράκτορες, οι οποίοι αγοράζουν το λογισμικό από έναν αριθμό πωλητών και, στην συνέχεια, τους αξιολογούν.
Για την αξιολόγηση χρησιμοποιούν είτε ένα από τα μοντέλα αξιοπιστίας (SERM ή T-REX) είτε και τα δύο σε περίπτωση πολλαπλών συναλλαγών.
Η ομάδα των πωλητών, από την άλλη πλευρά, αποτελείται, επίσης, από τέσσερις ανεξάρτητους πωλητές-πράκτορες, οι οποίοι πωλούν το λογισμικό.
Ο ρόλος τους είναι να ανταποκριθούν στα αιτήματα των πελατών, παρέχοντας τους το σωστό λογισμικό στο συντομότερο δυνατό χρόνο και την καλύτερη ποιότητα.
Οι πράκτορες αυτοί έχουν σχεδιαστεί κατά τέτοιο τρόπο ώστε κάθε ένας να παρέχει διαφορετική ποιότητα λογισμικού, διαφορετική πληρότητα και διαφορετικό χρόνο απόκρισης.
Επιπλέον, διαθέτουν ένα συγκεκριμένο εύρος λογισμικών.
Μέρος των συναλλαγών που πραγματοποιούνται μεταξύ των πρακτόρων παρουσιάζεται στην στην προκειμένη περίπτωση είναι στραμμένο στους πωλητές.
Για λόγους ποικιλομορφίας και πληρότητας έχει ορισθεί ο πρώτος πωλητής (seller1) να καθυστερεί να απαντήσει αλλά να ανταποκρίνεται συνήθως με ακρίβεια ενώ ο δεύτερος πωλητής (seller2) είναι ακριβής και με άμεση ανταπόκριση.
Ο τρίτος (seller3) παρότι ανταποκρίνεται άμεσα, συνήθως πρόκειται για εσφαλμένη ανταπόκριση.
Τέλος, ο τέταρτος (seller4) καθυστερεί να ανταποκριθεί και όταν το κάνει είναι εσφαλμένο.
Όπως, έχει ήδη παρουσιαστεί στις προηγούμενες ενότητες, όλες οι πληροφορίες, που αφορούν αυτή την εφαρμογή, διατηρούνται από τον πράκτορα MA.
Για παράδειγμα, στην Εικόνα 4.15 μπορούμε να δούμε ότι το μοντέλο T-REX χρησιμοποιήθηκε 4 φορές, η μια εκ των οποίων ήταν από τον πράκτορα seller3, με 0,869 τιμή φήμης (RV).
Στο πρώτο γράφημα (Εικόνα 4.17) βλέπουμε ότι ο seller1 είναι πιο αξιόπιστος στην πάροδο του χρόνου καθώς η φήμη του αυξάνεται, γεγονός απολύτως λογικό, δεδομένου ότι αυτός ο πωλητής ανταποκρίνεται πάντα με ακρίβεια.
Αν και με μια μικρή καθυστέρηση, που εξηγεί γιατί χρειάζεται χρόνος για να αυξηθεί η φήμη του στο σύστημα.
Τέλος, το γράφημα στην Εικόνα 4.19 επαληθεύει τις αρχές σχεδιασμού της ομάδας των πωλητών, καθώς κατατάσσει τον seller1 ως τον καλύτερο πάροχο και τον seller4 ως τον λιγότερο αξιόπιστο από τους τέσσερις, το οποίο είναι ακριβές.
Ως εκ τούτου, είναι φανερό ότι με την χρήση των προτεινόμενων υπηρεσιών είναι δυνατό να ελεγχθούν τόσο οι πράκτορες (εάν δρουν όπως πρέπει) όσο και τα μοντέλα αξιοπιστίας που χρησιμοποιούνται (εάν παρέχουν αξιόπιστες τιμές φήμης).
Επιπλέον, οι προγραμματιστές εντοπίζουν, μέσω του πράκτορα ΜΑ και της γραφικής διεπαφής του, όλες τις απαραίτητες πληροφορίες για τον σχεδιασμό νέων, ακόμη πιο αξιόπιστων μοντέλων αξιοπιστίας.
Σε αυτή την ενότητα παρουσιάζονται δύο εφαρμογές που αποδεικνύουν την λειτουργικότητα και χρησιμότητα των παραπάνω προτεινόμενων τεχνολογιών και υπηρεσιών.
Πρόκειται για μια περίπτωση μεσιτείας και μια περίπτωση διαπραγμάτευσης.
Η καταγραφή και παρουσίαση αυτών των περιπτώσεων χρήσης στοχεύει στην ανάδειξη της αρθρωτής ανάπτυξης των πρακτόρων που ακολουθούν το πρότυπο KC-Agents, της ιδιαίτερης χρησιμότητας των υπηρεσιών συλλογιστικής και καταλόγου αλλά και της ικανότητας των πρακτόρων που δρουν στο σύστημα EMERALD να προσαρμόζονται εύκολα σε διάφορες εφαρμογές.
Η πρώτη περίπτωση χρήσης αφορά μια εφαρμογή μεσιτείας (brokering) που υιοθετήθηκε από το βιβλίο των Αντωνίου και van Harmelen [Antoniou & van Harmelen, 2008].
Πρόκειται για ένα σενάριο που βασίζεται στην αναιρέσιμη λογική.
Ωστόσο, προκειμένου να καταδειχθεί η λειτουργικότητα των προτεινόμενων από την διατριβή τεχνολογιών, μέρος του σεναρίου επεκτάθηκε με συνεπαγωγικό συλλογισμό.
Στην υπό μελέτη περίπτωση, εμπλέκονται τέσσερα ανεξάρτητα μέρη, τα οποία εκπροσωπούνται από τους αντίστοιχους ευφυείς πράκτορες.
Πρόκειται για έναν πελάτη (customer), που ονομάζεται Carlo, έναν μεσίτη (broker) και δύο ειδικούς πράκτορες παροχής υπηρεσιών συλλογιστικής (Reasoners).
Ο πελάτης είναι ένας πιθανός ενοικιαστής που επιθυμεί να ενοικιάσει ένα διαμέρισμα με βάση τις απαιτήσεις (π.χ. θέση, όροφος) και τις προτιμήσεις του (π.χ. φθηνότερη τιμή).
Ο μεσίτης διαθέτει μια σειρά από διαθέσιμα διαμερίσματα, που είναι αποθηκευμένα σε μια βάση δεδομένων.
Ο ρόλος του είναι να ταιριάζει τις απαιτήσεις του Carlo με τα χαρακτηριστικά των διαθέσιμων διαμερισμάτων και τελικά να προτείνει κατάλληλα διαμερίσματα στον εν δυνάμει ενοικιαστή.
Τόσο ο πελάτης όσο και ο μεσίτης ακολουθούν τις προδιαγραφές του προτύπου KC-Agents.
Οι δύο Reasoners είναι επιφορτισμένοι με την παροχή υπηρεσιών αναιρέσιμης και συνεπαγωγικής συλλογιστικής, πρόκειται αντίστοιχα για τους DR-Reasoner και R-Reasoner του συστήματος EMERALD.
Οι δύο αυτοί πράκτορες έχουν υψηλή βαθμολογία φήμης στο περιβάλλον, γεγονός που υποδηλώνει την ικανότητα τους να εξάγουν τα κατάλληλα συμπεράσματα και να τα επιστρέψουν τελικά ως αρχείο RDF.
Επισκόπηση περίπτωσης μεσιτείας Εάν ο πελάτης δεν γνωρίζει εξαρχής τον μεσίτη, έχει την δυνατότητα να επικοινωνήσει με την υπηρεσία AYPS και να ζητήσει πληροφορίες.
Σε αυτή την περίπτωση, η υπηρεσία επιστρέφει έναν αριθμό πιθανών μεσιτών μαζί με την τιμή φήμης για κάθε έναν από αυτούς, με βάση την εκτίμηση του μοντέλου SERM.
Έτσι, ο πελάτης είναι σε θέση να επιλέξει τον πλέον αξιόπιστο μεσίτη.
Στην περίπτωση της μεσιτείας, το σενάριο διεξάγεται σε οκτώ διακριτά βήματα μεταξύ πελάτη και μεσίτη (Εικόνα 4.23).
Στο πρώτο βήμα, ο πράκτορας του ενοικιαστή Carlo ανακτά το σχήμα (schema) των διαμερισμάτων (Παράρτημα Α), που δημοσιεύθηκε στην ιστοσελίδα του μεσίτη, διατυπώνει τις απαιτήσεις του και τις υποβάλλει στον μεσίτη, προκειμένου να λάβει όλα τα διαθέσιμα διαμερίσματα με τις σωστές προδιαγραφές.
Αυτές οι απαιτήσεις εκφράζονται στην αναιρέσιμη λογική, στο συντακτικό DR-RuleML του συστήματος DR-DEVICE, δηλαδή σε ένα συντακτικό παρόμοιο με αυτό της RuleML.
Για παράδειγμα, ένα τμήμα της βάσης κανόνων που περιέχει τους δύο πρώτους κανόνες των απαιτήσεων του εν δυνάμει ενοικιαστή Carlo παρουσιάζεται στην Εικόνα 4.24, εκφρασμένους στην γλώσσα DR-RuleML.
Επιπλέον, στο Παράρτημα Β διατίθεται μια πλήρης περιγραφή των απαιτήσεων του Carlo σε d-POSL (βλ.
Παράρτημα Α), μια διάλεκτο βασισμένη στην POSL [Boley, 2004] για την αναπαράσταση των κανόνων της αναιρέσιμης λογικής σε μια πιο περιεκτική μορφή σε σχέση με την DR-RuleML.
Ο μεσίτης, από την άλλη πλευρά, έχει μια λίστα με όλα τα διαθέσιμα διαμερίσματα, μαζί με τις προδιαγραφές τους, αποθηκευμένα σε μια RDF βάση δεδομένων.
Στην Εικόνα 4.25 παρατίθεται ένα σχετικό απόσπασμα.
Ωστόσο, ο μεσίτης δεν αποκαλύπτει αυτή την βάση στον πελάτη, καθώς είναι ένα από τα πλέον πολύτιμα στοιχεία, που κατέχει.
Παρόλα αυτά, ο μεσίτης δεν μπορεί να επεξεργαστεί τις απαιτήσεις του πελάτη του (Carlo), χρησιμοποιώντας αναιρέσιμη λογική, καθώς εσωτερικά χρησιμοποιεί διαφορετική λογική.
Ως εκ τούτου, ζητά μια ανεξάρτητη, έμπιστη υπηρεσία συλλογιστικής από την υπηρεσία καταλόγου του συστήματος EMERALD, εν προκειμένω, την υπηρεσία που προσφέρει ο ειδικός πράκτορας DR-Reasoner.
Ο πράκτορας DR-Reasoner, όπως έχει ήδη αναφερθεί, χρησιμοποιεί τον μηχανισμό DR-DEVICE προκειμένου να προσφέρει την υπηρεσία του, καθώς ο μηχανισμός αυτός εκτελεί συλλογιστική στην εισερχόμενη (αναιρέσιμης λογικής) βάση γνώσης και επιστρέφει τα συμπεράσματα ως ένα σύνολο γεγονότων σε RDF μορφή.
Επομένως, ο μεσίτης στέλνει τις απαιτήσεις του πελάτη του, μαζί με το URI του εγγράφου RDF που περιέχει την λίστα των διαθέσιμων διαμερισμάτων και περιμένει την λίστα των κατάλληλων διαμερισμάτων (βήμα 2).
Στην συνέχεια, ο πράκτορας DR-Reasoner μόλις λάβει το αίτημα, καλεί το σύστημα DRDEVICE, το οποίο επεξεργάζεται τα παραπάνω δεδομένα και επιστρέφει ένα έγγραφο RDF, που περιέχει τα διαμερίσματα που πληρούν όλες τις απαιτήσεις (Εικόνα 4.26).
Όταν τα αποτελέσματα είναι έτοιμα, ο Reasoner τα στέλνει πίσω στον πράκτορα του μεσίτη (βήμα 3).
Ο τελευταίος θα πρέπει να διαβιβάσει τα αποτελέσματα στον πράκτορα του Carlo.
Όμως, ο μεσίτης έχει μια ιδιωτική στρατηγική, δηλαδή μια βάση κανόνων που αφορά τις δικές του προτάσεις.
Με άλλα λόγια, ο μεσίτης χρησιμοποιεί την στρατηγική του, προσαρμοσμένη στην περίπτωση του πελάτη (Carlo), για να φιλτράρει και να επιλέξει από την λίστα αυτό ή αυτά τα διαμερίσματα που θεωρεί καταλληλότερα.
Ένα δείγμα των κανόνων αυτών παρουσιάζεται στο Παράρτημα Β, συγκεκριμένα, ένας κανόνας προτείνει το μεγαλύτερο διαμέρισμα στο κέντρο της πόλης και ένας άλλος προτείνει το διαμέρισμα με τον μεγαλύτερο κήπο στα προάστια.
Οι κανόνες αυτοί, όμως, είναι διατυπωμένοι στην συνεπαγωγική λογική.
Επομένως, ο μεσίτης τους αποστέλλει, μαζί με τα αποτελέσματα του προηγούμενου σταδίου συλλογιστικής, στον ειδικό πράκτορα R-Reasoner.
Αυτός με την σειρά του καλεί το σύστημα R-DEVICE (βήμα 4).
Μετά τις απαραίτητες διαδικασίες συλλογιστικής, ο μεσίτης παίρνει την κατάλληλη λίστα με τα προτεινόμενα διαμερίσματα που πληρούν τους «ειδικούς» του κανόνες (βήμα 5).
Τελικά, ο Carlo λαμβάνει την κατάλληλη λίστα (βήμα 6) και πρέπει να αποφασίσει ποιο διαμέρισμα προτιμά.
Ωστόσο, ο πράκτορας του δεν επιθυμεί να αποστείλει τις προτιμήσεις του Carlo στον μεσίτη, καθώς φοβάται ότι εκείνος πιθανόν να επωφεληθεί από αυτό και να μην του παρουσιάσει τις καλύτερες για τον ίδιο επιλογές.
Επομένως, ο πράκτορας του Carlo στέλνει την λίστα των αποδεκτών διαμερισμάτων, με την μορφή RDF εγγράφου, και τις προτιμήσεις του, δηλαδή μια βάση κανόνων αναιρέσιμης λογικής, στον DR-Reasoner (βήμα 7).
Εκείνος με την σειρά του, καλεί τον μηχανισμό DR-DEVICE και λαμβάνει ως απάντηση το καταλληλότερο διαμέρισμα.
Στην συνέχεια, απαντά στον Carlo και του προτείνει την καλύτερη συναλλαγή (βήμα 8).
Φυσικά, ο Carlo θα μπορούσε να έχει και να χρησιμοποιεί έναν εσωτερικό μηχανισμό αναιρέσιμης συλλογιστικής, π.χ.
[Antoniou et al., 2007], ωστόσο τονίζεται, εδώ, η ικανότητά του να χρησιμοποιεί οποιαδήποτε κατάλληλη εξωτερική μηχανή συλλογισμού.
Η διαδικασία τελειώνει και ο Carlo μπορεί να κάνει με ασφάλεια την καλύτερη επιλογή με βάση τις απαιτήσεις και τις προσωπικές του προτιμήσεις (Παράρτημα Β).
Πρέπει να σημειωθεί, ωστόσο, ότι ο Carlo λαμβάνει υπόψη όχι μόνο τις προτιμήσεις και τις απαιτήσεις του, αλλά και τις προτάσεις του μεσίτη, εφόσον αυτές είναι συμβατές με τις δικές του απαιτήσεις.
Τέλος, όσον αφορά την διαδικασία αξιολόγησης, ανάλογα με το μοντέλο που χρησιμοποιείται, μετά από κάθε συναλλαγή με τους Reasoners, ζητείται τόσο από τον μεσίτη όσο και από τον πελάτη Carlo να καταθέσουν τις αναφορές τους.
Για παράδειγμα, μετά την επιτυχή ολοκλήρωση του βήματος 3, ο μεσίτης όχι μόνο προχωρά στο τέταρτο βήμα αλλά στέλνει και την βαθμολογία του στον Reasoner ή στον πράκτορα διαχειριστή του μοντέλου εμπιστοσύνης.
Συγκεκριμένα, στην υπό μελέτη περίπτωση της μεσιτείας, έγινε χρήση του μοντέλου SERM.
Ως αποτέλεσμα, οι αντίστοιχες τιμές φήμης ενημερώνονται.
Αν και η FIPA παρέχει τυποποιημένα πρωτόκολλα, κατά την μελέτη και σχεδίαση της εφαρμογής της μεσιτείας διαπιστώθηκε ότι κανένα από αυτά δεν είναι κατάλληλο για την περίπτωση, καθώς δεν υποστηρίζεται αυτοματοποιημένη 1-1 μεσιτεία.
Επομένως, υλοποιήθηκε ένα πρωτόκολλο μεσιτείας, το οποίο κωδικοποιεί τις επιτρεπόμενες ακολουθίες ενεργειών για την αυτοματοποίηση της διαδικασίας μεσιτείας μεταξύ των πρακτόρων.
Το πρωτόκολλο απεικονίζεται ως πεπερασμένο αυτόματο με διακριτές καταστάσεις και μεταβάσεις (Εικόνα 4.27).
Επιπλέον, βασίζεται σε συγκεκριμένους τύπους μηνυμάτων (performatives), που συμμορφώνονται με τις προδιαγραφές της FIPA ACL.
Πιο συγκεκριμένα, οι κύριοι τύποι μηνυμάτων που χρησιμοποιούνται, στην παρούσα εφαρμογή, είναι οι τύποι REQUEST, INFORM και NOTUNDERSTOOD.
Ο τύπος REQUEST αφορά στην υποβολή αιτημάτων, ο τύπος INFORM αφορά σε δράσεις ενημέρωσης και επιστροφής αποτελεσμάτων προηγούμενου αιτήματος ενώ ο τύπος NOT-UNDERSTOOD αφορά την περίπτωση μη κατάλληλων ή αποδεκτών μηνυμάτων.
Τα S0 έως S6 αναπαριστούν τις καταστάσεις της συναλλαγής, δηλαδή της διαδικασίας της μεσιτείας, ενώ το E αναπαριστά την τελική κατάσταση.
Τα κατηγορήματα αποστολή και λήψη αντιπροσωπεύουν τις αλληλεπιδράσεις που προκαλούν μεταβάσεις.
Για παράδειγμα, η ακολουθία μεταβάσεων για τον πελάτη είναι η S1→S2→S3→S4→S5→E, που σημαίνει ότι ο πράκτορας, αρχικά, στέλνει στον μεσίτη ένα μήνυμα REQUEST (S1→S2) και έπειτα περιμένει και τελικά λαμβάνει την απάντηση με ένα μήνυμα INFORM (S2→S3).
Μετά από αυτό, ο πελάτης αποφασίζει να στείλει ένα νέο μήνυμα αιτήματος προς τον DR-Reasoner (S3→S4), λαμβάνει ένα ενημερωτικό (INFORM) μήνυμα από αυτόν (S4→S5) και τερματίζει επιτυχώς την διαδικασία (S5→E).
Από την άλλη πλευρά, η ακολουθία μεταβάσεων για τον μεσίτη είναι η S0→S1→S2→S3→S4→S5→S6→E.
Αρχικά, ο μεσίτης βρίσκεται σε αναμονή για νέα αιτήματα.
Μόλις λάβει ένα τέτοιο αίτημα (S0→S1), αποστέλλει ένα εμπλουτισμένο μήνυμα REQUEST στον DR-Reasoner (S1→S2) και περιμένει τα αποτελέσματα.
Τέλος, λαμβάνει ένα INFORM μήνυμα από τον DR-Reasoner (S2→S3) και στέλνει ένα εμπλουτισμένο REQUEST μήνυμα στον RReasoner (S3→S4).
Τελικά, ο μεσίτης λαμβάνει το κατάλληλο INFORM μήνυμα από τον RReasoner (S4→S5) και το προωθεί στον πελάτη (S5→ S6), τερματίζοντας την συναλλαγή (S6→E).
Τέλος, στην περίπτωση που ένας πράκτορας λάβει λάθος τύπου μήνυμα, αποστέλλει πίσω ένα μήνυμα τύπου NOT-UNDERSTOOD και η συναλλαγή επαναλαμβάνεται.
Τέλος, δεδομένου ότι τόσο ο εν δυνάμει ενοικιαστής Carlo όσο και ο μεσίτης ακολουθούν το πρότυπο KC-Agents, οι προδιαγραφές των πρακτόρων αυτών μπορούν να αναπαρασταθούν με την περιγραφή του προτύπου.
Συγκεκριμένα, η περιγραφή του πράκτορα Carlo περιέχει ένα γεγονός, το ruleml_path, το οποίο αποτελεί μέρος της εσωτερικής γνώσης του πράκτορα, αντιπροσωπεύοντας το URL της βάσης κανόνων του.
Επιπλέον, ένα νέο γεγονός με το όνομα του πράκτορα (agent_name) προστίθεται στην μνήμη εργασίας, καθώς, μέσω των υπηρεσιών AYPS, το περιβάλλον ενημερώνεται διαρκώς, διασφαλίζοντας την δυναμικότητα του.
Η συμπεριφορά του πράκτορα, από την άλλη πλευρά, περιγράφεται μέσω κανόνων.
Δύο από αυτούς τους κανόνες είναι οι «request» και «read», με τον πρώτο να χρησιμοποιείται για ζητήματα επικοινωνίας και τον δεύτερο για κλήσεις Java μεθόδων.
Πρέπει να σημειωθεί ότι και οι δυο αυτοί κανόνες απαιτούν μόνο μια προϋπόθεση, ουσιαστικά γεγονός, το όνομα του πράκτορα (agent_name) και την διεύθυνση της βάσης κανόνων (ruleml_path), αντίστοιχα.
Όμοια, η περιγραφή του μεσίτη περιέχει γεγονότα και κανόνες.
Το γεγονός url αποτελεί μέρος της εσωτερικής γνώσης του, αντιπροσωπεύοντας το URL του RDF εγγράφου που περιέχει όλα τα διαθέσιμα διαμερίσματα ενώ το γεγονός reasoner_name προστίθεται στο περιβάλλον μέσω των υπηρεσιών AYPS και αντιπροσωπεύει το όνομα κάποιου Reasoner.
Κανόνες όπως οι «request» και «read» αποτελούν μέρος της συμπεριφοράς του πράκτορα.
Μια δεύτερη περίπτωση χρήσης αφορά μια εφαρμογή διαπραγμάτευσης (negotiation).
Η περίπτωση αυτή καταδεικνύει καλύτερα την αρθρωτή ανάπτυξη των πρακτόρων που ακολουθούν το πρότυπο KC-Agents, καθώς μόνο με την αλλαγή της βάσης γνώσης τους, η συμπεριφορά τους αλλάζει δραστικά.
Πιο συγκεκριμένα, μόλις ολοκληρωθεί η διαδικασία της περίπτωσης μεσιτείας, που περιγράφηκε στην προηγούμενη ενότητα, και ο Carlo είναι σε θέση να κάνει την καλύτερη επιλογή, του ανατίθεται από τον χρήστη του μια νέα αποστολή.
Σύμφωνα με αυτή, ο πράκτορας Carlo πρέπει ενεργήσει πλέον ως πελάτης (Customer) και να διαπραγματευτεί για το μίσθωμα του επιλεγμένου διαμερίσματος.
Επισκόπηση περίπτωσης διαπραγμάτευσης Το στάδιο της διαπραγμάτευσης εμπλέκει τρεις ανεξάρτητους πράκτορες, τον εν δυνάμει ενοικιαστή Carlo (Customer), τον μεσίτη (Broker) και τον ιδιοκτήτη (Owner) του διαμερίσματος.
Προκειμένου να καταδειχθεί η διαφορετικότητα μεταξύ των περιπτώσεων διαπραγμάτευσης και μεσιτείας, καμία υπηρεσία συλλογιστικής δεν εφαρμόζεται εδώ, παρά το γεγονός ότι οι πράκτορες θα μπορούσαν να αξιοποιήσουν κάποια τέτοια υπηρεσία (Reasoner) για την εφαρμογή των στρατηγικών διαπραγμάτευσης τους.
Σε αυτό το πλαίσιο, η διαδικασία της παρούσας εφαρμογής διεξάγεται σε δύο βασικά στάδια (Εικόνα 4.28).
Στο πρώτο στάδιο ο πράκτορας Customer (Carlo) πρέπει να εντοπίσει το όνομα του ιδιοκτήτη του διαμερίσματος (Owner) ενώ στο επόμενο δεύτερο στάδιο διαπραγματεύεται μαζί του για το μίσθωμα.
Συγκεκριμένα, ο πράκτορας Customer αποστέλλει ένα μήνυμα REQUEST στον μεσίτη (Broker), το οποίο περιέχει το επιλεγμένο διαμέρισμα και περιμένει από εκείνον να του επιστρέψει το όνομα του ιδιοκτήτη του.
Ο μεσίτης, από την πλευρά του, απαντά μέσω ενός INFORM μηνύματος.
Στην συνέχεια, ο πελάτης ξεκινά μια διαδικασία διαπραγμάτευσης με τον ιδιοκτήτη.
Καθ’ όλη την διάρκεια αυτής της διαδικασίας, ο μεσίτης παρατηρεί την διαπραγμάτευση και, στο τέλος, ζητά την αμοιβή του, ανάλογα με το συμφωνηθέν μίσθωμα, μέσω ενός INFORM μηνύ-
Για τις ανάγκες της διαπραγμάτευσης, όπως και στην περίπτωση της μεσιτείας της προηγούμενης ενότητας, υλοποιήθηκε ένα κατάλληλο 1-1 πρωτόκολλο διαπραγμάτευσης, σύμφωνο με τις προδιαγραφές της FIPA ACL.
Το πρωτόκολλο κωδικοποιεί τις επιτρεπόμενες ακολουθίες ενεργειών για την αυτοματοποίηση της διαδικασίας διαπραγμάτευσης μεταξύ των πρακτόρων, οι οποίοι και σε αυτή την περίπτωση ακολουθούν το πρότυπο KC-Agents.
Σύμφωνα με το πρωτόκολλο (Εικόνα 4.29), ένας πράκτορας εκκινεί μια διαπραγμάτευση με την αποστολή ενός μηνύματος call-for-proposal (CFP), δηλαδή πρόσκλησης για διαπραγμάτευση, σε έναν άλλο πράκτορα.
Έπειτα από αρκετούς γύρους συνομιλίας, κατά τους οποίους ανταλλάσσονται προτάσεις, η διαπραγμάτευση τελειώνει.
Στην πραγματικότητα, αυτό συμβαίνει όταν η μία πλευρά είτε δέχεται την πρόταση της άλλης πλευράς είτε απλά τερματίζει την διαδικασία των διαπραγματεύσεων χωρίς καμία περαιτέρω εξήγηση.
Ωστόσο, όπως είναι φανερό, παρά το γεγονός ότι το σενάριο διαπραγμάτευσης περιλαμβάνει τρεις ευφυείς πράκτορες, μόνο ο πελάτης (Customer) και ο ιδιοκτήτης (Owner) διαπραγματεύονται το μίσθωμα.
Συγκεκριμένα, οι πράκτορες υποβάλλουν εναλλακτικές προσφορές, με τον ιδιοκτήτη να υποβάλει την πρώτη προσφορά κατόπιν της πρόσκλησης από τον εν δυνάμει ενοικιαστή (Customer).
Επιπλέον, κάθε πράκτορας υποβάλλει μόνο μια προσφορά σε κάθε γύρο διαπραγμάτευσης.
Κάθε προσφορά αναπαρίσταται ως a ibid , όπου a είναι ο πράκτορας που υποβάλλει την προσφορά και i είναι ο γύρος διαπραγμάτευσης κατά τον οποίο υποβλήθηκε η προσφορά.
Η αποδοχή μιας προσφοράς από τον πράκτορα a κατά την διάρκεια του γύρου i αναπαρίσταται ως a iACCEPT ενώ η απόρριψη της προσφοράς αναπαρίσταται ως iREJECT.
Τέλος, εάν δεν μπορεί να συμφωνηθεί ένα μίσθωμα πριν τελειώσει ο χρόνος ενός πράκτορα, η διαπραγμάτευση τερματίζεται.
Η στρατηγική κάθε πελάτη, στην παρούσα περίπτωση εν δυνάμει ενοικιαστή, είναι κρίσιμη και σχεδιάζεται, συνήθως, σύμφωνα με ένα συγκεκριμένο πρωτόκολλο.
Σήμερα, υπάρχει μια πληθώρα καταγεγραμμένων στρατηγικών, οι οποίες ταξινομούνται σύμφωνα με διαφορετικά, κατά περίπτωση, κριτήρια.
Σε αυτό το πλαίσιο, οι δύο πράκτορες που εμπλέκονται στην διαδικασία διαπραγμάτευσης της παρούσας εφαρμογής, υιοθετούν διαφορετικές στρατηγικές, που βασίζονται, εν μέρει, στην εργασία των Tsang και Gosling [Tsang & Gosling, 2002].
Συγκεκριμένα, η στρατηγική του πελάτη αυξάνει την προσφορά σταδιακά, ανάλογα με το ενδιαφέρον του πράκτορα για το διαμέρισμα.
Επομένως, η στρατηγική αυτή περιορίζεται από τις μεταβλητές ttr, min_profit και interest, όπως περιγράφεται στον Πίνακα 4.2.
Πίνακας 4.2.
Διαπραγμάτευση: Βασικοί περιορισμοί του πελάτη.
Ο αριθμός των γύρων διαπραγμάτευσης μέσα στους οποίους ο πράκτορας πρέπει να ενοι-
MIN_PROFIT Η ποσότητα της ελάχιστης μείωσης του μισθώματος.
INTEREST Ο βαθμός του «πόσο πολύ» ο πράκτορας θέλει το διαμέρισμα (Εύρος: 1-10).
Επιπλέον, η στρατηγική περιλαμβάνει μια σειρά κριτηρίων για την λήψη αποφάσεων.
Για κάθε προσφορά, ο πράκτορας λαμβάνει υπόψη του τους κανόνες της στρατηγικής του και απορρίπτει ή αποδέχεται την προσφορά.
Για παράδειγμα, σύμφωνα με έναν από τους κανόνες της στρατηγικής, ο πελάτης (Customer) πάντοτε απορρίπτει την πρώτη προσφορά του ιδιοκτήτη (Owner), καθώς αυτή, πιθανότατα, θα είναι ίση με την μέγιστη τιμή του μισθώματος.
Όσον αφορά την απόρριψη των μετέπειτα προσφορών από τον ιδιοκτήτη, η στρατηγική που ακολουθεί ο πράκτορας Carlo περιέχει έναν κανόνα που καθορίζει ότι εάν η προσφορά του ιδιοκτήτη είναι μεγαλύτερη από το άθροισμα της αντίστοιχης προφοράς του Carlo και του ενδιαφέροντος του για το διαμέρισμα τότε θα απορρίπτεται.
Αντίστοιχα, εάν η προσφορά του ιδιοκτήτη είναι μεγαλύτερη και ταυτόχρονα μικρότερη από την μέγιστη αποδεκτή προσφορά (MAX= ownbid –min_profit) τότε θα γίνεται αποδεκτή.
Τέλος, εάν μια προσφορά από τον ιδιοκτήτη απορρίπτεται κατά την διάρκεια του γύρου i τότε ο πελάτης πρέπει να αντιπαραθέσει μια νέα προσφορά ibid  =10%*IN*MAX.
Από την άλλη πλευρά, η στρατηγική του ιδιοκτήτη είναι προσανατολισμένη στο να κλείνει συμφωνίες, ωστόσο όταν υπάρχει διαθεσιμότητα χρόνου, επιχειρεί να λάβει μια καλύτερη συμφωνία, καθυστερώντας να δεσμευτεί για έναν γύρο.
Επιπλέον, προκειμένου να κλείσει μια καλύτερη συμφωνία, κάθε νέα προσφορά έχει μόνο μια μικρή έκπτωση.
Όπως και στην περίπτωση του πελάτη και αυτή η στρατηγική έχει περιορισμούς.
Συγκεκριμένα, ο ιδιοκτήτης περιορίζεται από τις μεταβλητές tts, min_rent, start_rent και L, όπως περιγράφεται στον Πίνακα 4.3.
Πίνακας 4.3.
Διαπραγμάτευση: Βασικοί περιορισμοί του ιδιοκτήτη. κιάσει το διαμέρισμα που διαθέτει.
MIN_RENT Το ελάχιστο μίσθωμα.
START_RENT Η ποσότητα της πρώτης προσφοράς.
Μια παράμετρος χρόνου, η οποία προσδιορίζει κατά την διάρκεια ποιου γύρου (ξεκινώντας από το τέλος), η προσφορά ξεκινά να μειώνεται δραστικά.
Η στρατηγική του ιδιοκτήτη προσφέρει δύο κανόνες για την λήψη αποφάσεων, έναν για τις προϋποθέσεις απόρριψης προσφορών και έναν για την αποδοχή.
Συγκεκριμένα, μια προσφορά απορρίπτεται εάν είναι μικρότερη από το ελάχιστο αποδεκτό μίσθωμα ενώ γίνεται αποδεκτή εάν τόσο αυτή όσο και η προσφορά του προηγούμενου γύρου είναι μεγαλύτερες.
Παράλληλα, οι προσφορές που υποβάλλει ο ιδιοκτήτης βασίζονται σε δύο ειδικούς κανόνες.
Σύμφωνα με αυτούς, όσο ο ιδιοκτήτης θεωρεί ότι έχει χρόνο στην διάθεση του (μεταβλητή L) μειώνει λίγο το μίσθωμα, όταν όμως θεωρεί ότι δεν υπάρχει αρκετός χρόνος για διαπραγμάτευση, διπλασιάζει την μείωση στο μίσθωμα.
Τέλος, ο μεσίτης (Broker) που παρακολουθεί την διαπραγμάτευση, ζητά ένα καθορισμένο ποσοστό (20%) του τελικού μισθώματος, ως αμοιβή.
Ένα παράδειγμα διαπραγμάτευσης Στους πίνακες που ακολουθούν περιγράφεται ένα συγκεκριμένο παράδειγμα για την περιγραφείσα διαπραγμάτευση.
Στον Πίνακα 4.4 καθορίζονται οι περιορισμοί των πρακτόρων ενώ στον Πίνακα 4.5 παρουσιάζεται αναλυτικά η διαδικασία της διαπραγμάτευσης.
Η διαπραγμάτευση ολοκληρώνεται επιτυχώς μετά από πέντε γύρους, με το μίσθωμα να ανέρχεται στο ποσό των 270 και την αμοιβή του μεσίτη στο ποσό των 54 (=20%*270).
Πίνακας 4.4.
Διαπραγμάτευση: Παράδειγμα εκτέλεσης περιορισμοί.
Πίνακας 4.5.
Διαπραγμάτευση: Παράδειγμα εκτέλεσης. custREJECT (απόρριψη πρώτης προσφοράς ιδιοκτήτη) ownREJECT (καθυστέρηση δέσμευσης)
Στην περίπτωση της διαπραγμάτευσης, που μελετάται στην παρούσα ενότητα, οι κανόνες αναφέρονται αποκλειστικά στην επικοινωνία των πρακτόρων (υποσύνολο C από S).
Σε αυτό το πλαίσιο, οι δυο κύριοι τύποι μηνυμάτων που χρησιμοποιούνται είναι οι PROPOSE και ACCEPTPROPOSAL, με την επιλογή του κατάλληλου κάθε φορά τύπου να επαφίεται στα κριτήρια λήψης αποφάσεων κάθε πράκτορα.
Τόσο ο Carlo, που έλαβε αρχικά μέρος στην διαδικασία της μεσιτείας, όσο και ο ιδιοκτήτης, όπως έχει ήδη αναφερθεί, ακολουθούν το πρότυπο KCAgents.
Επομένως, η περιγραφή του Carlo (Customer) επεκτείνεται με ένα νέο γεγονός, το οποίο περιέχει το όνομα του ιδιοκτήτη του επιθυμητού διαμερίσματος (owner_name), και τις παραμέτρους του Πίνακα 4.2 ενώ η επικοινωνιακή συμπεριφορά του περιέχει, πλέον, προσφορές (bid proposal) και αποδοχές προσφορών (bid acceptance).
Όμοια, η περιγραφή του ιδιοκτήτη περιέχει τις παραμέτρους του Πίνακα 4.3 ενώ η επικοινωνιακή συμπεριφορά του περιέχει επίσης προσφορές και αποδοχές προσφορών.
Ο τομέας των ευφυών πρακτόρων παρότι σχετικά νέος, παρουσιάζει μια συνεχώς αυξανόμενη δραστηριότητα.
Όπως είναι, επομένως, φυσικό, διάφορα πολυπρακτορικά συστήματα έχουν, ήδη, προταθεί προσφέροντας εναλλακτικές προτάσεις στην ερευνητική κοινότητα [Kravari & Bassiliades, 2015a].
Τα περισσότερα από αυτά, ωστόσο, είναι ειδικού σκοπού, με περιορισμένη ή καμία χρήση μηχανισμών συλλογιστικής και αξιοπιστίας.
Ορισμένα, όμως, προτείνουν μια σειρά μηχανισμών και μεθόδων για την ενίσχυση της δράσης των ευφυών πρακτόρων, όπως είναι τα τρία πολυπρακτορικά συστήματα που παρατίθενται στην συνέχεια.
Μια σχετική προσπάθεια είναι το σύστημα Rule Responder (RR) [Paschke et al., 2007a;
Paschke & Boley, 2011], το οποίο προσφέρει μια προσανατολισμένη στις υπηρεσίες μεθοδολογία, λειτουργώντας ως ενδιάμεσο λογισμικό για την ανταλλαγή κανόνων σε εικονικούς οργανισμούς.
Το σύστημα Rule Responder προσφέρει διαλειτουργικότητα μεταξύ κατανεμημένων περιβαλλόντων εκτέλεσης κανόνων μέσω της χρήσης της γλώσσας Reaction RuleML, την οποία προτείνει ως έναν ανεξάρτητο-από-πλατφόρμες φορμαλισμό ανταλλαγής κανόνων.
Τόσο το σύστημα EMERALD όσο και το σύστημα RR παρουσιάζουν μια παρόμοια προσέγγιση όσον αφορά την υπηρεσία συλλογιστικής για ευφυείς πράκτορες και την χρήση της γλώσσας RuleML.
Επιπλέον, και οι δύο προσεγγίσεις επιτρέπουν την χρησιμοποίηση μιας ποικιλίας μηχανισμών κανόνων.
Ωστόσο, οι κύριες διαφορές με την προσέγγιση του συστήματος EMERALD, που προτείνεται στην παρούσα διατριβή, είναι ότι το σύστημα RR υιοθετεί μια μοναδική γλώσσα ανταλλαγής κανόνων ενώ στο EMERALD αυτό δεν είναι απαραίτητο.
Επιπλέον, οι μηχανισμοί κανόνων στο RR είναι ενσωματωμένοι στο εσωτερικό των πρακτόρων ενώ στο EMERALD, προτείνεται η καινοτομία της διαμόρφωσης τους ως ανεξάρτητους ειδικούς πράκτορες, που παρέχουν τις αντίστοιχες υπηρεσίες.
Ακόμη, το σύστημα EMERALD προτείνει μια σειρά μηχανισμών φήμης για την αντιμετώπιση ζητημάτων αξιοπιστίας στο περιβάλλον.
Τέλος, το EMERALD είναι πλήρως συμβατό με τις προδιαγραφές της FIPA, ενώ το RR εισάγει ένα νέο περιβάλλον επικοινωνίας για τους πράκτορες που βασίζεται στην RuleML.
Τέλος πρέπει να σημειωθεί, ότι στο έβδομο κεφάλαιο της διατριβής μελετάται η διασύνδεση των συστημάτων
Μια ακόμη παρόμοια προσέγγιση είναι αυτή των Wang, Purvis & Nowostawski [Wang et al., 2005].
Σε αυτήν, διάφοροι μηχανισμοί συλλογιστικής ενσωματώνονται με την μορφή αρθρωμάτων (plug-ins) ενώ οι πράκτορες επικοινωνούν μεταξύ τους μέσω των πρωτοκόλλων επικοινωνίας της FIPA.
Το πλαίσιο βασίζεται στην πρακτορική πλατφόρμα OPAL [Purvis et al., 2002] και, παρόμοια με το EMERALD, διαθέτει διακριτούς τύπους υπηρεσιών συλλογιστικής, που υλοποιούνται ως πράκτορες.
Οι μηχανισμοί συλλογιστικής που χρησιμοποιούνται είναι οι 3APL [Dastani et al, 2005], JPRS (Java Procedural Reasoning System) και ROK (Rule-driven Object-oriented Knowledge-based System) [Nowostawski, 2001].
Οι 3APL συμβατοί πράκτορες ενσωματώνουν BDI λογικά στοιχεία και χαρακτηριστικά λογικής πρώτης τάξης, παρέχοντας δομές για την υλοποίηση των πεποιθήσεων, των δηλωτικών στόχων, των βασικών ικανοτήτων και των κανόνων συλλογιστικής των πρακτόρων.
Οι JPRS συμβατοί πράκτορες εκτελούν διαδικαστική συλλογιστική κατευθυνόμενη από τους στόχους.
Κάθε JPRS πράκτορας αποτελείται από ένα μοντέλο του κόσμου (πεποιθήσεις του πράκτορα), μια βιβλιοθήκη πλάνων (πλάνα που μπορεί να χρησιμοποιήσει ο πράκτορας για να επιτύχει τους στόχους του), έναν μηχανισμό εκτέλεσης πλάνων (μονάδα συλλογιστικής) και ένα σύνολο στόχων.
Τέλος, οι ROC συμβατοί πράκτορες αποτελούνται από μια μνήμη εργασίας, μια βάση κανόνων (που αποτελείται από κανόνες πρώτης τάξης που εκτελούνται με ορθή ακολουθία εκτέλεσης) και ένα σύνολο
Έτσι, ακολουθώντας μια παρόμοια με το EMERALD προσέγγιση, το πλαίσιο ενσωματώνει τις τρεις μηχανές συλλογιστικής στην πλατφόρμα OPAL, με την μορφή μικρό-πρακτόρων OPAL.
Η κύρια διαφορά μεταξύ των δύο συστημάτων έγκειται στην ποικιλία των υπηρεσιών συλλογιστικής που προσφέρονται από το σύστημα EMERALD.
Για την ακρίβεια, οι προαναφερθέντες τρεις μηχανισμοί συλλογιστικής που προτείνονται από τους συγγραφείς βασίζονται σε δηλωτικές γλώσσες κανόνων ενώ το σύστημα EMERALD προτείνει μια ποικιλία υπηρεσιών συλλογιστικής, συμπεριλαμβανομένης της συνεπαγωγικής, της αναιρέσιμης και της χρονικής αναιρέσιμης λογικής, παρέχοντας μια περισσότερο ολοκληρωμένη λύση.
Επιπλέον, οι συγγραφείς, σε αντίθεση με το EMERALD, δεν λαμβάνουν υπόψη τους ζητήματα εμπιστοσύνης και αξιοπιστίας.
Τέλος, η ως άνω προσέγγιση δεν βασίζεται σε πρότυπα του Σημασιολογικού Ιστού, όπως συμβαίνει με το EMERALD, για την ανταλλαγή κανόνων και δεδομένων.
Οι Bartolini, Preist & Jennings [Bartolini et al., 2002] προτείνουν ένα πρωτόκολλο διαπραγμάτευσης και ένα πλαίσιο που το εφαρμόζει.
Ομοίως με την προσέγγισή του EMERALD, το πλαίσιο τους χρησιμοποιεί την πλατφόρμα JADE.
Επιπλέον, αυτή η προσέγγιση χρησιμοποιεί, με έναν δομημένο τρόπο, μια ταξινομία δηλωτικών κανόνων για την κάλυψη μιας ευρείας ποικιλίας μηχανισμών διαπραγμάτευσης.
Η προσέγγιση αυτή προσφέρει τα ίδια πλεονεκτήματα με το EMERALD, όσον αφορά τον σχεδιασμό, καθώς, οι εμπλεκόμενοι μηχανισμοί εκπροσωπούνται με δομημένο και σαφή τρόπο.
Αυτό καθιστά τον σχεδιασμό και την υλοποίηση των πρακτόρων ευκολότερη, μειώνοντας τους κινδύνους της ακούσιας λανθασμένης συμπεριφοράς.
Από την άλλη πλευρά, το σύστημα EMERALD προσφέρει ένα πιο γενικό πλαίσιο, που επιτρέπει την χρήση του σε διάφορους τομείς και περιπτώσεις, καθώς δεν περιορίζεται μόνο στις διαπραγματεύσεις αλλά προσφέρει πλήθος υπηρεσιών καλύπτοντας ένα ευρύ φάσμα ζητημάτων.
Η κύρια συμβολή του παρόντος κεφαλαίου της διατριβής αφορά στην σχεδίαση και ανάπτυξη ενός πολυπρακτορικού συστήματος, που ονομάζεται EMERALD, το οποίο προσφέρει πλήθος τεχνολογιών και υπηρεσιών για την διευκόλυνση της δράσης, την βελτίωση της απόδοσης και την μεγιστοποίηση της διαλειτουργικότητας των ευφυών πρακτόρων στον Σημασιολογικό Ιστό.
Σε αυτό το πλαίσιο, μελετήθηκε, αρχικά, η ετερογένεια των φορμαλισμών και των λογικών που υιοθετούνται από τους ευφυείς πράκτορες, καθώς και η αδυναμία επίτευξης διαλειτουργικότητας όσον αφορά την αποτελεσματική διεξαγωγή συλλογιστικής από αυτούς.
Για την αντιμετώπιση του ζητήματος προτάθηκε μια σειρά αξιόπιστων υπηρεσιών συλλογιστικής, οι οποίοι προσφέρονται από ειδικούς ανεξάρτητους πράκτορες, που ονομάζονται Reasoners.
Οι πράκτορες αυτοί, μέσω των παρεχόμενων υπηρεσιών προσφέρουν την δυνατότητα χρήσης ενός πλήθους λογικών και φορμαλισμών κανόνων, επιτρέποντας ακόμα και σε πράκτορες που δεν κατανοούν την ίδια «γλώσσα» να επικοινωνούν και να συναλλάσσονται.
Για την περαιτέρω υποστήριξη και βελτιστοποίηση της ανάπτυξης και δράσης των ευφυών πρακτόρων προτάθηκε, επιπλέον, ένα γενικό, επαναχρησιμοποιήσιμο πρότυπο για παραμετροποιήσιμους, βασισμένους στην γνώση πράκτορες, που ονομάζεται KC-Agents.
Το πρότυπο αυτό συμβάλει σημαντικά στην απόδοση και την διαλειτουργικότητα των ευφυών πρακτόρων που το ακολουθούν, καθώς επιτρέπει τον μερικό ή ολικό επαναπροσδιορισμό της συμπεριφοράς των πρακτόρων, χωρίς πρόσθετο προγραμματιστικό κόστος.
Επιπρόσθετα, προτάθηκε μια σειρά υπηρεσιών, που ονομάζονται AYPS και περιλαμβάνουν προηγμένες υπηρεσίες σημασιολογικού καταλόγου και αναζήτησης καθώς και υπηρεσίες αναζήτησης που βασίζονται στην αξιοπιστία των υπηρεσιών, οι οποίες ενισχύουν τους πράκτορες στην προσπάθεια τους να εντοπίσουν τους καταλληλότερους για αυτούς συνεργάτες.
Σε αυτό το πλαίσιο, δεδομένου ότι η εμπιστοσύνη στα πολυπρακτορικά συστήματα αποτελεί ένα ιδιαίτερα σημαντικό ζήτημα, προτάθηκαν και ενσωματώθηκαν στο σύστημα ορισμένα μοντέλα εμπιστοσύνης, τόσο κεντρικής προσέγγισης όσο και κατανεμημένα.
Ωστόσο, το ζήτημα της εμπιστοσύνης και των προτεινόμενων μοντέλων μελετάται διεξοδικά στο έκτο κεφάλαιο της παρούσας διατριβής.
Επιπρόσθετα, για την ενίσχυση της λειτουργικότητας του συστήματος EMERALD και την διευκόλυνση των ανθρώπων-χρηστών του συστήματος προτάθηκε η ανάπτυξη και χρήση μιας γραφικής διεπαφής χρήστη (GUI), η οποία προσφέρει και γραφικά όλες τις προσφερόμενες υπηρεσίες του συστήματος EMERALD.
Η συμβολή της γραφικής διεπαφής είναι πολύπλευρη δεδομένου ότι αφενός προσφέρει την δυνατότητα εποπτείας των πρακτόρων από τους χρήστες, ενισχύοντας την ανάπτυξη σχέσης εμπιστοσύνης των χρηστών με το σύστημα, και αφετέρου επιτρέπει τον έλεγχο και την αξιολόγηση των εφαρμογών και των μοντέλων που υλοποιούνται στο σύστημα.
Τέλος, το παρόν κεφάλαιο ολοκληρώνοντας την συμβολή του παρουσιάζει ορισμένες περιπτώσεις χρήσης μέσω των οποίων καταδεικνύεται η λειτουργία και η χρησιμότητα των προτεινόμενων τεχνολογιών και υπηρεσιών. 5 5 Διαχείριση Αλληλεπίδρασης Ευφυών Πρακτόρων στον Σημασιολογικό Ιστό
Η αλληλεπίδραση των ευφυών πρακτόρων στο περιβάλλον του Σημασιολογικού Ιστού είναι ένα δύσκολο και πολλές φορές πολύπλοκο έργο.
Κάθε ευφυής πράκτορας, δρώντας αυτόνομα, έχει την ικανότητα να αντιληφθεί το περιβάλλον και να λάβει αποφάσεις σχετικές με τους στόχους του.
Για αυτό το σκοπό, κάθε πράκτορας διαθέτει μια ή περισσότερες στρατηγικές, που του επιτρέπουν να διαχειρίζεται την εσωτερική του κατάσταση, την συμπεριφορά του και τις αλληλεπιδράσεις του με το περιβάλλον ή άλλους ευφυείς πράκτορες.
Ωστόσο, η ιδιοτέλεια των ευφυών πρακτόρων και οι, συχνά, αντικρουόμενοι στόχοι τους εγείρουν σημαντικά ζητήματα, όπως, για παράδειγμα, τι θεωρείται επιτρεπτό, δηλαδή ποιο είναι το πρωτόκολλο αλληλεπίδρασης, αλλά και πως μπορούν να συνάψουν σχέσεις εμπιστοσύνης για να λάβουν αμοιβαία οφέλη.
Σε κάθε περίπτωση, ανεξάρτητα από τους στόχους ή το πεδίο εφαρμογής, απαραίτητη προϋπόθεση για μια αλληλεπίδραση είναι ο σαφής ορισμός του πρωτοκόλλου της, ένα έργο ιδιαίτερα δύσκολο [Baldoni et al., 2009].
Πρακτικά, η δυσκολία στην μοντελοποίηση και την διαλειτουργικότητα των πρωτοκόλλων έχει οδηγήσει στην ανάπτυξη πρωτοκόλλων μόνο για συγκεκριμένους τομείς (domain-depended).
Γεγονός που επηρεάζει και την μοντελοποίηση των στρατηγικών των πρακτόρων, καθώς ως επί το πλείστον είναι αλληλένδετες με το πρωτόκολλο.
Επομένως, απαιτείται η περαιτέρω μελέτη και πρόταση αποτελεσματικών μεθοδολογιών και τεχνολογιών για την διευκόλυνση του ορισμού, την ανάπτυξη, την επαναχρησιμοποίηση, την συντήρηση και την διασύνδεση πρωτοκόλλων και στρατηγικών.
Ωστόσο, η γενική φύση της αλληλεπίδρασης των ευφυών πρακτόρων και η πολυπλοκότητα της καθιστά δύσκολη την πρόταση καθολικών λύσεων.
Επομένως, είναι απαραίτητο να μελετηθούν, επιπλέον, σαφώς ορισμένοι τομείς και περιπτώσεις αλληλεπίδρασης, προκειμένου να κατανοηθούν και να αντιμετωπιστούν τα επιμέρους ζητήματα που ανακύπτουν σε κάθε τομέα.
Για τον σκοπό αυτό, στην παρούσα διατριβή επιλέχθηκε ο τομέας του ηλεκτρονικού εμπορίου (e-Commerce) καθώς, στο περιβάλλον του Σημασιολογικού Ιστού, παρουσιάζει συνεχή ανάπτυξη ενώ, παράλληλα, αποτελεί μία πολύπλευρη ειδική περίπτωση που περιλαμβάνει πλήθος περιπτώσεων αλληλεπίδρασης, όπως η εδραίωση εμπιστοσύνης, η διαπραγμάτευση και η, μετέπειτα, συνεργασία [Russell & Norvig, 2009;
Πρακτικά, οι ευφυείς πράκτορες αντιμετωπίζουν δυσκολίες, καθώς πρέπει να συλλέγουν πληροφορίες, να αλληλεπιδρούν και να εκτελούν σωστά και με ασφάλεια συναλλαγές.
Όμως, στον τομέα του ηλεκτρονικού εμπορίου αντιμετωπίζουν επιπλέον δυσκολίες, καθώς στοχεύουν στην επίτευξη συμφωνιών, δηλαδή (ηλεκτρονικών) συμβολαίων (e-Contracts).
Ένα τυπικό ηλεκτρονικό συμβόλαιο περιλαμβάνει μια σειρά όρων και δημιουργεί σχέσεις και νομικές υποχρεώσεις που πρέπει να τηρούνται, δηλαδή καθορίζει τι πρέπει ή επιτρέπεται να γίνει και τι όχι [Krishna et al., 2005].
Έτσι, η αποτελεσματική διαχείριση και διαπραγμάτευση τέτοιων συμβολαίων είναι σημαντική [Dunne et al., 2005].
Πρακτικά, ένα ηλεκτρονικό συμβόλαιο μπορεί να αναπαρασταθεί ως μια ροή εργασιών (workflow) [Chiu et al., 2003], ωστόσο, ακόμη υπάρχει έλλειψη μιας συνολικής ολοκληρωμένης λύσης για την διαχείριση του.
Για αυτό τον λόγο είναι απαραίτητο, επιπρόσθετα της μελέτης των πρωτοκόλλων και των διαδικασιών που σχετίζονται με αυτά, να μελετηθεί η μοντελοποίηση της συνολικής διαδικασίας που απαιτείται, από την αρχική πρόθεση σύναψης συμβολαίου από τους συμμετέχοντες έως την τελική αποδοχή του.
Με άλλα λόγια, είναι απαραίτητο να καθοριστούν σωστές και αποτελεσματικές ροές εργασιών, που θα εξασφαλίζουν την απρόσκοπτη, αξιόπιστη και συνεπή συμμετοχή όλων των εμπλεκόμενων μερών.
Ωστόσο, υπάρχουν σημαντικές προκλήσεις για την επίτευξη αυτού του στόχου.
Οι τυπικές νομικές αρχές ισχύουν και στα ηλεκτρονικά συμβόλαια, όμως, η διαχείριση αυτών των συμβολαίων εγείρει σημαντικά ζητήματα που δεν συναντώνται στα παραδοσιακά συμβόλαια.
Για παράδειγμα, τα διαθέσιμα συμβόλαια είναι στην πλειονότητα τους ακόμη αδόμητα (Indukuri & Krishna, 2010) ενώ υπάρχει και έλλειψη σαφών μετρικών και μετρήσεων για την αξία και την τήρηση των ηλεκτρονικών συμβολαίων.
Μέχρι σήμερα, οι περισσότερες προσεγγίσεις αντιμετωπίζουν μέρος των ζητημάτων, ορισμένες από αυτές εξαρτώνται από συγκεκριμένες γλώσσες ή συστήματα, περιορίζονται σε συγκεκριμένες περιπτώσεις χρήσης ή επικεντρώνονται μόνο στην παρακολούθηση της εκτέλεσης των ηλεκτρονικών συμβολαίων [Karlapalem & Krishna, 2006;
Ακόμη, υπάρχει έλλειψη προσεγγίσεων, που να λαμβάνουν υπόψη ζητήματα εμπιστοσύνης, παρόλο που η αυτή είναι μία από τις σημαντικότερες πτυχές τόσο του παραδοσιακού εμπορίου όσο και του ηλεκτρονικού.
Σε αυτό το πλαίσιο, η παρούσα διατριβή, σε αυτό το κεφάλαιο, προτείνει μεθοδολογίες και προσεγγίσεις για την διαχείριση πρωτοκόλλων και στρατηγικών αλληλεπίδρασης πρακτόρων μέσω κανόνων και την διαχείριση της ροής εργασιών ηλεκτρονικών συμβολαίων μέσω πολιτικών.
Όσον αφορά στην πρώτη περίπτωση προτείνεται μια νέα μεθοδολογία, που ονομάζεται K-SWAN, η οποία προωθεί την αυτοματοποίηση της αλληλεπίδρασης και της χρήσης των ευφυών πρακτόρων [Kravari et al., 2013a;
Η προτεινόμενη προσέγγιση, μέσω της χρήσης τεχνολογιών του Σημασιολογικού Ιστού, διαχωρίζει το πρωτόκολλο αλληλεπίδρασης από την ιδιωτική στρατηγική, επιτρέποντας στους πράκτορες να επιλέξουν το κατάλληλο για την συναλλαγή πρωτόκολλο (από μια βιβλιοθήκη επαναχρησιμοποιήσιμων πρωτοκόλλων) και να το συνδυάσουν αυτόματα με την προσωπική τους στρατηγική (από μια ιδιωτική βιβλιοθήκη).
Η συμμόρφωση με την μεθοδολογία ΚSWAN επιτρέπει στους πράκτορες να συμμετέχουν απρόσκοπτα στις διάφορες διαδικασίες αλληλεπίδρασης και να τροποποιούν, όταν είναι απαραίτητο, την συμπεριφορά τους, με ελάχιστο προγραμματιστικό κόστος.
Όσον αφορά στην δεύτερη περίπτωση προτείνεται μια νέα μεθοδολογία, η οποία αντιμετωπίζει όλες τις πτυχές ενός ηλεκτρονικού συμβολαίου, από την εδραίωση εμπιστοσύνης μεταξύ των συμμετεχόντων έως την τελική συμφωνία και αποδοχή [Kravari et al.,
Κεφάλαιο 5 – Διαχείριση Αλληλεπίδρασης Ευφυών Πρακτόρων στον Σημασιολογικό Ιστό 2010d].
Η μεθοδολογία αποσαφηνίζει τον συσχετισμό μεταξύ των πολιτικών των ευφυών πρακτόρων και των όρων ενός συμβολαίου και ενισχύει, μεταξύ άλλων, την διαλειτουργικότητα, την επαναχρησιμοποίηση, την αυτοματοποίηση και την αποτελεσματικότητα και μπορεί να χρησιμοποιηθεί σε οποιοδήποτε πολυπρακτορικό σύστημα.
Επιπρόσθετα, η προτεινόμενη προσέγγιση περιλαμβάνει αξιολόγηση της στρατηγικής και της απόδοσης, γεγονός που επιτρέπει στους συμμετέχοντες να μελετήσουν τόσο την δική τους συμπεριφορά όσο και των υπολοίπων, προκειμένου να βελτιώσουν την δράση τους και να αποκτήσουν μεγαλύτερα οφέλη.
Τέλος, οι δύο προτεινόμενες μεθοδολογίες ενσωματώνονται στο σύστημα EMERALD, όπου υλοποιούνται σχετικά παραδείγματα χρήσης, προκειμένου να καταδειχθεί η λειτουργικότητα και η χρησιμότητα τους.
Διαχείριση Πρωτοκόλλων και Στρατηγικών Αλληλεπίδρασης Πρακτόρων μέσω Κανόνων – Μεθοδολογία K-SWAN Σε ένα περιβάλλον, όπου οι πράκτορες αλληλεπιδρούν ελεύθερα μεταξύ τους, κάθε ένας από αυτούς χαρακτηρίζεται από την ιδιωτική του στρατηγική και το πρωτόκολλο αλληλεπίδρασης (ή την χορογραφία (choreography), όπως συνήθως αποκαλείται στις υπηρεσίες ιστού [Baldoni et al., 2009]).
Με άλλα λόγια, κάθε πράκτορας είναι σε θέση να διαχειριστεί μια ιδιωτική πολιτική (ένα σύνολο κανόνων που αντιπροσωπεύουν απαιτήσεις, υποχρεώσεις και περιορισμούς), τα προσωπικά δεδομένα του χρήστη και ένα σύνολο κανόνων αλληλεπίδρασης που περιγράφουν, μεταξύ άλλων, περιορισμούς για τα εμπλεκόμενα μέρη.
Προκειμένου να επιτευχθεί η μέγιστη αποτελεσματικότητα των πρακτόρων, απαιτείται μια καλά δομημένη μοντελοποίηση των αλληλεπιδράσεων μεταξύ των συμμετεχόντων μερών.
Ακόμη και σήμερα, σε πολλές περιπτώσεις εφαρμόζεται η κοινή πρακτική, όπου πρωτόκολλο και στρατηγική είναι από κοινού κωδικοποιημένα σε κάθε πράκτορα.
Ωστόσο, αυτή η πρακτική δεν ήταν ούτε εύκολη ούτε ευέλικτη.
Ως εκ τούτου, το πρωτόκολλο θα πρέπει να διαχωρίζεται από τις στρατηγικές των πρακτόρων.
Αυτή είναι μια καλύτερη πρακτική, δεδομένου ότι η πολιτική κάθε πράκτορα θα πρέπει να παραμείνει κρυφή, καθώς είναι ιδιωτική και οποιαδήποτε αποκάλυψη θα μπορούσε να οδηγήσει σε χειραγώγηση από τους συναλλασσόμενους πράκτορες και συνεπώς σε απώλεια.
Από την άλλη πλευρά, κάθε πρωτόκολλο αλληλεπίδρασης θα πρέπει να αποτελεί κοινό πόρο, καθώς όλοι οι πράκτορες θα πρέπει να συμμορφώνονται με το ίδιο πρωτόκολλο, προκειμένου να αλληλεπιδράσουν ορθά.
Για το σκοπό αυτό, προτείνεται η μεθοδολογία K-SWAN, μια βασισμένη σε κανόνες, επαναχρησιμοποιήσιμη και εύκολα κατανοητή μεθοδολογία διαχείρισης πρωτοκόλλων και στρατηγικών αλληλεπίδρασης.
Η αλληλεπίδραση μεταξύ πρακτόρων περιλαμβάνει ιδιωτικές στρατηγικές, που περιγράφουν τι θέλουν τα εμπλεκόμενα μέρη να επιτύχουν στην συγκεκριμένη συναλλαγή, και δημόσια πρωτόκολλα, που περιλαμβάνουν δύο ή περισσότερους ρόλους, τα οποία παραλείπουν τις λεπτομέρειες των ατομικών αποφάσεων κάθε πράκτορα, καθώς επικεντρώνονται στους γενικούς κανόνες της συναλλαγής.
Σε αυτό το πλαίσιο, η προτεινόμενη KSWAN μεθοδολογία, βασίζεται στην παραδοχή ότι τόσο οι στρατηγικές όσο και τα πρωτόκολλα μπορούν να περιγραφούν με την χρήση κανόνων.
Επομένως, για να είναι δυνατή η διαχείριση τους, μέσω μιας βασισμένης στην γνώση προσέγγισης, θα πρέπει να διαχωρίζονται και να εκφράζονται σε κατάλληλες (ενδεχομένως διαφορετικές) γλώσσες κανόνων.
Επιπλέον, οι αλληλεπιδράσεις στον Ιστό απαιτούν αποτελεσματική ανταλλαγή μηνυμάτων και ευέλικτη αναπαράσταση των κανόνων αλληλεπίδρασης.
Έτσι, η προτεινόμενη μεθοδολογία K-SWAN προτείνει και υιοθετεί την χρήση της αναδραστικής γλώσσας διαδικτυακών κανόνων Reaction RuleML, τόσο για την έκφραση των κανόνων του πρωτοκόλλου όσο και της στρατηγικής [Boley et al., 2010], καθώς η Reaction RuleML επιτρέπει δύο τύπους κανόνων, τους παραγωγικούς και τους αναδραστικούς.
Οι πρώτοι χρησιμοποιούνται για την στρατηγική των πρακτόρων, επιτρέποντας τους να ενεργούν σύμφωνα με την επιθυμία του χρήστη τους, ενώ οι αναδραστικοί χρησιμοποιούνται για το πρωτόκολλο, επιτρέποντας στους πράκτορες να προσαρμοστούν στην συμπεριφορά του εταίρου τους, με βάση γεγονότα που σχετίζονται με τις ανταλλαγές μηνυμάτων.
Διαχωρισμός Πρωτοκόλλων Στρατηγικών Ο διαχωρισμός των πρωτοκόλλων και των στρατηγικών και η έκφραση τους σε μια γλώσσα όπως η Reaction RuleML ενισχύει την ευελιξία και την δυνατότητα επαναχρησιμοποίησης.
Σύμφωνα με την γενική αρχή της επαναχρησιμοποίησης των πληροφοριών, η χρήση βιβλιοθηκών αναφοράς για τις βάσεις κανόνων (rulebases) θα μπορούσε να είναι μια κατάλληλη λύση για να καταστούν τα διαθέσιμα στοιχεία εύκολα προσβάσιμα.
Αυτή η ιδέα μπορεί να υλοποιηθεί μέσω μιας δημόσιας βιβλιοθήκης για τις βάσεις κανόνων, που αντιπροσωπεύουν τα πρωτόκολλα αλληλεπίδρασης και μιας ιδιωτικής βιβλιοθήκης (για κάθε πράκτορα) για τις βάσεις κανόνων, που περιέχουν τις πολιτικές αλληλεπίδρασης κάθε πράκτορα.
Η πρώτη βιβλιοθήκη θα εξασφαλίζει ότι τα πρωτόκολλα είναι σαφώς καθορισμένα και εύκολα προσβάσιμα από οποιονδήποτε πράκτορα ή υπηρεσία ενώ η δεύτερη θα επιτρέπει σε κάθε πράκτορα να διαχειρίζεται τις στρατηγικές με τον βέλτιστο και πλέον ιδιωτικό τρόπο.
Ακολουθώντας αυτή την φιλοσοφία, προτείνεται η χρήση μιας δημόσιας βιβλιοθήκη πρωτοκόλλων και ιδιωτικών βιβλιοθηκών στρατηγικής, όπου θα αποθηκεύονται, αντίστοιχα, τα πρωτόκολλα και οι στρατηγικές στην γλώσσα Reaction RuleML.
Με άλλα λόγια, ο διαχωρισμός της ιδιωτικής στρατηγικής κάθε πράκτορα από το πρωτόκολλο οδηγεί σε δύο σύνολα κανόνων.
Το πρώτο σχετίζεται με την στρατηγική (προσωπική πολιτική πράκτορα) ενώ το δεύτερο σχετίζεται με το πρωτόκολλο.
Το σύνολο κανόνων της στρατηγικής καθορίζει τις προσωπικές προτιμήσεις του πράκτορα ενώ το σύνολο κανόνων του πρωτοκόλλου καθορίζει, κατά κύριο λόγο, την ροή της ανταλλαγής μηνυμάτων μεταξύ των πρακτόρων.
Επομένως, κάθε φορά που συμβαίνει ένα νέο περιστατικό αλληλεπίδρασης, κάθε πράκτορας θα πρέπει να χρησιμοποιήσει την βιβλιοθήκη πρωτοκόλλων για να επιλέξει το πιο κατάλληλο πρωτόκολλο (σύνολο κανόνων) για την συναλλαγή, εξασφαλίζοντας ότι θα δράσει σωστά καθ' όλη την διαδικασία.
Επιπλέον, οι πράκτορες θα πρέπει να χρησιμοποιήσουν την ιδιωτική βιβλιοθήκη τους για να επιλέξουν την κατάλληλη στρατηγική (σύνολο κανόνων) που θα μπορούσε να μεγιστοποιήσει την ωφέλεια τους.
Συγκεκριμένα, προτείνεται η χρήση μιας δημόσιας βιβλιοθήκης πρωτοκόλλων που θα διατηρεί κάθε διαθέσιμο πρωτόκολλο με το όνομα και τα στοιχεία του, όπως πότε και πόσες φορές χρησιμοποιήθηκε.
Επομένως, οι πράκτορες θα εντοπίζουν, μεταξύ άλλων, δημοφιλή ή νέα πρωτόκολλα, ενεργώντας προσαρμοστικά για κάθε περίπτωση.
Για παράδειγμα, ένα παλιό και ευρέως χρησιμοποιούμενο πρωτόκολλο πιθανόν να είναι πιο αξιόπιστο και ορθά δομημένο από ένα νέο.
Έτσι, οι πράκτορες θα είναι σε θέση να προσαρμόσουν ανάλογα την στρατηγική τους και να γίνουν, για παράδειγμα, πιο προσεκτικοί.
Από την άλλη πλευρά, ένα παλιό πρωτόκολλο, που δεν έχει χρησιμοποιηθεί πρόσφατα, πιθανόν να είναι παρωχημένο.
Αυτή η γνώση μπορεί να προστατέψει τους πράκτορες από πολλά προβλήματα, χρόνο και χρήμα.
Επιπλέον, στην ιδιωτική βιβλιοθήκη στρατηγικής, κάθε πράκτορας θα ονομάζει και θα αποθηκεύει τις στρατηγικές του, μαζί με πληροφορίες σχετικά με την χρήση τους (πότε, σε ποια περίπτωση και για ποιο πρωτόκολλο) και την προσωπική του γνώμη γι' αυτές, η οποία στην μεθοδολογία K-SWAN ονομάζεται κατάταξη (rank).
Οι στρατηγικές θα πρέπει επίσης να επαναχρησιμοποιούνται, ωστόσο η αποθήκευση μιας παλιάς στρατηγικής δεν σημαίνει ότι είναι επιτυχής.
Οι πράκτορες θα πρέπει να αξιολογούν τις στρατηγικές τους για μελλοντική χρήση, γι’ αυτό απαιτείται μια βαθμολογημένη κατάταξη (rank).
Συνήθως, οι πράκτορες βασίζουν την αξιολόγησή τους σε ποιοτικές τιμές, όπως απαράδεκτη ή κακή, παρόμοια με τους ανθρώπους.
Σε αυτό το πλαίσιο, η προτεινόμενη προσέγγιση αντιστοιχίζει, αρχικά, κάθε ποιοτική τιμή με μια αριθμητική (Πίνακας 5.1), η οποία κυμαίνεται από -2 (απολύτως αρνητική) έως +2 (απολύτως θετική), με το 0 να δηλώνει ασημαντότητα.
Χρησιμοποιούνται τόσο θετικές όσο και αρνητικές τιμές, για να αντανακλάται η αίσθηση της νίκης ή της απώλειας μετά από μια συναλλαγή, όπως συμβαίνει και στην πραγματική ζωή.
Επομένως, η κατάταξη ορίζεται ως η βαθμολογία κάθε χρησιμοποιούμενης στρατηγικής ενώ μια πρόσφατα αποθηκευμένη στρατηγική θα λάβει την προκαθορισμένη τιμή 0.
Έτσι, κάθε φορά που μια στρατηγική χρησιμοποιείται, αξιολογείται και η τιμή προστίθεται στην αποθηκευμένη βαθμολογία κατάταξης της.
Πίνακας 5.1.
Μέθοδος K-SWAN: Αντιστοίχιση ποιοτικών τιμών σε ποσοτικές.
Τιμές αξιολόγησης Ποιοτικές Ποσοτικές Ποιοτικές Ποσοτικές Ασήμαντο (insignificant) 0 Κακό (poor) -1 Καλό (good) 1 Απαράδεκτο (unacceptable) -2 Άριστο (excellent) 2 Η κατάταξη (βαθμολογία) μιας στρατηγικής μπορεί να μειωθεί, καθώς το άθροισμα των αξιολογήσεων θα μπορούσε να είναι αρνητικό.
Επομένως, χρησιμοποιώντας αυτή την πληροφορία, ο ιδιωτικός αλγόριθμος οποιουδήποτε πράκτορα θα μπορούσε να ασχοληθεί με το ζήτημα της επιλογής στρατηγικής.
Για παράδειγμα, κάποιοι πράκτορες θα μπορούσαν να επιλέγουν πάντα τις στρατηγικές με την υψηλότερη κατάταξη ενώ άλλοι μπορεί να προτιμούν την νεότερη στρατηγική που υπερβαίνει ένα κατώφλι κατάταξης.
Μία ποικιλία τέτοιων αλγορίθμων θα μπορούσε να χρησιμοποιηθεί από έναν πράκτορα για να χτίσει την συμπεριφορά του με την πάροδο του χρόνου, ανάλογα με την προσωπική αντίληψη του χρήστη του.
Ωστόσο, αυτό δεν σημαίνει ότι ο πράκτορας θα είναι πάντα ικανοποιημένος, σημαίνει ότι θα έχει την καλύτερη δυνατή στρατηγική μεταξύ των διαθέσιμων στρατηγικών.
Μηχανισμός Αυτόματου Συνδυασμού Η τελική συμπεριφορά των πρακτόρων είναι ένας συνδυασμός πρωτοκόλλου και στρατηγικής.
Επομένως, τα δύο σύνολα κανόνων πρέπει να συνδυαστούν και να εκτελεστούν με έναν συμπαγή τρόπο, που θα επιτρέπει στους πράκτορες να αντιδρούν στο περιβάλλον χρησιμοποιώντας τα πρότυπα συμπεριφοράς τους.
Για το σκοπό αυτό, προτείνεται η χρήση της γλώσσας και μηχανής κανόνων Jess που είναι συμβατή με τις προδιαγραφές της FIPA.
Προκειμένου να προκύψει από τα δυο ξεχωριστά σύνολα κανόνων (της Reaction RuleML) ένα ενιαίο σύνολο στο συντακτικό της γλώσσας Jess, χρησιμοποιούνται εξειδικευμένοι για τον εκάστοτε τομέα μετασχηματισμοί XSLT.
Για αυτό το σκοπό, η προτεινόμενη προσέγγιση υιοθετεί και προτείνει την χρήση μιας δημόσιας βιβλιοθήκης XSLT, όπου αποθηκεύονται όλοι οι διαθέσιμοι μετασχηματισμοί XSLT.
Είναι απαραίτητη μια νέα βιβλιοθήκη, καθώς η διαθέσιμη βιβλιοθήκη πρωτοκόλλων δεν μπορεί να χρησιμοποιηθεί και για τα πρωτόκολλα και για τους μετασχηματισμούς XSLT.
Παρά το γεγονός ότι, κάθε μετασχηματισμός συνδέεται με ένα συγκεκριμένο πρωτόκολλο, κάθε πρωτόκολλο μπορεί να χρησιμοποιηθεί σε πολλές περιπτώσεις, και ως εκ τούτου, θα είναι διαθέσιμοι για το συγκεκριμένο πρωτόκολλο περισσότεροι του ενός μετασχηματισμοί XSLT.
Ωστόσο, κάθε πρωτόκολλο στη βιβλιοθήκη θα πρέπει να έχει τουλάχιστον έναν συσχετισμένο μετασχηματισμό.
Επομένως, κάθε πράκτορας, μόλις επιλέξει το απαραίτητο πρωτόκολλο και την στρατηγική του, θα ανακτά τον κατάλληλο μετασχηματισμό XSLT από την εν λόγω βιβλιοθήκη και θα τον χρησιμοποιεί στην διαδικασία συνδυασμού του πρωτοκόλλου και της στρατηγικής (Εικόνα 5.1).
Ενσωμάτωση Μεθοδολογίας K-SWAN στο Σύστημα EMERALD Η προτεινόμενη μεθοδολογία είναι μια πλήρως αυτοματοποιημένη διαδικασία, ωστόσο, απαιτείται η χρήση ενός κατάλληλου πλαισίου για την υποστήριξη των απαιτούμενων τεχνολογιών του Σημασιολογικού Ιστού.
Επομένως, για πρακτικούς λόγους, η μεθοδολογία ενσωματώνεται στο σύστημα EMERALD.
Για το σκοπό αυτό, το πρότυπο KC-Agents του συστήματος, που παρουσιάστηκε στο προηγούμενο κεφάλαιο της διατριβής, επεκτείνεται, προκειμένου να ενσωματωθεί η μεθοδολογία.
Έτσι, το σύνολο κανόνων Α είναι πλέον της
Οι κανόνες μπορούν τώρα να αντλήσουν (περισσότερα από ένα) νέα καθορισμένα από τον χρήστη γεγονότα ή να ενημερώσουν ήδη υπάρχοντα, τα οποία μπορούν να προκαλέσουν την εκτέλεση άλλων κανόνων και ούτω καθεξής.
Με αυτόν τον τρόπο, μπορούν να υλοποιηθούν περισσότερο πολύπλοκοι αλγόριθμοι λήψης αποφάσεων για τις στρατηγικές.
Επιπλέον, το σύνολο των γεγονότων περιλαμβάνει και γεγονότα για τα μηνύματα Fm, που ελήφθησαν από άλλους πράκτορες: Fm = {fm1,…, fmk}, F=FuFeFm.
Τα οριζόμενα από τον χρήστη γεγονότα, μπορεί να είναι είτε (α) παράμετροι σχετιζόμενες με την διαχείριση της αλληλεπίδρασης FIM, όπως π.χ. το αναγνωριστικό της συνομιλίας (conversation id) και ο αριθμός των συμμετεχόντων, ή (β) παράμετροι σχετιζόμενες με το περιεχόμενο της αλληλεπίδρασης FCM, όπως π.χ. ο τομέας της αλληλεπίδρασης και το περιεχόμενο των μηνυμάτων που ανταλλάσσονται, ή (γ) η τρέχουσα κατάσταση του πρωτοκόλλου αλληλεπίδρασης FST, ή (δ) πληροφορίες που ανταλλάσσονται μεταξύ των συνόλων κανόνων της στρατηγικής και του πρωτόκολλο, μέσω των λεγόμενων γεγονότων API FAPI, ή (ε) άλλα γεγονότα γενικής χρήσης FG: Fu=FIMFCMFSTFAPIFG.
Ο ακριβής αριθμός και το είδος των γεγονότων FIM και FCM εξαρτάται από το είδος της αλληλεπίδρασης (π.χ. διαπραγμάτευση, μεσιτεία, δίκτυο συμβολαίου) και ορίζεται στο πρότυπο της βιβλιοθήκης πρωτοκόλλου.
Επίσης, ο αριθμός των καταστάσεων, στις οποίες μπορεί να μεταβεί το πρωτόκολλο εξαρτάται από τον τύπο της αλληλεπίδρασης.
Συνήθως υπάρχει μία κατάσταση για κάθε ανταλλαγή μηνυμάτων (ζεύγος μηνυμάτων) του πρωτοκόλλου, για κάθε συμμετέχοντα στην αλληλεπίδραση.
Επιπλέον, υπάρχουν καταστάσεις FsST, που αφορούν την στρατηγική του πράκτορα, οι οποίοι ενεργοποιούνται όταν ο αλγόριθμος του πράκτορα πρέπει να μεταβεί από το πρωτόκολλο στην στρατηγική, προκειμένου να διατυπώσει μια απάντηση σε ένα εισερχόμενο μήνυμα ή να ξεκινήσει η ανταλλαγή ενός νέου μηνύματος.
Επομένως, ισχύει η σχέση FST=FpSTFsST, όπου FpST είναι οι καταστάσεις του πρωτοκόλλου.
Τα γεγονότα API περιέχουν τον τύπο και το περιεχόμενο των μηνυμάτων, τα οποία σύμφωνα με το σύνολο κανόνων της στρατηγικής πρέπει να αποσταλούν από το σύνολο κανόνων του πρωτοκόλλου.
Τα ισοδύναμα γεγονότα «διασύνδεσης» μεταξύ του πρωτοκόλλου και της στρατηγικής είναι τα σχετιζόμενα με το περιεχόμενο της αλληλεπίδρασης γεγονότα FCM.
Όπως περιγράφηκε ήδη, το σύνολο κανόνων του πράκτορα αποτελείται από την συγχώνευση του συνόλου κανόνων του δημόσιου πρωτοκόλλου Pp με το επιλεγμένο σύνολο κανόνων της ιδιωτικής στρατηγικής Ps: P=PpPs.
Τα δύο σύνολα κανόνων συντίθενται ως εξής: Pp=ApCp και Ps=As, για παράδειγμα η στρατηγική δεν περιέχει κανόνες επικοινωνίας πρακτόρων.
Τα συστατικά των δύο συγχωνευμένων συνόλων κανόνων ορίζονται περαιτέρω ως εξής:
Τα παραπάνω μπορούν να εξηγηθούν ως εξής: το πρωτόκολλο μπορεί να εκκινήσει μια συνομιλία cp, διότι έχει φτάσει κάποια κατάσταση (FpST), λαμβάνοντας επίσης υπόψη τις παραμέτρους διαχείρισης αλληλεπίδρασης (FIM) και το εάν έχει πυροδοτηθεί από το σύνολο κανόνων της στρατηγικής (FAPI).
Το πρωτόκολλο περιμένει, επίσης, για μηνύματα (Fm), τα οποία αναμένονται σε κάποια κατάσταση(FpST), και με βάση τις παραμέτρους της διαχείρισης αλληλεπίδρασης(FIM), μπορεί να προχωρήσει στην επόμενη κατάσταση (πρωτόκολλο ή στρατηγική, FST) ή να ενημερώσει αυτές τις παραμέτρους (FIM) ή τις παραμέτρους περιεχομένου αλληλεπίδρασης (FCM).
Από την άλλη πλευρά, η στρατηγική που βασίζεται στην τρέχουσα κατάσταση (FsST), ελέγχει τις παραμέτρους του περιεχομένου της αλληλεπίδρασης (FCM) ή κάποιο ενδιάμεσο αποτέλεσμα (ή αρχικά δεδομένα) της διαδικασίας λήψης αποφάσεων (FG) και αποφασίζει είτε να προχωρήσει στην επόμενη κατάσταση (πρωτόκολλο ή στρατηγική, FST) είτε να διατυπώσει ένα μήνυμα που θα πρέπει να αποστείλει το πρωτόκολλο (FAPI) είτε απλά να αποθηκεύσει ένα ενδιάμεσο γεγονός, που θα μπορούσε να χρησιμοποιηθεί αργότερα από άλλον κανόνα της στρατηγικής (FG).
Μέχρι στιγμής, οι συμβατοί με το πρότυπο KC-Agents πράκτορες περιορίστηκαν στην λήψη ενός αρχείου, το οποίο περιέχει τόσο την στρατηγική όσο και το πρωτόκολλο.
Το επεκτεταμένο (K-SWAN) KC-agent πρότυπο λαμβάνει δύο ξεχωριστά αρχεία, ένα για το πρωτόκολλο και ένα για την στρατηγική ή απλά ένα σύνολο από λέξεις-κλειδιά, αφήνοντας τον πράκτορα να δρα ανεξάρτητα.
Επομένως, κάθε φορά που το πρωτόκολλο ή η στρατηγική τροποποιείται, δεν απαιτείται επιπρόσθετο προγραμματιστικό κόστος.
Ο πράκτορας θα ανακτήσει τα κατάλληλα (νέα) αρχεία από τις αντίστοιχες βιβλιοθήκες.
Η μετατροπή και η συγχώνευση τους θα εκτελεστεί αυτόματα.
Ακολουθώντας αυτή την προσέγγιση, νέες συμπεριφορές και πρωτόκολλα μπορούν να προστεθούν ανά πάσα στιγμή στις βιβλιοθήκες.
Επομένως, καθορίζονται τρεις βιβλιοθήκες, η ιδιωτική βιβλιοθήκη της στρατηγικής, η δημόσια βιβλιοθήκη των μετασχηματισμών XSLT και η δημόσια βιβλιοθήκη των πρωτοκόλλων αλληλεπίδρασης.
Η βιβλιοθήκη της στρατηγικής ανήκει σε έναν συγκεκριμένο πράκτορα και διατηρεί τις στρατηγικές του.
Κάθε εγγραφή έχει τις ακόλουθες ιδιότητες, ένα όνομα για τη στρατηγική, την ημερομηνία κατά την οποία προστέθηκε στην βιβλιοθήκη, την ίδια την στρατηγική (βάση κανόνων), την περιγραφή, την ημερομηνία και την περίπτωση χρήσης (για κάθε φορά που χρησιμοποιήθηκε), καθώς και την τιμή κατάταξης της.
Επί του παρόντος, η μεταβλητή της κατάταξης διατηρεί μόνο την τελική ενημερωμένη τιμή, ωστόσο, θα μπορούσαν να αποθηκευτούν στο μέλλον όλες οι τιμές κατάταξης σε σχέση με το χρόνο, προκειμένου να ελεγχθεί η διακύμανση της τιμής.
Πολύτιμα συμπεράσματα μπορούν να εξαχθούν από τη μελέτη αυτή, όπως ο προσδιορισμός εάν η διαδικασία λήψης αποφάσεων της στρατηγικής είναι ή όχι παρωχημένη.
Η διαχείριση της δημόσιας βιβλιοθήκης πρωτοκόλλων γίνεται από έναν ανεξάρτητο πράκτορα και είναι προσβάσιμη από όλους τους πράκτορες του περιβάλλοντος.
Η βιβλιοθήκη αυτή διατηρεί κάθε διαθέσιμο πρωτόκολλο με τις ακόλουθες ιδιότητες, ένα επίσημο όνομα για το πρωτόκολλο, την ημερομηνία κατά την οποία προστέθηκε στην βιβλιοθήκη, το ίδιο (σύνολο κανόνων) το πρωτόκολλο, την ημερομηνία και την περίπτωση χρήσης, τους εμπλεκόμενους πράκτορες και τον αριθμό περιπτώσεων χρήσης.
Επιπλέον, ο ανεξάρτητος πράκτορας διαχειρίζεται και την δημόσια βιβλιοθήκη XSLT, που διατηρεί κάθε διαθέσιμο μετασχηματισμό, με τις ακόλουθες ιδιότητες, ένα όνομα, την ημερομηνία κατά την οποία προστέθηκε στην βιβλιοθήκη, τον ίδιο τον μετασχηματισμό, την ημερομηνία και την περίπτωση χρήσης και τον αριθμό των διακριτών περιπτώσεων που χρησιμοποιήθηκε.
Κάθε φορά, που ο χρήστης παρέχει ένα αρχείο, το οποίο περιέχει λέξη ή λέξεις κλειδιά, που περιγράφουν την περίπτωση που τον ενδιαφέρει, ένας εσωτερικός αλγόριθμος αναζητά αυτόματα την κάθε λέξη-κλειδί σε μια λίστα περιπτώσεων και ανακτά το κατάλληλο πρωτόκολλο.
Ένα πρωτόκολλο μπορεί να χρησιμοποιηθεί σε πολλές περιπτώσεις.
Ωστόσο, κάθε περίπτωση συνδέεται μόνο με ένα πρωτόκολλο.
Ομοίως, κάθε στρατηγική συνδέεται μόνο με μια περίπτωση (και συνεπώς ένα πρωτόκολλο).
Στο πλαίσιο αυτό, το πρότυπο παρέχει μια επεκτάσιμη λίστα, που συνδέει περιπτώσεις (π.χ. μεσιτεία) με πρωτόκολλα (π.χ.
FIPA πρωτόκολλο μεσιτείας) και, επομένως, με στρατηγικές.
Ωστόσο, δεδομένου ότι ένα πρωτόκολλο περιγράφει περισσότερους από έναν ρόλους, ο κάθε πράκτορας πρέπει να επιλέξει τον κατάλληλο για την περίπτωση ρόλο.
Έτσι, οι πράκτορες συμφωνούν με το πρωτόκολλο που θα χρησιμοποιείται σε ολόκληρη την συναλλαγή τους.
Ωστόσο, εάν ένας πράκτορας πρέπει να αλληλεπιδράσει με έναν εταίρο, π.χ. ένα διαδικτυακό κατάστημα που επιβάλλει ένα προκαθορισμένο πρωτόκολλο, η παραπάνω διαδικασία παραλείπεται.
Επιπλέον, δεδομένου του πρωτοκόλλου και της περίπτωσης που χρησιμοποιείται, κάθε πράκτορας αναζητά στην προσωπική βιβλιοθήκη του μια στρατηγική με ικανοποιητική κατάταξη, που χρησιμοποιήθηκε στο παρελθόν σε παρόμοια περίπτωση.
Πολλά κριτήρια μπορούν να χρησιμοποιηθούν σε αυτόν τον αλγόριθμο επιλογής, όπως για παράδειγμα, η νεότερη στρατηγική που σχετίζεται με την επιθυμητή περίπτωση, έχοντας μια υψηλή κατάταξη.
Για το σκοπό αυτό, το επεκτεταμένο πρότυπο παρέχει έναν εσωτερικό αλγόριθμο, που συνδέει την ποιοτική γνώμη του πράκτορα με μια ποσοτική τιμή (Πίνακας 5.1).
Έπειτα, αυτή η τιμή χρησιμοποιείται για την ενημέρωση και αποθήκευση της νέας τιμής κατάταξης στην βιβλιοθήκη.
Τέλος, μια ανάλογη αναζήτηση διεξάγεται στην βιβλιοθήκη των μετασχηματισμών XSLT, προκειμένου να ληφθεί ο κατάλληλος μετασχηματισμός.
Έτσι, τα εμπλεκόμενα μέρη έχουν ό,τι χρειάζονται για να αλληλεπιδράσουν σωστά και να προχωρήσουν.
Εφαρμογή σε Περιπτώσεις Διαπραγμάτευσης και Μεσιτείας Στην παρούσα ενότητα παρουσιάζονται δυο περιπτώσεις χρήσεις, που αφορούν τα πρωτόκολλα διαπραγμάτευσης (Contract Net) και μεσιτείας (Brokering) της FIPA.
Τα δυο αυτά σενάρια υλοποιήθηκαν, με την χρήση της μεθοδολογίας Κ-SWAN, καταδεικνύοντας γιατί τα πρωτόκολλα και οι στρατηγικές πρέπει να διαχωρίζονται και πώς μια αυτοματοποιημένη διαδικασία συνδυασμού εξοικονομεί χρόνο και προσπάθεια προγραμματισμού.
Περίπτωση διαπραγμάτευσης Πρωτόκολλο FIPA Contract Net Το πρωτόκολλο διαπραγμάτευσης Contract Net (CNET) προτάθηκε για πρώτη φορά από τον Smith [Smith, 1980] και είναι το πλέον χρησιμοποιημένο πρωτόκολλο.
Στο CNET, η διαπραγμάτευση θεωρείται ως μια αμφίδρομη επικοινωνία, στην οποία ένας πράκτορας είτε προτείνει είτε λαμβάνει μια προσφορά για την σύναψη συμβολαίου, ανάλογα με τον ρόλο του.
Παρότι το πρωτόκολλο αποδείχθηκε πολύτιμο για μια ποικιλία καταστάσεων, έπρεπε να τροποποιηθεί προκειμένου να αντανακλά τις αλλαγές στην τεχνολογία πρακτόρων.
Σε αυτή την κατεύθυνση, η FIPA παρέχει το πρωτόκολλο FIPA Contract Net (Εικόνα 5.2) [FIPA, 2003].
Αυτό το προτυποποιημένο πρωτόκολλο έχει χρησιμοποιηθεί ως βάση σε ένα πλήθος περιπτώσεων.
Σύμφωνα με τις προδιαγραφές του, ένας πράκτορας (Initiator) επιθυμεί να αναθέσει σε έναν ή περισσότερους άλλους πράκτορες (Participants) να εκτελέσουν κάποια εργασία, βελτιστοποιώντας παράλληλα το προσδοκώμενο όφελος.
Αυτό θα μπορούσε να είναι η ελάχιστη τιμή ή ο συντομότερος χρόνος ολοκλήρωσης.
Για μια δεδομένη εργασία, ο πράκτορας Initiator πρέπει να κοινοποιήσει την επιθυμία του, μέσω ενός μηνύματος πρόσκλησης υποβολής πρότασης (CFP).
Στην συνέχεια, οποιοσδήποτε αριθμός συμμετεχόντων (Participants) μπορεί να απαντήσει θετικά ενώ οι υπόλοιποι πρέπει να αρνηθούν.
Έτσι, η διαπραγμάτευση συνεχίζει με όσους δέχθηκαν, ωστόσο, μια θετική απάντηση, δεν είναι μια αυστηρή αποδοχή αλλά μια αντιπρόταση.
Έτσι, ο πράκτορας Initiator πρέπει να αξιολογήσει τις προσφορές και να αγνοήσει τις αρνήσεις, στέλνοντας μηνύματα απόρριψης, ενώ μπορεί να αποδεχθεί την καλύτερη προσφορά στέλνοντας ένα μήνυμα αποδοχής.
Με βάση το παραπάνω πρωτόκολλο, υλοποιήθηκε στο σύστημα EMERALD μια περίπτωση διαπραγμάτευσης, με την χρήση της K-SWAN μεθοδολογίας, όπου εμπλέκονται τέσσερα μέρη, ο πράκτορας initiator και τρεις συμμετέχοντες (Εικόνα 5.3).
Όλα τα εμπλεκόμενα μέρη συμμορφώνονται με το νέο πρότυπο που παρέχεται από το EMERALD, επομένως, το πρωτόκολλο και η στρατηγική συνδυάζονται αυτόματα.
Συγκεκριμένα, ο πράκτορας Initiator ενδιαφέρεται για την καλύτερη προσφορά σχετικά με την αγορά ενός φορητού υπολογιστή, έτσι ανακτώνται από την βιβλιοθήκη του μια κατάλληλη στρατηγική (σε RuleML), με βάση τις λέξεις-κλειδιά που παρέχονται από τον χρήστη και την υψηλότερη τιμή κατάταξης.
Στην συνέχεια, ο πράκτορας εντοπίζει το πρωτόκολλο FIPA CNet (σε RuleML) για τον ρόλο του initiator στην βιβλιοθήκη πρωτοκόλλων.
Ανακτά, επίσης, τον κατάλληλο XSLT μετασχηματισμό από την αντίστοιχη βιβλιοθήκη.
Στην συνέχεια, εκτελείται η διαδικασία για τον συνδυασμό πρωτοκόλλου – στρατηγικής και ο Initiator είναι έτοιμος να ξεκινήσει την δράση του.
Ο Initiator χρησιμοποιεί την υπηρεσία AYPS του EMERALD, προκειμένου να εντοπίσει ηλεκτρονικά καταστήματα, από την οποία και ανακαλεί τρία κατάλληλα, τα οποία εκπροσωπούνται από τους πράκτορες τους.
Ακολουθώντας το πρωτόκολλο, στέλνει ένα CFP (Call-for-proposal) μήνυμα, το οποίο περιέχει το όνομα του πρωτοκόλλου που χρησιμοποιεί, το όνομα του προϊόντος και την επιθυμητή τιμή, προκειμένου να εκκινήσει την διαδικασία της διαπραγμάτευσης.
Στην συνέχεια, περιμένει την απάντησή τους, είτε θετική (PROPOSE) είτε αρνητική (REFUSE).
Οι πράκτορες πρέπει να αποφασίσουν αν ενδιαφέρονται να διαπραγματευτούν μαζί του.
Στην συγκεκριμένη περίπτωση ενδιαφέρονται όλοι, καθώς είναι ηλεκτρονικά καταστήματα και η κύρια στρατηγική τους είναι να αλληλεπιδρούν με οποιονδήποτε δυνητικό πελάτη.
Επομένως, ανακτούν το κατάλληλο πρωτόκολλο, που κατονομάζεται στο CFP μήνυμα, από την δημόσια βιβλιοθήκη για τον ρόλο του συμμετέχοντα, καθώς και τον αντίστοιχο μετασχηματισμό XSLT.
Στην συνέχεια, ερευνούν την βιβλιοθήκη τους, προκειμένου να βρουν μια κατάλληλη για την περίπτωση στρατηγική με την υψηλότερη τιμή κατάταξης.
Χρησιμοποιώντας την αυτοματοποιημένη διαδικασία του προτύπου KC-Agents, για ακόμη μια φορά, συνδυάζονται οι στρατηγικές με το πρωτόκολλο.
Όντας πλέον έτοιμοι, πρέπει να επιβεβαιώσουν ότι το προϊόν είναι διαθέσιμο και να ενεργήσουν αναλόγως, είτε να αρνηθούν την κλήση ή να προτείνουν μια αντιπροσφορά.
Ο Initiator, από την πλευρά του, πρέπει να αξιολογήσει τις προσφορές και να αγνοήσει τις αρνήσεις, αποστέλλοντας μηνύματα τύπου REJECT.
Σύμφωνα με το πρωτόκολλο, στην συνέχεια, πρέπει να αποδεχτεί μία προσφορά, αποστέλλοντας ένα μήνυμα τύπου ACCEPT.
Είναι φανερό ότι το πρωτόκολλο καθορίζει την κατάλληλη ανταλλαγή μηνυμάτων αλλά είναι οι ιδιωτικές στρατηγικές που καθορίζουν την λήψη αποφάσεων.
Η στρατηγική του Initiator, για παράδειγμα, καθορίζει τον κύριο περιορισμό του πράκτορα, δηλαδή ότι η τιμή που προσφέρεται από έναν συμμετέχοντα θα πρέπει να είναι χαμηλότερη από την τιμή που είναι διατεθειμένος να πληρώσει.
Αυτή η τιμή για τον Initiator είναι η αναγραφόμενη στο CFP μήνυμα (εδώ 300 ευρώ) συν ένα ποσό (εδώ 50 Ευρώ).
Αν κανένας από τους συμμετέχοντες δεν ικανοποιεί αυτόν τον περιορισμό, ο Initiator τους απορρίπτει όλους.
Από την άλλη πλευρά, κάθε συμμετέχων έχει μια λίστα (σύνολο γεγονότων Products), η οποία περιέχει τα διαθέσιμα προϊόντα του, όπου αναφέρεται το είδος του προϊόντος (π.χ. φορητός υπολογιστής) και η τιμή του (π.χ. 500 ευρώ).
Ένα τέτοιο προϊόν στο συντακτικό της γλώσσας Jess, είναι: (products (type laptop) (price 200)).
Η Εικόνα 5.4(α) παρουσιάζει μια επισκόπηση της ροής της ενεργοποίησης και εκτέλεσης των κανόνων.
Εδώ, η συναλλαγή ολοκληρώθηκε με επιτυχία, όταν ο Initiator επέλεξε τον συμμετέχοντα p, στέλνοντας του ένα μήνυμα Accept Proposal (Εικόνα 5.4(β)).
Ο συμμετέχων p απαντά με ένα μήνυμα τύπου INFORM, το οποίο, σύμφωνα με τις προδιαγραφές της FIPA, απαιτείται για να επιβεβαιώσει ότι έλαβε την τελική απόφαση.
Στην συνέχεια, μόλις η αλληλεπίδραση τελειώσει, κάθε πράκτορας αξιολογεί την στρατηγική του και ενημερώνει την τιμή κατάταξης της.
Στο παράρτημα Δ παρουσιάζονται παραδείγματα κανόνων της Reaction RuleML για το πρωτόκολλο και την στρατηγική, καθώς και η αντίστοιχη κωδικοποίηση τους στο συντακτικό της Jess.
Περίπτωση μεσιτείας Πρωτόκολλο FIPA Brokering Το πρωτόκολλο μεσιτείας της FIPA [FIPA, 2003] είναι αρκετά δημοφιλές.
Σύμφωνα με αυτό, ένας μεσίτης (broker) είναι ένας πράκτορας που προσφέρει μια σειρά από υπηρεσίες διαμεσολάβησης.
Σε ένα τυπικό παράδειγμα διαμεσολάβησης, ένας πράκτορας μπορεί να ζητήσει από έναν μεσίτη να βρει έναν ή περισσότερους πράκτορες που μπορούν να απαντήσουν σε ένα ερώτημα.
Ο μεσίτης, τότε, καθορίζει ένα σύνολο κατάλληλων πρακτόρων, στους οποίους προωθεί το ερώτημα, και επιστρέφει τις απαντήσεις τους πίσω στον αρχικό αιτούντα πράκτορα.
Η χρήση μεσιτών μπορεί να απλοποιήσει σημαντικά την αλληλεπίδρασης των πρακτόρων σε ένα πολυπρακτορικό σύστημα.
Επιπλέον, οι πράκτορες μεσίτες επιτρέπουν σε ένα σύστημα να είναι προσαρμόσιμο σε δυναμικές καταστάσεις.
Σύμφωνα με το πρωτόκολλο, ένας πράκτορας που ονομάζεται Initiator (Εικόνα 5.5) εκκινεί την διαδικασία με ένα μήνυμα που περιλαμβάνει, μία αναφορά στον στόχο, το αίτημα και ένα σύνολο συνθηκών διαμεσολάβησης, όπως, για παράδειγμα, τον μέγιστο αριθμό πρακτόρων στους οποίους θα πρέπει να προωθηθεί το μήνυμα.
Ο μεσίτης επεξεργάζεται το αίτημα και αποφασίζει αν θα δεχθεί ή όχι.
Εφόσον δεχθεί, εντοπίζει πράκτορες, σύμφωνους με την περιγραφή από το μήνυμα διαμεσολάβησης.
Εάν δεν μπορούν να βρεθούν τέτοιοι πράκτορες, ο μεσίτης επιστρέφει ένα μήνυμα τύπου failure-no-match και η επικοινωνία τερματίζεται.
Εναλλακτικά, ο μεσίτης μπορεί να τροποποιήσει τον κατάλογο των πρακτόρων, που ταιριάζουν στις συνθήκες που καθόρισε ο αιτών πράκτορας Initiator, και αρχίζει τις αλληλεπιδράσεις με τους πράκτορες-στόχους (υπό-πρωτόκολλο).
Όταν αυτές οι αλληλεπιδράσεις ολοκληρωθούν (με επιτυχία ή όχι), ο μεσίτης προωθεί την τελική απάντηση Σε αυτό το πλαίσιο υλοποιήθηκε μια περίπτωση μεσιτείας, όπου όλα τα εμπλεκόμενα μέρη ακολουθούν την μεθοδολογία K-SWAN, όπως και στο προηγούμενο παράδειγμα.
Το σενάριο αυτό βασίζεται ελαφρώς σε ένα από τα πιο συχνά χρησιμοποιούμενα σενάρια χρήσης του W3C SWS [He et al., 2004].
Συγκεκριμένα, υιοθετείται η βασική ιδέα ενός ταξιδιωτικού γραφείου που παρέχει τουριστικές υπηρεσίες.
Επομένως, ορίζεται ένα εικονικό ταξιδιωτικό γραφείο, που ονομάζεται VTA για συντομία, το οποίο προσφέρει στους πελάτες του, την δυνατότητα να κάνουν κράτηση για υπηρεσίες διακοπών.
Οι υπηρεσίες αυτές μπορούν να υποστηρίξουν, για παράδειγμα, την κράτηση πτήσεων, ξενοδοχείων και ενοικιάσεων αυτοκινήτων.
Επομένως, τα εμπλεκόμενα μέρη είναι το ταξιδιωτικό γραφείο, ένας πελάτης και ένας αριθμό πρακτόρων στόχων που προσφέρουν υπηρεσίες διακοπών (Εικόνα 5.6).
Ο πελάτης (Initiator) ενδιαφέρεται για κράτηση διακοπών, στοχεύοντας στον καλύτερο συνδυασμό υπηρεσιών και τιμών για τις ανάγκες του.
Επομένως, ανακτάται από την ιδιωτική βιβλιοθήκη του μια κατάλληλη στρατηγική (σε RuleML) με τιμή κατάταξης τουλάχιστον 1.
Στην συνέχεια, αναζητά στην βιβλιοθήκη πρωτοκόλλων, το πρωτόκολλο που δημοσιεύτηκε από τον μεσίτη, προκειμένου να συμμορφωθεί με αυτό (εδώ πρόκειται για το πρωτόκολλο μεσιτείας της FIPA – ρόλος για τον initiator).
Επιπλέον, ανακτά και τον κατάλληλο μετασχηματισμό XSLT από την δημόσια βιβλιοθήκη.
Στην συνέχεια, εκτελείται αυτόματα η διαδικασία για τον συνδυασμό του πρωτοκόλλου με την στρατηγική.
Ακολουθώντας το πρωτόκολλο, ο πελάτης στέλνει ένα μήνυμα τύπου proxy, που περιέχει τις επιθυμητές υπηρεσίες και ορισμένες προϋποθέσεις.
Συγκεκριμένα, ενδιαφέρεται να ταξιδέψει στην Κούβα κατά τη διάρκεια του Ιουλίου και θέλει τουλάχιστον ένα ξενοδοχείο 3*, ένα αεροπορικό εισιτήριο με επιστροφή και μια ταξιδιωτική ασφάλιση.
Όσον αφορά τις συνθήκες, ορίζει τον ελάχιστο αριθμό των πρακτόρων στους οποίους θα πρέπει να διαβιβαστεί το μήνυμα (εδώ τρεις) και έναν διεθνή πάροχο ταξιδιωτικής ασφάλισης.
Στην συνέχεια, περιμένει την απάντηση, είτε θετική (AGREE) είτε αρνητική (REFUSE).
Ο μεσίτης επεξεργάζεται το αίτημα και αποφασίζει να συμφωνήσει ενώ έχει ήδη ανακτήσει το πρωτόκολλο μεσιτείας για τον ρόλο του μεσίτη.
Έτσι, ανακτά τον αντίστοιχο μετασχηματισμό XSLT και μια υποσχόμενη στρατηγική (υψηλή κατάταξη πολλές φορές χρησιμοποιημένη) από την βιβλιοθήκη του.
Στρατηγική και πρωτόκολλο συνδυάζονται και εδώ αυτόματα.
Όντας έτοιμος, ο μεσίτης (VTA) ενημερώνει τον πελάτη και, παράλληλα, εντοπίζει πράκτορες σύμφωνους με την περιγραφή του αιτήματος (Εικόνα 5.7).
Επομένως, μόλις δεχθεί την εργασία, εντοπίζει πέντε πράκτορες παρόχους, που προσφέρουν ό,τι χρειάζεται για να καλύψει τους όρους του πελάτη και αρχίζει να συνεργάζεται μαζί τους.
Οι πάροχοι επικοινωνούν μαζί του και ετοιμάζουν μια προσφορά.
Έχοντας πέντε διαφορετικές προσφορές, ο μεσίτης τις προωθεί στον πελάτη, ο οποίος επιλέγει τελικά την φθηνότερη.
Η αλληλεπίδραση μεταξύ του μεσίτη και των παρόχων είναι μια αναδρομική διαδικασία (υπόπρωτόκολλο).
Δεδομένου ότι ταιριάζουν πολλοί πράκτορες, ο μεσίτης ξεκινά πολλαπλά υπό-πρωτόκολλα εντός του πρωτοκόλλου της μεσιτείας.
Εδώ, ο μεσίτης ξεκινά πέντε εφαρμογές του πρωτοκόλλου FIPA CNet που παρουσιάστηκε παραπάνω.
Σε αυτή την περίπτωση, ο μεσίτης μπορεί είτε να συλλέξει τις απαντήσεις και να τις συνδυάσει σε μία μόνο απάντηση (reply-message-sub-protocol) ή να τις προωθήσει στον πελάτη ξεχωριστά (όπως εδώ).
Διαχείριση Ροής Εργασιών Ηλεκτρονικών Συμβολαίων μέσω Πολι-
Ένα ηλεκτρονικό συμβόλαιο αποτελείται από δύο τουλάχιστον συμμετέχοντες, εδώ πράκτορες, και μια σειρά όρων, καθένας από τους οποίους αντιμετωπίζει κάποια συγκεκριμένη πτυχή της συνολικής συμφωνίας μεταξύ των συμμετεχόντων.
Τυπικά, περιγράφεται ως εξής: EC ≡ {P, C}, όπου P είναι το σύνολο των συμμετεχόντων P ≡ {P1, P2, ..., Pn}, n ≥ 2 και C είναι το σύνολο των όρων του συμβολαίου C ≡ {C1, C2, ..., Cm}.
Πρακτικά, εάν αναλυθεί η πλήρης διαδικασία, διαπραγμάτευσης, σύναψης και εκτέλεσης, ενός ηλεκτρονικού συμβολαίου, αποκαλύπτεται ότι περιλαμβάνει διάφορες εργασίες, οι οποίες μπορούν να αναπαρασταθούν ως ροές εργασιών (workflows) [Chiu et al., 2003].
Σε μια ροή εργασιών οι πληροφορίες εξάγονται από το ίδιο το συμβόλαιο και μεταφέρονται μεταξύ των συμμετεχόντων σύμφωνα με ένα γενικό στόχο, πάντα εντός καθορισμένων χρονικών
Κάθε συμμετέχων κατέχει έναν συγκεκριμένο ρόλο που καθορίζεται στο συμβόλαιο.
Για παράδειγμα, σε μια συναλλαγή ηλεκτρονικού εμπορίου οι συμμετέχοντες μπορούν να ορισθούν είτε ως αγοραστές ή ως πάροχοι / πωλητές.
Παρά το γεγονός ότι υπάρχουν σημαντικές διαφορές μεταξύ των τύπων B2C (Business-to-Consumer, λιανικό εμπόριο) και B2B (Business-to-Business, χονδρεμπόριο) του ηλεκτρονικού εμπορίου, η προτεινόμενη προσέγγιση μπορεί να εφαρμοστεί και στις δύο περιπτώσεις με μικρές διαφορές στην υλοποίηση [Laudon & Traver, 2012;
Ιδιαίτερα για την περίπτωση B2C, η μεθοδολογία όχι μόνο καλύπτει ζητήματα που παραδοσιακά σχετίζονται με αυτή την μορφή του εμπορίου αλλά υιοθετεί και νέα χαρακτηριστικά που συνήθως σχετίζονται με το εμπόριο τύπου B2B, όπως, για παράδειγμα, ποικιλία στρατηγικών τιμολόγησης και αυτοματοποιημένη αξιολόγηση.
Ως εκ τούτου, η παρούσα μελέτη επικεντρώνεται στο ηλεκτρονικό λιανικό εμπόριο, τύπου παρόχου-πελάτη (B2C), προκειμένου να διερευνηθεί πώς η προτεινόμενη μεθοδολογία μπορεί να παρέχει σημαντικά πλεονεκτήματα σε αυτή την μεγάλη αγορά.
Κύκλος Ζωής Ηλεκτρονικών Συμβολαίων και Προκλήσεις Τα ηλεκτρονικά συμβόλαια γίνονται ολοένα και πιο σημαντικά στον χώρο του ηλεκτρονικού εμπορίου, καθώς επιχειρήσεις και ιδιώτες ενδιαφέρονται έντονα για ένα αξιόπιστο εργαλείο που θα διασφαλίζει τις συμφωνίες τους.
Οι τρείς βασικές αρχές ενός ηλεκτρονικού συμβολαίου ορίζονται ως εξής [Krishna & Karlapalem, 2008]:
Ένα ηλεκτρονικό συμβόλαιο προσδιορίζει τον κατάλογο των δραστηριοτήτων που πρέπει να εκτελούνται από τους συμμετέχοντες.  Ένα ηλεκτρονικό συμβόλαιο ισχύει για συγκεκριμένο χρονικό διάστημα, το οποίο επίσης ορίζεται στο συμβόλαιο.  Ένα ηλεκτρονικό συμβόλαιο μπορεί να αποτελείται από υπό-συμβόλαια.
Τα υπόσυμβόλαια θεωρούνται αδύναμες συμβάσεις.
Ειδικότερα, τα πολύπλοκα συμβόλαια μπορούν να αναπαρασταθούν ως εμφωλευμένα, όπου κάθε υπό-συμβόλαιο τοποθετείται μέσα σε ένα άλλο, που βρίσκεται σε υψηλότερο ιεραρχικό επίπεδο.
Τα υπό-συμβόλαια αυτά, συνήθως, δεν μπορούν να υφίστανται ανεξάρτητα παρά μόνο ως μέρος άλλου συμβολαίου.
Ο καθορισμός, όμως, του κύκλου ζωής ενός ηλεκτρονικού συμβολαίου δεν είναι εύκολος, καθώς από εταιρεία σε εταιρεία υπάρχουν διαφορές στον ορισμό του [π.χ.
Ζycus, 2013;
Ωστόσο, υπάρχουν πέντε στάδια που είναι πάντα παρόντα με κάποια μορφή.
Συγκεκριμένα πρόκειται για την σύνταξη (authoring), την διαπραγμάτευση (negotiation), την προετοιμασία (preparation), την εκτέλεση – συμμόρφωση (execution-compliance) και την ανανέωση (renewal), στάδια που υιοθετούνται και από την παρούσα προτεινόμενη μεθοδολογία (Εικόνα 5.8 – BPMN μορφή9).
Κάθε στάδιο του κύκλου ζωής έχει τις δικές του προκλήσεις, που απαιτούν συμβολή διαφόρων τεχνολογιών, προκειμένου το συμβόλαιο να εκπληρώσει τους στόχους του.
Σε αυτό το πλαίσιο, το πρώτο βήμα για την δημιουργία ακριβέστερων και περισσότερο επικερδών συμφωνιών είναι η βέλτιστη διαδικασία σύνταξης.
Για το σκοπό αυτό, απαιτούνται τεχνικές εξόρυξης δεδομένων και κειμένου, προκειμένου να εξαχθούν πληροφορίες από τα παραδοσιακά αδόμητα συμβόλαια [Indukuri & Krishna, 2010].
Στόχος αυτής της προσπάθειας είναι να παρέχονται πρότυπα όρων και γεγονότων, προκειμένου οι συμμετέχοντες να συντάσσουν νέα ηλεκτρονικά συμβόλαια με την επαναχρησιμοποίηση αυτών των πληροφοριών.
Υπάρχουν ήδη διαθέσιμες τεχνολογίες και συστήματα τέτοιου τύπου, όπως τα [Indukuri & Krishna, 2010;
Stadermann et al., 2013], καθιστώντας τις λεγόμενες βιβλιοθήκης όρων (clause libraries) ή βάσεις αναφοράς (reference bases) κατάλληλες για την διατήρηση και την εύκολη πρόσβαση των εξαγόμενων και επαναχρησιμοποιήσιμων δε-
Μια τέτοια βάση είναι το πρότυπο συμβολαίου (contract template) [Chiu et al., 2003], το οποίο στην πραγματικότητα είναι το έγγραφο αναφοράς, πάνω στο οποίο βασίζεται η δημιουργία και η διαπραγμάτευση ενός νέου συμβολαίου.
Το πρότυπο αποτελείται από μια σειρά τυπικών όρων (συμβολαίου), καθένας από τους οποίους καλύπτει μια συγκεκριμένη πτυχή της αλληλεπίδρασης, προσδιορίζοντας τους περιορισμούς που πρέπει να αποτελέσουν αντικείμενο διαπραγμάτευσης.
Για παράδειγμα, ένας αγοραστής υποχρεούται να καταβάλει το αντίτιμο σύμφωνα με τους όρους πληρωμής και ο πάροχος δεν επιτρέπεται να ακυρώσει την παραγγελία μετά την αποδοχή της.
Ένα πολύπλοκος όρος μπορεί να αποτελείται από αρκετούς απλούστερους ή να κάνει αναφορά σε άλλους.
Μετά τον σχεδιασμό και την σύνταξη ενός νέου ηλεκτρονικού συμβολαίου, η επόμενη μεγάλη πρόκληση είναι η διαπραγμάτευση των όρων του.
Σε αυτό το στάδιο, οι συμμετέχοντες υποβάλλουν παρατηρήσεις, σχόλια και διορθώσεις.
Σε αυτό το πλαίσιο, γίνεται για ακόμη μια φορά φανερή, η ανάγκη για κατάλληλα πρωτόκολλα αλληλεπίδρασης και διαπραγμάτευσης [Krishna & Karlapalem, 2008].
Για τα σκοπό αυτό, όπως έχει ήδη προταθεί στην προηγούμενη προσέγγιση του κεφαλαίου, κρίνεται απαραίτητη η ύπαρξη βιβλιοθηκών πρωτοκόλλων, όπου θα διατηρούνται και θα προσφέρονται όλα τα διαθέσιμα δημόσια και ανοικτά πρωτόκολλα.
Τελικά, οι συμμετέχοντες έχοντας όλα τα απαραίτητα στοιχεία, θα εκτελέσουν τις ενέργειες που απαιτούνται και θα διαπραγματευτούν τους όρους του συμβολαίου, φτάνοντας πιθανόν σε κάποια συμφωνία.
Το στάδιο αυτό, όπου οι συμμετέχοντες καταλήγουν σε αμοιβαία αποδεκτούς όρους, ονομάζεται τελική έγκριση (final approval) και, συνήθως, ακολουθείται από την διαδικασία εκτέλεσης χωρίς να λαμβάνονται υπόψη ζητήματα προετοιμασίας του τελικού συμφωνηθέντος συμβολαίου.
Ωστόσο, η παρεμβολή ενός σταδίου προετοιμασίας στον κύκλο ζωής ενός συμβολαίου παρουσιάζει στρατηγικά πλεονεκτήματα [Ζycus, 2013;
Mawji, 2005], καθώς η καλύτερη οριστικοποίηση του οδηγεί σε ομαλότερη και συνεπή εκτέλεση του.
Για το στάδιο αυτό, θα μπορούσε να θεωρηθεί ενδεδειγμένη η χρήση εγκεκριμένων προτύπων, όπου οι όροι θα υπόκεινται σε νομικό έλεγχο.
Ακόμη, θα μπορούσαν να συμπεριληφθούν και διαδικασίες για την χρήση και τον έλεγχο ψηφιακών υπογραφών ενώ τα συμφωνηθέντα και υπογεγραμμένα ηλεκτρονικά συμβόλαια θα μπορούσαν να αποθηκεύονται ηλεκτρονικά για μελλοντική χρήση, δημιουργώντας ένα ιστορικό.
Σε αυτό το σημείο, ανεξάρτητα συστήματα, όπως αυτό της πληρωμής, θα μπορούσαν να ενημερώνονται, αποδεσμεύοντας τους πράκτορες από τυπικές διαδικασίες.
Μια συμφωνία μεταξύ εταίρων είναι νομικά έγκυρη, εάν ικανοποιεί τις απαιτήσεις ενός συμβολαίου, γεγονός που αποδεικνύεται από την συμμόρφωσή τους με τους όρους του.
Επομένως, στο στάδιο της εκτέλεσης και συμμόρφωσης απαιτείται πλήρης συντονισμός όλων των δραστηριοτήτων εκτέλεσης, ικανοποίηση όρων, παρακολούθηση προόδου του συμβολαίου, καθώς και παρακολούθηση όλων των γεγονότων, που συνδέονται με αυτό, προκειμένου να εντοπίζονται κρίσιμα γεγονότα.
Μέχρι στιγμής, η πλειονότητα των προσεγγίσεων, που ασχολούνται με την παρακολούθηση των ηλεκτρονικών συμβολαίων επικεντρώνονται στην παραβίαση όρων [Krishna & Karlapalem, 2008].
Παρά το γεγονός ότι το ζήτημα αυτό είναι καίριας σημασίας, παραλείπεται ένα άλλο επίσης σημαντικό, η αξιολόγηση της απόδοσης [Hensher & Stanley, 2008].
Πόσο πολύτιμο ήταν το συμβόλαιο τελικά ή πόσο πραγματικά κόστισε είναι δύο από τα πολλά ερωτήματα που πρέπει να απαντηθούν.
Επομένως, η απόδοση, η συμμόρφωση και η ανάλυση των παραδοτέων είναι σημαντικά ζητήματα, καθώς επιτρέπουν στους εταίρους να βελτιώσουν την στρατηγική τους και να ελαχιστοποιήσουν τους κινδύνους.
Ωστόσο, η σημερινή περιορισμένη ενσωμάτωση σχετικών μετρικών και μετρήσεων εξακολουθεί να είναι ένα ανοικτό ερευνητικό ζήτημα.
Το τελευταίο αλλά όχι το λιγότερο σημαντικό στάδιο του κύκλου ζωής ενός ηλεκτρονικού συμβολαίου αναφέρεται σε ζητήματα ανανέωσης.
Μερικές φορές οι εταίροι συμφωνούν κατά την διάρκεια της διαδικασίας διαπραγμάτευσης, την αυτόματη παράταση (ανανέωση) ή τον τερματισμό των ηλεκτρονικών συμβολαίων ενώ άλλες συμφωνούν να επαναδιαπραγματευθούν το συμβόλαιο μετά την λήξη του.
Ωστόσο, σε όλες τις περιπτώσεις το κεντρικό σημείο είναι ότι η απόφαση αυτή λήφθηκε κατά την διάρκεια της διαπραγματευτικής διαδικασίας.
Φυσικά, οι μηχανισμοί για την σύλληψη απρόβλεπτων γεγονότων κατά την διάρκεια της διαδικασίας ανανέωσης θα πρέπει να περιλαμβάνονται σε αυτό το τελικό στάδιο, όμως η απόφαση πρέπει να λαμβάνεται κατά την διαπραγμάτευση.
Επομένως, μετά την ανάλυση των βασικών προκλήσεων στον κύκλο ζωής ενός ηλεκτρονικού συμβολαίου, είναι σαφές ότι υπάρχουν δύο κρίσιμα σημεία, η διαπραγμάτευση και η αξιολόγηση των υποδιαδικασιών που εμπλέκονται.
Δεδομένου ότι ένα ηλεκτρονικό συμβόλαιο μπορεί να διαιρεθεί σε στάδια ανταλλαγής πληροφοριών και διαπραγμάτευσης, δημιουργώντας ροές εργασιών, η παρούσα μεθοδολογία επικεντρώνεται κυρίως στα στάδια της διαπραγμάτευσης και της αξιολόγησης.
Για τα υπόλοιπα υιοθετούνται υπάρχουσες ευρέως αποδεκτές προσεγγίσεις, διαμορφώνοντας τελικά μια ολοκληρωμένη λύση για την διαχείριση ηλεκτρονικών συμβολαίων.
Πιο συγκεκριμένα, η προτεινόμενη προσέγγιση βασίζεται στην φιλοσοφία ότι ένα ηλεκτρονικό συμβόλαιο μπορεί να διαιρεθεί σε ομάδες εργασιών, οι οποίες αποτελούν ειδικές κατηγορίες, όπως το στάδιο στο οποίο οι εταίροι διαπραγματεύονται τους όρους της συμφωνίας, μέσω υποβολής προσφορών και αποδοχής.
Επιπλέον, ένα ηλεκτρονικό συμβόλαιο ορίζεται, στην πραγματικότητα, από ένα σύνολο κανόνων (όρων), όπως ακριβώς και η στρατηγική ενός ευφυούς πράκτορα.
Έτσι, η συσχέτιση μεταξύ ηλεκτρονικών συμβολαίων και ευφυών πρακτόρων γίνεται σαφής.
Άλλωστε, κανένα άλλο πρόγραμμα λογισμικού δεν είναι σε θέση να ενεργεί όπως οι πράκτορες.
Η τεχνολογία των ευφυών πρακτόρων είναι εμπνευσμένη από τον ανθρώπινο τρόπο σκέψης και δράσης, έτσι η φυσική κατηγοριοποίηση ενός συμβολαίου σε στάδια μπορεί να συνδυαστεί εύκολα και φυσικά με τις πολιτικές και τα πρωτόκολλα των πρακτόρων.
Μετά την μελέτη του κύκλου ζωής ενός ηλεκτρονικού συμβολαίου κατέστη σαφές ότι κάθε συμβόλαιο διαιρείται σε στάδια και κάθε στάδιο (stage), με την σειρά του, διαιρείται σε υποστάδια (substages).
Δεδομένου ότι ένα από τα κύρια σημεία εστίασης της προτεινόμενης μεθοδολογίας είναι η διαπραγμάτευση, διαπιστώθηκε ότι η διαδικασία αυτή είναι στην πραγματικότητα ένα σύνολο κύριων στόχων (mainstream goals), καθένας από τους οποίους περιέχει μια σειρά εργασιών (υπό-διαδικασιών).
Με την σειρά της, κάθε εργασία (task) περιέχει, όπως είναι φυσικό, μια σειρά από βήματα (steps).
Επομένως, προκύπτει μια ιεραρχική αναπαράσταση, όπου καθορίζονται ποια βήματα απαιτούνται για να εκτελεστεί μια εργασία, η οποία αποτελεί προϋπόθεση για έναν στόχο υψηλότερου επιπέδου.
Ειδικότερα, ένα ηλεκτρονικό συμβόλαιο ορίζεται στην προτεινόμενη προσέγγιση, ως μια πλειάδα EC ≡ {P, C, NG, G, NTSK, TSK, NSTP, STP, CSTP, CONDSTP}, όπου P είναι το σύνολο των συμμετεχόντων P ≡ {P1, P2, ..., Pn}, n≥2, C είναι το σύνολο των όρων (clauses) C ≡ {C1, C2, ..., Cm}, NG είναι ο αριθμός των στόχων (goals), G είναι το σύνολο των στόχων G ≡ {gs, 1≤s≤NG}, NTSK είναι ο αριθμός των εργασιών (tasks) που απαιτούνται για κάθε στόχο NTSK ≡ {sNTSK, 1≤s≤NG} (π.χ. sNTSK είναι ο αριθμός εργασιών για τον sο στόχο), TSK είναι το σύνολο των εργασιών για κάθε στόχο TSK ≡ {stskl, 1≤l≤NTSK: gsG} (π.χ. stskl είναι το σύνολο των l εργασιών για τον sο στόχο), NSTP είναι ο αριθμός των βημάτων (steps) κάθε εργασίας NSTP ≡ {sNSTP l, 1≤l≤NTSK, 1≤s≤NG } (π.χ. sNSTP l είναι ο αριθμός των βημάτων για την lη εργασία του sου στόχου), STP είναι το σύνολο των βημάτων κάθε εργασίας STP ≡ {sstpkl, 1≤k≤ sNSTPl: gsG, stskl TSK} (π.χ. sstpkl είναι το σύνολο των k βημάτων για την lη εργασία του sου στόχου), CSTP είναι το σύνολο των όρων του συμβολαίου για κάθε βήμα CSTP ≡ {sCkl: sstpklSTP  sCklC  (s,l,k,s’,l’,k’, sCkls’Ck’l’=  (s=s’  k=k’  l=l’))} και CONDSTP είναι το σύνολο των συνθηκών μετάβασης (transition conditions) CONDSTP ≡ {scndkl: sstpklSTP}, οι οποίες αποτελούν μέρος της εσωτερικής ιδιωτικής πολιτικής του πράκτορα και αποφασίζουν εάν η συναλλαγή μπορεί να μεταβεί από το ένα βήμα στο επόμενο.
Σε γενικές γραμμές, οι στόχοι αντιπροσωπεύουν τα κύρια ζητήματα του ηλεκτρονικού συμβολαίου ως ολότητα, παράδειγμα η εδραίωση εμπιστοσύνης, ενώ οι εργασίες αφορούν τα επιμέρους αντικείμενα διαπραγμάτευσης, όπως είναι η επαλήθευση της ταυτότητας.
Επομένως, κάθε στόχος απαιτεί ένα σύνολο εργασιών (αντικείμενα διαπραγμάτευσης).
Τα βήματα, από την άλλη πλευρά, αντιπροσωπεύουν τις επιμέρους μεμονωμένες δράσεις, όπως η λήψη διαπιστευτηρίων.
Έτσι, κάθε συγκεκριμένη εργασία απαιτεί ένα σύνολο βημάτων, προκειμένου να ολοκληρωθεί.
Οι μεταβάσεις μεταξύ στόχων και εργασιών είναι διαδοχική αλλά οι μεταβάσεις μεταξύ των βημάτων των εργασιών δεν είναι απαραίτητο να είναι διαδοχικές.
Η υπόθεση αυτή στηρίζεται στο γεγονός ότι η διαπραγμάτευση ενός ηλεκτρονικού συμβολαίου θεωρείται επιτυχής εάν και μόνο εάν κάθε στόχος (ζήτημα) ολοκληρώθηκε επιτυχώς.
Οι συμμετέχοντες, δηλαδή, πρέπει να προχωρήσουν σταδιακά από το πρώτο ζήτημα διαπραγμάτευσης (πρώτος στόχος) έως το τελευταίο.
Δεδομένου ότι οι εργασίες μπορούν να θεωρηθούν ακόμη και υπό-συμβόλαια, η παραπάνω διατύπωση ισχύει επίσης και για αυτές.
Επομένως, τόσο οι στόχοι όσο και οι εργασίες τους θα πρέπει να εκτελούνται διαδοχικά.
Από την άλλη πλευρά, τα βήματα αντιπροσωπεύουν τις επιμέρους δράσεις, γεγονός που σημαίνει ότι θα μπορούσαν να αναφέρονται σε μια προαιρετική ή ακόμα και επαναλαμβανόμενη δράση.
Για το λόγο αυτό, τα βήματα (για κάθε εργασία) εκτελούνται διαδοχικά αλλά όχι αυστηρά, επιτρέποντας σε οποιοδήποτε από αυτά να παραλείπεται
Τέλος, είναι προφανές ότι οι συμμετέχοντες στην διαπραγμάτευση μπορούν να διαφωνήσουν σε οποιοδήποτε σημείο, τερματίζοντας την διαπραγμάτευση χωρίς συμφωνία.
Έτσι, προκειμένου να επέλθει συμφωνία και να εκτελεστεί τελικά το ηλεκτρονικό συμβόλαιο πρέπει κάθε στόχος και, κατά συνέπεια, κάθε εργασία να είναι επιτυχής.
Με άλλα λόγια, κάθε υποχρεωτικό βήμα πρέπει να είναι επιτυχές, δηλαδή πρέπει να ικανοποιείται το σύνολο των όρων (clauses) και των συνθηκών (conditions) κάθε βήματος.
Σε αυτό το πλαίσιο, η προτεινόμενη μεθοδολογία περιλαμβάνει σε κάθε εργασία (Εικόνα 5.9) τρεις τύπους βημάτων, (α) την ανταλλαγή των όρων isCkl του πράκτορα Pi στον πράκτορα Pj, (β) την αξιολόγηση των όρων isCkl με την χρήση των προσωπικών δεδομένων sDkl του πράκτορα Pj και (γ) την ανταλλαγή των αποτελεσμάτων / συμπερασμάτων jsEkl = (isCkl  jsDkl) του βήματος (β) από τον πράκτορα Pj πίσω στον πράκτορα Pi, προκειμένου να ελεγχθεί εάν πληρούνται οι όροι του συμβολαίου, ούτως ώστε η ροή εργασιών της διαπραγμάτευσης να συνεχιστεί ή όχι.
Στην περίπτωση ασυμβίβαστης διαφωνίας, η διαπραγμάτευση τερματίζεται, ωστόσο, στην περίπτωση επιλύσιμων διαφορών, οι συμμετέχοντες μπορούν, ανάλογα με τις προσωπικές τους πολιτικές, να επαναδιαπραγματευθούν την τρέχουσα εργασία ή ακόμη και τον τρέχοντα στόχο.
Ωστόσο, κάθε φορά που ένας στόχος ολοκληρώνεται με επιτυχία, δεν θα γίνεται επαναδιαπραγμάτευση του.
Η απόφαση μετάβασης της ροής εργασιών λαμβάνεται από τον παρακάτω αλγόριθμο, που ονομάζεται TDA: then if k=NlSTP /*εάν αυτό είναι το τελευταίο βήμα της εργασίας*/ then if l=sNTSK /*εάν αυτή είναι η τελευταία εργασία του στόχου*/ then ss+1; l1; k1 /*τότε πήγαινε στον επόμενο στόχο*/ else ll+1; k1 /*διαφορετικά πήγαινε στην επόμενη εργασία*/ else kk+1 /*ή πήγαινε στο επόμενο βήμα*/
Κύριοι Διαπραγματευόμενοι Στόχοι Σε κάθε περίπτωση μια αυτοματοποιημένη διαδικασία θα πρέπει να διασφαλίζει την αποφυγή απάτης και κακόβουλων ενεργειών ενώ παράλληλα θα πρέπει να προωθεί την επίτευξη της μέγιστης ωφέλειας για κάθε εμπλεκόμενο.
Σύμφωνα με υπάρχουσες έρευνες, κάθε συμμετέχοντας για να μεγιστοποιήσει την ωφέλεια του, πρέπει να επικεντρωθεί σε ένα διαφορετικό σύνολο όρων κατά τη διάρκεια της διαπραγμάτευσης [IACCM, 2012;
Έτσι, αυτές οι έρευνες καταδεικνύουν, μεταξύ άλλων, τα πλέον διαπραγματευόμενα ζητήματα, υποδεικνύοντας τι πρέπει και τι δεν πρέπει να διαπραγματεύεται.
Για παράδειγμα, ο οικονομικός αντίκτυπος είναι ένα θέμα που κυριαρχεί στις διαπραγματεύσεις, ωστόσο, το μεγαλύτερο ζήτημα σήμερα είναι η κατανομή του ρίσκου.
Από την άλλη πλευρά, διαφωνίες σχετικά με την αποδοχή ή την παράδοση είναι η κύρια αιτία διαφορών και ενστάσεων.
Έτσι, οι συμμετέχοντες, προκειμένου να προστατευτούν από τις ενδεχόμενες συνέπειες, ενδιαφέρονται έντονα για το ποιος θα είναι υπεύθυνος σε περίπτωση αποτυχίας.
Σε αυτό το πλαίσιο, ο Πίνακας 5.2(α) παρουσιάζει τα πέντε πιο συχνά αντικείμενα διαπραγμάτευσης κατά την διάρκεια των τελευταίων πέντε ετών.
Πίνακας 5.2. (α) Τα πλέον διαπραγματευόμενα ζητήματα – (β) προτεινόμενα ζητήματα. (α) Τα πλέον διαπραγματευόμενα ζητήματα (β) Τα προτεινόμενα ζητήματα διαπραγμάτευσης
Περιορισμός ευθύνης (Limitation of liability) 1.
Διαχείριση αλλαγών (Change management)
Αποζημίωση (Indemnification) 2.
Ευθύνες εταίρων (Responsibilities of the parties)
Τιμή, Χρέωση (Price, Charge) 3.
Απόδοση, Εγγυήσεις (Performance, Guarantees)
Πνευματική ιδιοκτησία (Intellectual property) 4.
Περιορισμός ευθύνης (Limitation of liability)
Πληρωμή (Payment) 5.
Παράδοση, Αποδοχή (Delivery, Acceptance)
Επίλυση Διαφορών (Dispute Resolution)
Τιμή, Χρέωση (Price, Charge)
Πνευματική ιδιοκτησία (Intellectual property)
Ωστόσο, αυτή η θεώρηση διαστρεβλώνει την εμπειρία που αποκτούν οι άνθρωποι από τις παραδοσιακές εμπορικές σχέσεις, καθώς κάθε εμπλεκόμενος σε μια τέτοια σχέση γνωρίζει ότι πρέπει να επενδυθεί προσπάθεια στις διαπραγματεύσεις θεμάτων, όπως η διαχείριση αλλαγών, οι ευθύνες και οι εγγυήσεις.
Σε αυτό το πλαίσιο, η παρούσα προσέγγιση προτείνει μια ροή εργασιών για την αποτελεσματική διαπραγμάτευση των ηλεκτρονικών συμβολαίων, η οποία βασίζεται σε δέκα ζητήματα-στόχους, με μια συγκεκριμένη σειρά διαπραγμάτευσης (Πίνακας 5.2(β)).
Παρά το γεγονός ότι η συγκεκριμένη προτεινόμενη σειρά διαπραγματευόμενων όρων θεωρείται πιο παραγωγική, όσον αφορά την υποστήριξη επιτυχημένων σχέσεων, οι εταίροι μπορούν να παραλείψουν ή ακόμη και να προσθέσουν περισσότερους στόχους.
Σε αυτό το σημείο, πρέπει να σημειωθεί ότι τα περισσότερο, μέχρι σήμερα, διαπραγματευόμενα ζητήματα εξακολουθούν να θεωρούνται σημαντικά, όμως όχι τόσο σημαντικά όσο πιστεύεται.
Ροή Εργασίας της Διαπραγμάτευσης Η προτεινόμενη ροή εργασίας της διαπραγμάτευσης περιλαμβάνει έντεκα ζητήματα και όχι δέκα, όπως παρουσιάστηκε στον Πίνακα 5.2(β), καθώς συμπεριλαμβάνεται ένα επιπλέον εξαιρετικά σημαντικό ζήτημα, αυτό της εμπιστοσύνης (trust).
Η φύση της εμπιστοσύνης εξακολουθεί να είναι ένα υπό έρευνα ζήτημα, το οποίο μελετάται διεξοδικά στο επόμενο (έκτο) κεφάλαιο της διατριβής, ωστόσο συνήθως αντιμετωπίζεται ως πρόβλημα αδειοδότησης (authorization) και ελέγχου πρόσβασης (access control) [Lee et al., 2007].
Σε αυτό το πλαίσιο, προκειμένου να εξασφαλιστεί ότι όλοι οι συμμετέχοντες είναι όντως αξιόπιστοι, η προτεινόμενη προσέγγιση ορίζει ως πρώτο διαπραγματευόμενο όρο, την εδραίωση εμπιστοσύνης (trust establishment).
Αυτός ο πρώτος διαπραγματευόμενος όρος θα πρέπει να περιλαμβάνει, μεταξύ άλλων, εργασίες επαλήθευσης ταυτότητας (identity verification tasks), εργασίες επικύρωσης πιστοποιητικών (certification validation tasks) ή ακόμη και εργασίες ελέγχου συστάσεων (recommendations checking tasks), ανάλογα με την πολιτική των συμμετεχόντων.
Για το σκοπό αυτό, προτείνεται μια προσέγγιση, που βασίζεται στις πολιτικές (policies) και τα διαπιστευτήρια (credentials digital certificates).
Συνήθως, τα διαπιστευτήρια είναι επαρκή, όταν ο πράκτορας πείθεται είτε για την ταυτότητα του άλλου πράκτορα ή για την ιδιότητα του ως μέλους μιας αρκετά αξιόπιστης ομάδας, όπως ο μη κερδοσκοπικός οργανισμός Better Business Bureau10.
Επομένως, οι πράκτορες που εμπλέκονται στην διαπραγμάτευση του ηλεκτρονικού συμβολαίου πρέπει να συμμετάσχουν, αρχικά, σε μια εργασία (task) επαλήθευσης ταυτότητας, όπου θα ανταλλάξουν τα διαπιστευτήρια τους, προκειμένου να εμπιστευτούν ο ένας τον άλλο.
Στην Εικόνα 5.10 παρουσιάζεται μια επισκόπηση της προτεινόμενης ροής εργασίας της μεθοδολογίας.
Αρχικά, οι συμμετέχοντες πρέπει να ασχοληθούν με την εδραίωση της εμπιστοσύνης και έπειτα με τα δέκα προς διαπραγμάτευση ζητήματα, έτσι ώστε τελικά να καταλήξουν σε μια κοινή αποδοχή.
Σε αυτό το σημείο, το ηλεκτρονικό συμβόλαιο εγκρίνεται και αποστέλλονται όλα τα επιπλέον απαραίτητα δεδομένα, τα οποία μπορούν να περιλαμβάνουν, μεταξύ άλλων, ανάλογα με το πεδίο εφαρμογής του συμβολαίου, τεχνικές λε10 Better Business Bureau Organization, ιστοσελίδα: http://www.bbb.org/. πτομέρειες, διαπιστευτήρια και στοιχεία πρόσβασης.
Επομένως, οι συμμετέχοντες πράκτορες εμπλέκονται σε εργασίες, που σχετίζονται με την ανάγνωση της συμφωνίας και το κλείσιμο της διαπραγμάτευσης.
Ωστόσο, όπως έχει ήδη αναφερθεί, κατά τη διάρκεια της διαπραγμάτευσης μπορεί να εμφανιστεί οποιαδήποτε εξαίρεση ή ασυμβίβαστη διαφωνία σε οποιονδήποτε από τους συμμετέχοντες.
Σε αυτή την περίπτωση, η κανονική λειτουργία της εκτέλεσης της ροής εργασίας θα διαταραχθεί και ως εκ τούτου η διαπραγμάτευση της σύμβασης θα τερματιστεί.
Μια σύντομη παρουσίαση της ροής εργασίας που αφορά τις εργασίες (task workflow) απεικονίζεται στην Εικόνα 5.11.
Οι ίδιες αρχές μπορούν να υιοθετηθούν και για την ροή εργασίας που αφορά τους στόχους (goal workflow).
Διαχείριση της Αξιολόγησης Αξιολόγηση είναι η συστηματική συλλογή και αξιολόγηση των πληροφοριών που παρέχουν χρήσιμα στοιχεία σχετικά με κάποιο αντικείμενο.
Τις περισσότερες φορές, η διατύπωση γνώμης (feedback) βοηθά στην λήψη αποφάσεων, η σχέση, όμως, μεταξύ της αξιολόγησης και των επιπτώσεων της δεν είναι απλή.
Μελέτες που φαίνονται να είναι σημαντικές μερικές φορές αποτυγχάνουν να επηρεάσουν βραχυπρόθεσμες αποφάσεις, ενώ μελέτες που φαίνεται αρχικά να μην έχουν καμία επίδραση, πιθανόν να έχουν μια καθυστερημένη επίδραση όταν προκύπτουν περισσότερο κατάλληλες συνθήκες.
Ωστόσο, ο κύριος στόχος της αξιολόγησης θα πρέπει να είναι η ενίσχυση της λήψης αποφάσεων ή της διαμόρφωσης πολιτικής, μέσω της παροχής σχετικών εμπειριών.
Στο πλαίσιο της διαχείρισης ηλεκτρονικών συμβολαίων, η αξιολόγηση της απόδοσης συνήθως αναφέρεται σε θέματα εκτέλεσης του συμβολαίου, όπως τήρηση του χρονοδιαγράμματος ή η παρεχόμενη ποιότητα.
Η επίτευξη μιας δεδομένης εργασίας, που μετράται σε σχέση με προκαθορισμένα γνωστά πρότυπα ακρίβειας, πληρότητας και ταχύτητας, είναι εξαιρετικά σημαντική υπόθεση.
Ωστόσο, στην παρούσα προτεινόμενη προσέγγιση, θεωρείται ότι υπάρχει ανάγκη για αξιολόγηση, όχι μόνο για την εκτέλεση αλλά και για τις στρατηγικές διαπραγμάτευσης, που χρησιμοποιούνται από τους συμμετέχοντες πράκτορες.
Επομένως, αναγνωρίζεται η ανάγκη για δύο διακριτές αξιολογήσεις, την αξιολόγηση της στρατηγικής και την αξιολόγηση της απόδοσης.
Κάθε φορά που διαπραγματεύεται ένα ηλεκτρονικό συμβόλαιο, προκύπτει ένα σημαντικό ζήτημα σχετικά με τον τρόπο που θα μετρηθεί η επιτυχία της διαπραγμάτευσης.
Ολοένα και πιο συχνά, οι συμμετέχοντες στην διαπραγμάτευση αναρωτιούνται πώς μπορούν να αξιολογούν την διαπραγματευτική τους ικανότητα, δεδομένης της επίδρασης που έχει αυτή στο τελικό όφελος τους.
Επομένως, σε κάθε διαπραγμάτευση, όχι μόνο πρέπει να καθορίζονται όρια από όλους τους συμμετέχοντες αλλά πρέπει επίσης να είναι μετρήσιμοι και οι στόχοι, προκειμένου να προσδιοριστεί η επίτευξη τους ή μη.
Για το σκοπό αυτό, όπως περιγράφηκε ήδη, η διαδικασία διαπραγμάτευσης των όρων μπορεί να αναπαρασταθεί ως διαπραγμάτευση δέκα κύριων στόχων.
Αυτοί οι στόχοι είναι μετρήσιμοι, υπό την έννοια ότι κάθε συμμετέχοντας μπορεί να κερδίσει, να χάσει ή να καταλήξει κάπου ενδιάμεσα.
Δεδομένου ότι η μέτρηση ενός στόχου έχει να κάνει με το πόσο ικανοποιημένος είναι ο κάθε συμμετέχοντας με το αποτέλεσμα και η ικανοποίηση είναι ένα καθαρά υποκειμενικό ζήτημα, προτείνεται η χρήση μιας ποιοτικής κλίμακας με πέντε τιμές, απαράδεκτο, μη ικανοποιητικό, ασήμαντο, ικανοποιητικό και εξαιρετικό.
Κάθε συμμετέχοντας, μετά το τέλος της διαπραγμάτευσης, θα είναι σε θέση να βαθμολογήσει κάθε αποτέλεσμα χρησιμοποιώντας μία από αυτές τις τιμές.
Για το σκοπό αυτό, προτείνεται η χρήση ενός ιδιωτικού χώρου αποθήκευσης, όπου κάθε πράκτορας θα αποθηκεύει τις αξιολογήσεις (ratings) του, μαζί με βάρη (weight factors) και εκτιμήσεις (estimations) για κάθε περίπτωση διαπραγμάτευσης, δημιουργώντας έτσι μια βάση δεδομένων με τις προηγούμενες ενέργειες του και τα αποτελέσματά τους.
Ωστόσο, πριν τον καθορισμό του τύπου αξιολόγησης, είναι σημαντικό να διευκρινιστεί τι πρέπει να βαθμολογηθεί.
Όπως αναφέρθηκε ήδη, η διαπραγμάτευση είναι μια διαδικασία και, ως εκ τούτου, θα μπορούσε να βαθμολογηθεί.
Όμως, η βαθμολόγηση μόνο της τελικής έκβασης της διαπραγμάτευσης δεν είναι αρκετή.
Η αποτυχία στην διαπραγμάτευση ενός συμβολαίου, δεν σημαίνει απαραίτητα ότι χάθηκε κάθε διαπραγματευόμενος στόχος.
Μια κακή απόφαση θα μπορούσε να καταστρέψει τις προσδοκίες του πράκτορα, πιθανόν, όμως, πολλές άλλες επιλογές να ήταν σωστές.
Επομένως, είναι ζωτικής σημασίας για την οικοδόμηση μιας συμπεριφοράς, που θα οδηγεί σε επιτυχείς διαπραγματεύσεις, να καθοριστεί τι ήταν σωστό και τι όχι.
Σε αυτό το πλαίσιο, προτείνεται ένας τύπος, που λαμβάνει υπόψη όχι μόνο το τελικό αποτέλεσμα αλλά και κάθε διαπραγματευόμενο στόχο.
Πίνακας 5.3.
Συσχέτιση ποιοτικών τιμών σε ποσοτικές.
Επιπλέον, προκειμένου η αξιολόγηση να είναι πλήρως εξατομικευμένη, κάθε πράκτορας πρέπει να είναι σε θέση να καθορίσει πόσο σημαντικός είναι κάθε στόχος για αυτόν.
Για το σκοπό αυτό, αρχικά, προτείνεται η συσχέτιση κάθε ποιοτικής τιμής με έναν αριθμό (Πίνακας 5.3), όπου οι τιμές κυμαίνονται από -2 (απολύτως αρνητική) έως +2 (απολύτως θετική), με το 0 να υποδεικνύει την ασημαντότητα.
Χρησιμοποιούνται τόσο θετικές όσο και αρνητικές τιμές, ώστε να αντικατοπτρίζουν το κέρδος ή την απώλεια ενός πράκτορα, όπως συμβαίνει και στις διαπραγματεύσεις του φυσικού κόσμου.
Στην συνέχεια, εισάγονται βάρη στον τύπο αξιολόγησης (εξίσωση 5.1), προκειμένου οι πράκτορες να ορίσουν τι είναι περισσότερο ή λιγότερο σημαντικό για αυτούς σε μια συγκεκριμένη κατάσταση.
Η εξίσωση 5.1 αναπαριστά την τελική τιμή απόδοσης (EV) για μια διαπραγμάτευση, με βάση τις αξιολογήσεις τόσο για την συνολική διαδικασία (Overall Rating OR) όσο και για κάθε επιμέρους στόχο (Goal Rating GR), όπως είναι η διαπραγμάτευση της πληρωμής.
Οι μεταβλητές CFO και CFG αντιπροσωπεύουν τους παράγοντες κατηγορίας που ορίζονται από τον χρήστη (CF) και αντιπροσωπεύουν, αντίστοιχα, την σημαντικότητα (βάρος) του συνολικού αποτελέσματος και την σημαντικότητα (βάρος) του γεγονός ότι ένα συνολικό αποτέλεσμα είναι στην πραγματικότητα ο συνδυασμός όλων των επιμέρους αποτελεσμάτων (αποτελέσματα στόχων).
Με άλλα λόγια, οι μεταβλητές CFO και CFG ορίζουν τι είναι πιο σημαντικό για τον χρήστη, η τελική έκβαση ή τα συστατικά του.
Επιπλέον, κάθε επιμέρους συστατικό (αποτέλεσμα στόχου) θα πρέπει επίσης να αντικατοπτρίζει την σημαντικότητα του για τον πράκτορα, επομένως, πρέπει να καθοριστούν περισσότερα βάρη (Goal Factors GF).
Πρακτικά, για να διαπραγματευτούν αποδοτικά οι άνθρωποι (και οι πράκτορες) πρέπει να μάθουν να επιλέγουν καλές στρατηγικές διαπραγμάτευσης, μεγιστοποιώντας την τιμή της αποδοτικότητάς τους (EV).
Συνήθως, σε μια διαπραγμάτευση η μία πλευρά κερδίζει και η άλλη χάνει, μερικές φορές κερδίζουν και οι δύο πλευρές ενώ σπανίως χάνουν και οι δύο πλευρές.
Αυτό που καθορίζει ποιος κερδίζει είναι η στρατηγική.
Στο μεγαλύτερο μέρος της αντίστοιχης βιβλιογραφίας συναντώνται δύο στρατηγικές, μια συνεργατική (cooperative, integrative), που βασίζεται στον ενδιαφέρον (interest-based), και μια ανταγωνιστική (competitive, distributive), που βασίζεται στις θέσεις (positional-based) του πράκτορα.
Ωστόσο, από μια εξαιρετικά ανταγωνιστική στρατηγική μέχρι μια εξαιρετικά συνεργατική, υπάρχουν πολλές άλλες στο ενδιάμεσο.
Επομένως, η επιλογή της κατάλληλης από τον πράκτορα είναι ζωτικής σημασίας για την επιτυχία του.
Βέβαια, κάθε πράκτορας δεν χρησιμοποιεί πάντα μια μοναδική στρατηγική κατά τη διάρκεια της διαπραγμάτευσης, δεδομένου ότι είναι πιθανό να χρησιμοποιήσει διαφορετικές στρατηγικές διαπραγμάτευσης για διαφορετικά τμήματα διαπραγμάτευσης ή στόχους.
Το ερώτημα, επομένως, είναι ποιος είναι ο βέλτιστος συνδυασμός στρατηγικών διαπραγμάτευσης και πώς μπορεί να βρεθεί.
Για το σκοπό αυτό, ακολουθώντας την παραπάνω φιλοσοφία του αποθετηρίου αξιολογήσεων (rating repository) προτείνεται, όπως και στην προσέγγιση K-SWAN (ενότητα 5.1), η χρήση ενός ιδιωτικού χώρου αποθήκευσης στρατηγικών, όπου κάθε πράκτορας ονομάζει και αποθηκεύει τις ιδιωτικές στρατηγικές του, μαζί με μια βαθμολογία (rank).
Αυτή η βαθμολογία, rank (R), είναι ο βαθμός που δίνει ο πράκτορας σε κάθε στρατηγική που χρησιμοποίησε.
Σε αυτό το πλαίσιο, μια πρόσφατα αποθηκευμένη στρατηγική θα λάβει 0 βαθμούς ενώ κάθε φορά που μια στρατηγική χρησιμοποιείται, ο βαθμός του χρήστη (GR), που δίνεται σε αυτή, προστίθεται στην συνολική τιμή της βαθμολογίας της (R+=GR), προσδιορίζοντας την κατάταξη της στο σύνολο των διαθέσιμων στρατηγικών.
Όπως είναι φανερό, η κατάταξη (βαθμολογία) μιας στρατηγικής μπορεί να μειωθεί, καθώς η μεταβλητή GR θα μπορούσε να είναι αρνητική (GR[-2,2]).
Επομένως, ένας απλός αλγόριθμος, που θα χρησιμοποιεί τόσο τις πληροφορίες του αποθετηρίου αξιολογήσεων όσο και του αποθετηρίου στρατηγικών, που παρουσιάστηκαν παραπάνω, θα μπορούσε να συμβάλει στην επιλογή της καταλληλότερης, κατά περίπτωση, στρατηγικής.
Ένας πράκτορας θα μπορούσε να χρησιμοποιήσει μια ποικιλία τέτοιων αλγορίθμων για να οικοδομήσει την διαπραγματευτική του συμπεριφορά, ανάλογα με την προσωπική αντίληψη του χρήστη του.
Σε αυτό το πλαίσιο, προτείνεται ένας αλγόριθμος (SDA), ο οποίος είναι απλός αλλά εγγυάται ότι θα υιοθετεί πάντοτε την πλέον υποσχόμενη στρατηγική για κάθε στόχο διαπραγμάτευσης.
Φυσικά, αυτό δεν σημαίνει ότι πράκτορας θα κερδίσει πάντα, θα έχει, όμως, πάντα την καλύτερη δυνατή στρατηγική μεταξύ των διαθέσιμων ιδιωτικών στρατηγικών του.
Define threshold x. /*αναφέρεται στο πόσο σημαντικός πρέπει να είναι ένας όρος που έχει ήδη διαπραγματευτεί (GF)*/ Find similar-case with max EV. /*το max EV αναπαριστά την καλύτερη μέχρι στιγ-
If goal equals new goal /*εάν έχει διαπραγματευτεί παρόμοιος στόχος, τότε η στρατηγική του πρέπει να ελεγχθεί*/
If goal(GR)=2 and goalGF>x /*εάν το αποτέλεσμα ήταν εξαιρετικό*/ Then adopt goal(strategy) for new goal /*η στρατηγική του εί
Else check rest similar-cases. /*εάν δεν υπάρχουν εξαιρετικά αποτελέ σματα, τότε πρέπει να ελεγχθούν οι υπόλοιπες περιπτώσεις*/
If similar-case(goal) equals new goal /*έλεγξε κάθε περίπτωση για παρόμοιους διαπραγματευόμενους στόχους*/ /*εάν βρεθεί ένας με εξαιρετικό αποτέλεσμα*/ goal /*υιοθέτησε την στρατηγική του*/ Else adopt strategy with max rank (R). /* εάν δεν υ πάρχει εξαιρετικό αποτέλεσμα μέχρι τώρα, υιοθέτησε την στρατηγική με την υψηλότερη βαθμολογία (rank), καθώς αποδείχθηκε η καλύτερη μέχρι στιγμής, επομένως, θα μπορούσε να είναι υποσχόμενη*/
Όπως έχει ήδη αναφερθεί, η αξιολόγηση της απόδοσης αναφέρεται σε ζητήματα εκτέλεσης του ηλεκτρονικού συμβολαίου, γι’ αυτό και ορίζονται κριτήρια που αφορούν την ακρίβεια, την πληρότητα, το κόστος και την ταχύτητα.
Σε αυτό το πλαίσιο, καθ' όλη την διάρκεια της εκτέλεσης του συμβολαίου, κάθε συμμετέχοντας πρέπει να παρακολουθεί και να ελέγχει (στάδιο monitoring-compliance) τις επιδόσεις του άλλου, δηλαδή πρέπει να ελέγχει εάν εκείνος ενεργεί σύμφωνα με τους όρους της σύμβασης.
Συγκεκριμένα, κάθε πράκτορας πρέπει να τηρεί το συμφωνηθέν χρονοδιάγραμμα ή τυχόν εγκεκριμένες αναθεωρήσεις του, να χρησιμοποιεί τους κατάλληλους πόρους που είχαν συμφωνηθεί στο συμβόλαιο, να απέχει από την δημιουργία ή την διεκδίκηση αποζημίωσης για έξοδα που δεν έχουν συμφωνηθεί στο συμβόλαιο, να τηρεί την συμφωνηθείσα ποιότητα και να εκτελεί τους κατάλληλους ελέγχους ποιότητας των παραδοτέων του, επίσης, όπως ορίστηκαν στο συμβόλαιο.
Επιπλέον, πρέπει να εφαρμόζονται οι διαδικασίες που προβλέπονται στο ηλεκτρονικό συμβόλαιο, όσον αφορά την διευθέτηση ζητημάτων, που προκύπτουν κατά την εκτέλεση του, να τηρείται η συμφωνηθείσα διαχείριση ενεργειών, αλλαγών και κινδύνων, προκειμένου να αναγνωρίζονται, να αξιολογούνται και να αντιμετωπίζονται οι κίνδυνοι, που μπορεί να εμφανιστούν κατά την διάρκεια της εκτέλεσης του συμβολαίου.
Αν και η αξιολόγηση της απόδοσης είναι μια συνεχής διαδικασία, η οποία λαμβάνει χώρα καθ' όλη την διάρκεια του ηλεκτρονικού συμβολαίου, η παρούσα προσέγγιση επικεντρώνεται στην τελική συνολική απόδοση, καθώς είναι περισσότερο αντικειμενική η άποψη που προκύπτει, όταν όλες οι συμβατικές υποχρεώσεις έχουν ολοκληρωθεί.
Σε αυτό το πλαίσιο, η προτεινόμενη προσέγγιση παρέχει μια απλή αλλά χρήσιμη μεθοδολογία για την κρίση του αποτελέσματος κάθε ηλεκτρονικού συμβολαίου.
Απώτερος στόχος είναι να δοθούν απαντήσεις σε ερωτήματα, όπως εάν το αποτέλεσμα του συμβολαίου ήταν ικανοποιητικό ή όχι, εάν είναι επωφελές ο πράκτορας να συναλλαγεί ξανά με αυτόν τον εταίρο αλλά και τι πρέπει να αποτελέσει αντικείμενο προσεκτικότερης διαπραγμάτευσης την επόμενη φορά.
Επομένως, είναι ιδιαίτερα σημαντικό να καθοριστούν τα κριτήρια, που θα αντανακλούν την συμμόρφωση κάθε εταίρου στους όρους και τις απαιτήσεις του συμβολαίου.
Σε αυτό το πλαίσιο, οι βασικές κατηγορίες κριτηρίων είναι ο χρόνος (time) και η ποιότητα (quality) της υπηρεσίας.
Ο χρόνος είναι η αξιολόγηση της έγκαιρης ή μη ολοκλήρωσης, λαμβάνοντας υπόψη την πραγματική ημερομηνία ολοκλήρωσης σε σύγκριση με την ορισμένη στο συμβόλαιο ημερομηνία.
Η ποιότητα της υπηρεσίας είναι η ποιότητα των παραδοτέων.
Στην τελική ολοκλήρωση, η ποιότητα των υλικών, του εξοπλισμού ή των υπηρεσιών που παρέχονται πρέπει να πληρούν τις απαιτήσεις που καθορίζονται στις προδιαγραφές του συμβολαίου.
Κάθε μία από αυτές τις κατηγορίες περιλαμβάνει έναν αριθμό ειδικών κριτηρίων, όπως η τήρηση του σχεδίου, η δράση στις αναμενόμενες καθυστερήσεις, η πληρότητα και η ακρίβεια του έργου.
Ακολουθώντας τις ίδιες αρχές, όπως και στην αξιολόγηση της στρατηγικής, συνδέεται και εδώ κάθε ποιοτική τιμή με έναν αριθμό (Πίνακας 5.3).
Η εξίσωση 5.2 αντιπροσωπεύει την τελική τιμή απόδοσης (PV), όπου wi είναι το βάρος που ορίζει ο χρήστης για κάθε κριτήριο αξιολόγησης (cri).
Συνολική Διαδικασία Προσέγγισης Τα πιο σημαντικά μέρη της συνολικής διαδικασίας έχουν ήδη συζητηθεί.
Σε αυτή την υπόενότητα, συνοψίζονται προκειμένου να γίνει σαφής η προτεινόμενη προσέγγιση στο σύνολο της.
Στην Εικόνα 5.8 παρουσιάστηκαν τα πέντε ιεραρχικά στάδια ενός ηλεκτρονικού συμβολαίου, τα οποία είναι η σύνταξη, η διαπραγμάτευση, η προετοιμασία, η εκτέλεση – συμμόρφωση και η ανανέωση.
Ξεκινώντας από την συγγραφή, προτείνεται η χρήση μιας βιβλιοθήκης όρων (clause library), όπως περιγράφηκε ήδη.
Αυτή η ανοικτή, δημόσια βιβλιοθήκη θα περιέχει τους υπάρχοντες όρους και παλιά ηλεκτρονικά συμβόλαια.
Επομένως, οι πράκτορες θα μπορούν να τους χρησιμοποιούν, προκειμένου να συντάξουν αποτελεσματικά ένα νέο ηλεκτρονικό συμβόλαιο.
Στην συνέχεια, οι εμπλεκόμενοι πράκτορες πρέπει να χρησιμοποιήσουν μια βιβλιοθήκη πρωτοκόλλων (protocol library), προκειμένου να επιλέξουν το καταλληλότερο πρωτόκολλο ώστε να ενεργούν σωστά σε όλη την διαδικασία.
Επιπλέον, οι πράκτορες πρέπει να χρησιμοποιούν και ένα ιδιωτικό αποθετήριο (private repository), προκειμένου να επιλέξουν την κατάλληλη στρατηγική, η οποία θα μπορούσε να μεγιστοποιήσει το όφελος τους.
Για την διαπραγμάτευση, το δεύτερο στάδιο, προτείνεται η μεθοδολογία διαπραγμάτευσης έντεκα σημείων, όπως παρουσιάστηκε αναλυτικά σε προηγούμενη υπό-ενότητα.
Στην συνέχεια, εφόσον η διαπραγμάτευση ολοκληρωθεί επιτυχώς, οι συμμετέχοντας μπορούν να προχωρήσουν στο τρίτο στάδιο, αυτό της προετοιμασίας.
Σε αυτό το στάδιο, το συμφωνηθέν συμβόλαιο ή μέρος αυτού πρέπει να αποθηκευτεί στην βιβλιοθήκη όρων για μελλοντική χρήση.
Επιπλέον, ένα σύστημα πληρωμών (π.χ.
PayPal) πρέπει να γίνει, σε αυτό το στάδιο, διαθέσιμο στους πράκτορες, προκειμένου να χρησιμοποιηθεί στην συνέχεια.
Επίσης, προτείνεται, σε αυτό το στάδιο, να συμπεριληφθεί και η αξιολόγηση της στρατηγικής, όχι όμως και η αξιολόγηση της απόδοσης, καθώς αυτή θα πρέπει συμπεριληφθεί στο τέλος του επόμενου σταδίου, της εκτέλεσης.
Τέλος, το στάδιο της ανανέωσης λαμβάνει χώρα μόνο εάν έχει ήδη συμφωνηθεί.
Σε περίπτωση που υφίσταται δυνατότητα ανανέωσης, οι πράκτορες πρέπει πρώτα να ελέγξουν τα αποτελέσματα της αξιολόγησης που αφορά την απόδοση, προκειμένου να αποφασίσουν εάν είναι ωφέλιμο για αυτούς να προχωρήσουν σε ανανέωση του συμβολαίου ή όχι.
Ενσωμάτωση Μεθοδολογίας στο Σύστημα EMERALD Προκειμένου να είναι δυνατή η πρακτική χρήση της μεθοδολογίας, προτείνεται η ενσωμάτωση της στο πολυπρακτορικό σύστημα EMERALD, που είναι συμβατό με τα πρότυπα της FIPA και του Σημασιολογικού Ιστού.
Σε αυτό το πλαίσιο, ακολουθώντας τις προδιαγραφές του συστήματος, προτείνεται η χρήση της γλώσσας RuleML [Boley et al., 2010] για την αναπαράσταση και την ανταλλαγή των πολιτικών των πρακτόρων, καθώς και των όρων iCkl του ηλεκτρονικού συμβολαίου.
Επιπλέον, προτείνεται η χρήση της γλώσσας RDF για την αναπαράσταση των δεδομένων, τόσο των ιδιωτικών jDkl, που περιλαμβάνονται στην εσωτερική γνώση του πράκτορα Pj, όσο και των αποτελεσμάτων jEkl, που δημιουργούνται κατά την διάρκεια των βημάτων της διαπραγμάτευσης.
Η επισκόπηση της παραπάνω πρότασης παρουσιάζεται στην Εικόνα 5.12.
Αρχικά, κάθε πράκτορας, που παρέχει κάποια υπηρεσία ή προϊόν (πωλητής, πάροχος, κλπ.) πρέπει να εγγραφεί στην υπηρεσία AYPS του συστήματος EMERALD, περιγράφοντας, μεταξύ άλλων, τις υπηρεσίες ή τα προϊόντα που προσφέρει, τι απαιτεί για να κληθεί για διαπραγμάτευση (C0, call-for-negotiation value) και τις γλώσσες / φορμαλισμούς που χρησιμοποιεί.
Έτσι, κάθε φορά που ένας πράκτορας Pj θέλει να βρει έναν κατάλληλο πάροχο, τον αναζητά μέσω της υπηρεσίας AYPS, η οποία του επιστρέφει όλες τις απαραίτητες πληροφορίες.
Όταν ο πράκτορας Pj είναι έτοιμος, αποστέλλει ένα ACL μήνυμα τύπου REQUEST, που περιέχει την κατάλληλη τιμή C0, σε έναν άλλο πράκτορα Pi, προκειμένου να ξεκινήσει μια διαδικασία διαπραγμάτευσης (ηλεκτρονικού συμβολαίου) με αυτόν.
Στην πραγματικότητα, η μεταβλητή C0 περιέχει τις κατάλληλες πληροφορίες που ένας δυνητικός εταίρος θα πρέπει να στείλει στον πράκτορα Pi, προκειμένου να προκαλέσει το ενδιαφέρον του και να εισπράξει μια θετική απάντηση για διαπραγμάτευση.
Στην συνέχεια, η διαδικασία προχωρά όπως περιγράφηκε στις προηγούμενες υπόενότητες.
Συγκεκριμένα, ο πράκτορας Pi εξετάζει το νέο αίτημα και στέλνει πίσω ένα μήνυμα τύπου REQUEST, το οποίο περιέχει μέρος των όρων του iCkl (σε RuleML μορφή), περιμένοντας την απάντηση του Pj ή τερματισμό (ή ακόμη και ένα αίτημα επαναδιαπραγμάτευσης).
Ο πράκτορας Pj, από την πλευρά του, αξιολογεί τους όρους iCkl που έλαβε, χρησιμοποιώντας τα δικά του ιδιωτικά δεδομένα jDkl (σε RDF μορφή) και ενημερώνει τον Pi, με ένα νέο ACL μήνυμα τύπου INFORM, το οποίο περιέχει τα αποτελέσματα jEkl (σε RDF μορφή).
Αυτή η διαδικασία επαναλαμβάνεται για τα βήματα κάθε εργασίας (task) και, τελικά, οδηγεί είτε σε μια συμφωνία είτε σε μια ασυμβίβαστη διαφωνία.
Γενικά, οι διαδικασίες διαπραγμάτευσης είναι μια ακολουθία ανταλλαγής ACL μηνυμάτων, καθώς οι συμμετέχοντες χρησιμοποιούν μηνύματα τύπου REQUEST για να ζητήσουν πληροφορίες και μηνύματα τύπου INFORM για να απαντήσουν.
Ένα λεπτομερές παράδειγμα, που περιγράφει όλες τις πτυχές που αφορούν την ενσωμάτωση αυτή, παρουσιάζεται στην επόμενη ενότητα.
Εφαρμογή σε Περίπτωση Εικονικού Ταξιδιωτικού Πρακτορείου Ο Ιστός δημιούργησε ένα νέο οικονομικό οικοσύστημα, επομένως δεν είναι έκπληξη το γεγονός ότι ολοένα και περισσότερα ταξιδιωτικά πρακτορεία μεταφέρουν τις υπηρεσίες τους διαδικτυακά.
Επιπλέον, αρκετές έρευνες έχουν, ήδη, καταδείξει την δυναμική της χρήσης ευφυών πρακτόρων στον τομέα του τουρισμού [Yueh et al., 2007;
Σε αυτό το πλαίσιο, η προτεινόμενη μεθοδολογία εφαρμόζεται στην περίπτωση ενός εικονικού ταξιδιωτικού πρακτορείου, όπου παρουσιάζεται η χρηστικότητα και η προστιθέμενη αξία της.
Το σενάριο, που παρουσιάζεται, αποτελεί επέκταση της περίπτωσης μεσιτείας που παρουσιάστηκε στο πρώτο μέρος (μεθοδολογία K-SWAN) του κεφαλαίου.
Πρόκειται για ένα πρακτορείο (VTA), το οποίο προσφέρει πλήρη πακέτα διακοπών στους εν δυνάμει πελάτες του.
Αυτά τα πακέτα μπορούν να καλύψουν όλα τα είδη των σχετικών με τον τουρισμό υπηρεσιών, από πληροφορίες για εκδηλώσεις και αξιοθέατα έως υπηρεσίες που υποστηρίζουν την κράτηση πτήσεων, ξενοδοχείων, ενοικιάσεων αυτοκινήτων και εκδρομών.
Τέτοια διαδικτυακά πρακτορεία (VTAs) υπάρχουν ήδη, ωστόσο, ως επί το πλείστον παρέχουν κυρίως πληροφορίες.
Το σενάριο, που παρουσιάζεται στην συνέχεια, περιλαμβάνει δύο κύρια μέρη, το ταξιδιωτικό γραφείο, που εκπροσωπείται από τον πράκτορα του, και τον πελάτη (customer), που επιθυμεί να αγοράσει ένα πακέτο διακοπών.
Ωστόσο, υπάρχει, επιπρόσθετα, και ένας τρίτος πράκτορας που περιγράφηκε αναλυτικά στο τέταρτο κεφάλαιο της διατριβής, ο Reasoner, ειδικός πράκτορας του συστήματος EMERALD, που παρέχει υπηρεσίες συλλογιστικής, δεδομένου ότι οι εμπλεκόμενοι πράκτορες δεν χρησιμοποιούν τους ίδιους λογικούς φορμαλισμούς.
Σε αυτό το πλαίσιο, ακολουθώντας την ως άνω προτεινόμενη μεθοδολογία, υιοθετείται η χρήση δύο ανοικτών και δημόσιων βιβλιοθηκών μια για τους όρους (clauses) του συμβολαίου και μια για το πρωτόκολλο (protocol).
Επιπλέον, τόσο ο πράκτορας VTA όσο και ο πελάτης έχουν τις δικές τους ιδιωτικές βιβλιοθήκες-αποθετήρια, όπου διατηρούν τις στρατηγικές τους.
Ο πράκτορας VTA επιδιώκει το κέρδος και, επομένως, στοχεύει στην ικανοποίηση του πελάτη και, κατ’ επέκταση, στην μεγιστοποίηση πωλήσεων πακέτων.
Από την άλλη πλευρά, ο πελάτης επιθυμεί να κλείσει εύκολα ένα πακέτο διακοπών, επιλέγοντας από μια μεγάλη ποικιλία προσφορών, στοχεύοντας στον καλύτερο δυνατό συνδυασμό υπηρεσιών και τιμών.
Επομένως, οι δυο πράκτορες χρησιμοποιούν τις βιβλιοθήκες, προκειμένου να αντλήσουν τα απαραίτητα στοιχεία, έτσι ώστε να συντάξουν και να διαπραγματευτούν ένα πιθανό ηλεκτρονικό συμβόλαιο.
Αρχικά, ο πελάτης εντοπίζει το κατάλληλο τουριστικό πρακτορείο, μέσω της υπηρεσίας AYPS, από την οποία πληροφορείται σχετικά με τον λογικό φορμαλισμό που χρησιμοποιεί ο πράκτορας VTA.
Έτσι, εφόσον δεν κατανοεί τον συγκεκριμένο φορμαλισμό, εντοπίζει και την κατάλληλη υπηρεσία συλλογιστικής (εδώ αναιρέσιμη) από τις σχετικές διαθέσιμες υπηρεσίες του συστήματος.
Σε αυτό το σημείο, η διαδικασία για την διαπραγμάτευση του ηλεκτρονικού συμβολαίου μπορεί να εκκινήσει.
Επομένως, ο πελάτης αποστέλλει στον VTA ένα μήνυμα, με την απαιτούμενη C0 (call-for-negotiation) τιμή, η οποία στην προκειμένη περίπτωση είναι ο επιθυμητός προορισμός (Κούβα) με τις αντίστοιχες ημερομηνίες (Αύγουστος).
Ο πράκτορας VTA, από την πλευρά του, αναζητά τα κατάλληλα δεδομένα από την βιβλιοθήκη των όρων και την βιβλιοθήκη των πρωτοκόλλων και εκκινεί την διαδικασία διαπραγμάτευσης του συμβολαίου (Εικόνα 5.13).
Ο VTA προσκαλεί τον πελάτη να εδραιώσουν μεταξύ τους κάποια εμπιστοσύνη και να διαπραγματευτούν τους όρους του συμβολαίου.
Έτσι, οι δύο πράκτορες παρέχουν επαρκείς αποδείξεις για να υποστηρίξουν την αξιοπιστία τους.
Ειδικότερα, δεδομένου ότι είναι απαγορευμένο να πραγματοποιούνται εμπορικές συναλλαγές με άτομα ηλικίας κάτω των 18 ετών, ο πελάτης πρέπει να παρέχει διαπιστευτήρια (21E21, το αποτέλεσμα εφαρμογής των όρων 11C11 του VTA στα δεδομένα 21D21 του πελάτη), που να πιστοποιούν την ηλικία του (21D21).
Ο πράκτορας VTA ελέγχει τα διαπιστευτήρια και ολοκληρώνει επιτυχώς αυτή την πρώτη εργασία, επαλήθευσης της ταυτότητας (identity verification).
Έπειτα, σύμφωνα με τις προτιμήσεις του πελάτη, το πρακτορείο πρέπει να είναι μέλος ενός ανεξάρτητου οργανισμού (όροι 21C12 του VTA), όπως το Better Business Bureau, το οποίο εγγυάται την ποιότητα των υπηρεσιών (membership verification).
Τελικά, οι δύο πράκτορες εδραιώνουν μεταξύ τους έναν βαθμό εμπιστοσύνης, που τους επιτρέπει να προχωρήσουν (Εικόνα 5.14).
Στην συνέχεια ορίζεται η ατζέντα της αλληλεπίδρασης και ανταλλάσσονται ορισμένα αρχικά προσωπικά και πιστωτικά δεδομένα.
Σε αυτό το σημείο, ο πράκτορας VTA θέλει να ελέγξει εάν ο πελάτης είναι παλιός πελάτης ή όχι, καθώς υπάρχουν κάποιες ειδικές προσφορές για τους παλιούς πελάτες.
Επομένως, ο VTA στέλνει ένα αίτημα προς τον πελάτη, ρωτώντας εάν έχει ένα έγκυρο κωδικό πελάτη (όροι 12C11 του VTA).
Ο πελάτης, όμως, απαντά αρνητικά (22E21, το αποτέλεσμα της εφαρμογής όρων του VTA 12C11 στα δεδομένα του πελάτη).
Έπειτα, κατά την διάρκεια της επόμενης εργασίας, ο VTA θέλει να μάθει εάν ο προορισμός και οι ημερομηνίες του πελάτη είναι ευέλικτα ή όχι (όροι 12C12 του VTA), προκειμένου να προτείνει κατάλληλα πακέτα, προσαρμόζοντας τους περιορισμούς της διαπραγμάτευσης του.
Για ακόμη μια φορά, ο πελάτης απαντά αρνητικά, ο προορισμός και οι ημερομηνίες του είναι ανελαστικά (22E21, το αποτέλεσμα της εφαρμογής όρων του VTA στα δεδομένα του πελάτη).
Στην τρίτη και τελευταία εργασία αυτού του σταδίου, ο πράκτορας VTA αποστέλλει μέρος των όρων του ηλεκτρονικού συμβολαίου (12C13), σε αναιρέσιμη λογική, ζητώντας ορισμένα από τα προσωπικά δεδομένα του πελάτη.
Αυτό το αίτημα περιλαμβάνει, μεταξύ άλλων, το όνομα του πελάτη, την διεύθυνση του ηλεκτρονικού του ταχυδρομείου, τον αριθμό της πιστωτικής του κάρτας και την ημερομηνία λήξης της (Εικόνα 5.15).
Ο πελάτης, από την πλευρά του, είναι πρόθυμος να αποκαλύψει ένα μέρος των προσωπικών του δεδομένων, ωστόσο, εσωτερικά χρησιμοποιεί ένα διαφορετικό τύπο λογικής και δεν μπορεί να επεξεργαστεί απευθείας τα αναιρέσιμα αιτήματα του πράκτορα VTA.
Πρακτικά, ο πελάτης μπορούσε να απαντά στα απλά ερωτήματα του VTA, όμως πλέον χρειάζεται βοήθεια και, γι’ αυτό επικοινωνεί με τον Reasoner, στον οποίο αποστέλλει τα προσωπικά του δεδομένα (22D23), σε RDF μορφή, και τα επιχειρήματα του VTA (12C13), σε αναιρέσιμη λογική (RuleML), περιμένοντας μια απάντηση.
Ο Reasoner διεξάγει την απαραίτητη συλλογιστική και επιστρέφει τα (RDF) αποτελέσματα, δηλαδή ποια προσωπικά δεδομένα μπορεί να αποκαλύψει ο πελάτης στον VTA (22E23).
Μόλις, ο πράκτορας VTA λάβει αυτά τα δεδομένα, προχωρά στην πρώτη εργασία (proposing packages) του επόμενου σταδίου, αποστέλλοντας ένα άλλο μέρος του ηλεκτρονικού συμβολαίου (13C11).
Πρόκειται για ένα σύνολο όρων σε αναιρέσιμη λογική, που περιέχει τα χαρακτηριστικά, ορισμένα από τα οποία είναι καταγεγραμμένα ως διαπραγματεύσιμα, τριών διαθέσιμων πακέτων διακοπών για την Κούβα τον Αύγουστο (Πίνακας 5.4).
Πίνακας 5.4.
Χαρακτηριστικά κάθε πακέτου διακοπών.
Διάρκεια = 11 μέρες/9 νύχτες Ταξιδιωτική ασφάλιση (διαπραγ-
Ενοικ/μενο αυτ/το (έως 8 μέρες) Ασφάλεια αυτ/του
Ενοικ/μενο αυτ/το (έως 10 Φυλλάδιο – χάρτης, Βίζα
Ο πελάτης επικοινωνεί ξανά με τον Reasoner, παρέχοντας τόσο το RuleML αρχείο που περιέχει αυτούς τους όρους (13C11), όσο και το RDF αρχείο που περιέχει τις προτιμήσεις του (23D21), δηλαδή την μέγιστη τιμή (1100€), τις ελάχιστες μέρες (10), την ενοικίαση αυτοκινήτου συμπεριλαμβανομένης της ασφάλειας για τουλάχιστον για 5 ημέρες, την βίζα και έναν χάρτη.
Ο Reasoner, στην συνέχεια, επιστρέφει το αποτέλεσμα (23E21), όπου μόνο το τρίτο πακέτο πληροί όλες τις απαιτήσεις, ωστόσο είναι ακριβότερο και απορρίπτεται.
Η Εικόνα 5.16 παρουσιάζει τις γενικές πληροφορίες αυτού του πακέτου σε RDF μορφή.
Ως αποτέλεσμα, ο πελάτης προχωρά στην διαδικασία της διαπραγμάτευσης (δεύτερη εργασία), προκειμένου να μειώσει την τιμή του πακέτου.
Έτσι, ενημερώνει τον πράκτορα VTA ότι ενδιαφέρεται για το τρίτο πακέτο (C), ωστόσο θα ήθελε να επιλέξει ένα ξενοδοχείο 4* ή 3* αστέρων και όχι 5*, όπως προτείνεται στο πακέτο (23C12; μέρος των όρων του πελάτη), έτσι ώστε να μειωθεί η τιμή μέχρι του ποσού των 1100€.
Ο πράκτορας VTA το αποδέχεται και προτείνει ορισμένες νέες επιλογές (13E22; το αποτέλεσμα της εφαρμογής των όρων του πελάτη 23C12 στα δεδομένα και τους όρους του VTA).
Τελικά, ο πελάτης ικανοποιημένος, επιλέγει μια από αυτές τις επιλογές και η διαπραγμάτευση προχωρά στα επόμενα ζητήματα.
Στον Πίνακα 5.2 παρουσιάστηκαν τα δέκα περισσότερο διαπραγματεύσιμα ζητήματα, ωστόσο, στην παρούσα περίπτωση τα ζητήματα της διαχείρισης αλλαγών και πνευματικών δικαιωμάτων δεν υφίστανται.
Επομένως, συζητώνται μεταξύ των εταίρων τα υπόλοιπα Τελικά, ο πράκτορας VTA αποθηκεύει όλα τα δεδομένα που αφορούν αυτόν τον πελάτη και ζητά τις τελικές λεπτομέρειες (14C11), όπως, για παράδειγμα, ο τρόπος πληρωμής και η διεύθυνση / ημερομηνία που επιθυμεί ο πελάτης να λάβει τα ηλεκτρονικά εισιτήρια (e-tickets).
Ο πελάτης, από την πλευρά του, αποδέχεται την συμφωνία και αποστέλλει τα τελικά δεδομένα (24E21).
Έπειτα, οι όροι του ηλεκτρονικού συμβολαίου αποθηκεύονται στο κατάλληλο αποθετήριο και οι δύο εταίροι αξιολογούν την στρατηγική τους για πιθανή μελλοντική χρήση.
Για παράδειγμα, η τιμή αξιολόγησης του πελάτη (EV – εξίσωση 5.1), για την συγκεκριμένη περίπτωση υπολογίζεται ως εξής:
Η αρνητική τιμή EV σημαίνει ότι ο πελάτης είναι απογοητευμένος από την συμφωνία.
Ωστόσο, ορισμένοι από τους εννέα στόχους (οκτώ από τους δέκα προτεινόμενους και ένας για την διαπραγμάτευση του ξενοδοχείου) διαπραγματεύτηκαν με επιτυχία, όπως η διαπραγμάτευση του ξενοδοχείου (αξιολόγηση στόχου 1– GR=1).
Η στρατηγική, που χρησιμοποιήθηκε σε αυτή την περίπτωση ήταν καινούργια (R=0), επομένως η βαθμολογία της πλέον είναι R+=GR = 0+1=1, γεγονός που σημαίνει ότι είναι πιθανό να χρησιμοποιηθεί ξανά στο μέλλον.
Τέλος, κατά την διάρκεια της εκτέλεσης του ηλεκτρονικού συμβολαίου, οι δύο εταίροι προχωρούν σύμφωνα με τις συμφωνηθείσες ευθύνες τους ενώ μια αξιολόγηση της απόδοσης μπορεί να αποκαλύψει πόσο επιτυχής ήταν, τελικά, η συναλλαγή για τον κα-
Όροι συμβολαίου και προδιαγραφές πληροφοριών Τόσο ο πελάτης όσο και ο πράκτορας VTA υιοθετούν το πρότυπο KC-Agents του συστήματος EMERALD, επομένως, είναι εξοπλισμένοι με έναν μηχανισμό κανόνων Jess και μια Jess βάση γνώσης (KB).
Ακολουθώντας τις γενικές προδιαγραφές του προτύπου, όπως προτάθηκαν στο τέταρτο κεφάλαιο της παρούσας διατριβής, η περιγραφή του πράκτορα VTA περιλαμβάνει γεγονότα και κανόνες.
Για παράδειγμα, το οριζόμενο από τον χρήστη γεγονός packages αποτελεί μέρος της εσωτερικής γνώσης του VTA και αντιπροσωπεύει τα χαρακτηριστικά του πακέτου (packages characteristics) Fuwc ≡ {packages} ενώ το εισαγόμενο από το περιβάλλον γεγονός customer_name αντιπροσωπεύει το επίσημο καθολικό όνομα του πελάτη Fewc ≡ {customer_name}.
Από την άλλη πλευρά, οι κανόνες μπορούν να οδηγήσουν στην εκτέλεση μιας ειδικής ενέργειας, όπως η επικοινωνία μεταξύ πρακτόρων (Cwc), ή στην κλήση μιας Java Μεθόδου (Jwc).
Για παράδειγμα, ο κανόνας «εάν είναι η στιγμή (COND) να προταθούν τα διαθέσιμα πακέτα, στείλε ένα μήνυμα που θα τα περιέχει στον πελάτη» είναι ένας κανόνας επι-
Ένα άλλο παράδειγμα είναι ο κανόνας «οποτεδήποτε είναι απαραίτητο (COND), κάλεσε την μέθοδο getChosenPackage (Java) και πάρε τα διαθέσιμα πακέτα σε RDF συντακτικό (Εικόνα 5.16)», ο οποίος είναι ένας κανόνας κλήσης:
Σε αυτό το πλαίσιο, η Εικόνα 5.17 παρουσιάζει τρεις από τους κανόνες συμπεριφοράς του πράκτορα VTA (13cndkl).
Ο κανόνας «find_name», όταν ολοκληρωθεί επιτυχώς το δεύτερο στάδιο (stg2) εντοπίζει το όνομα του πελάτη (customer), χρησιμοποιώντας τις εξαγόμενες τριπλέτες, προκειμένου να εισάγει αυτόν τον πελάτη στον κατάλογο του, ενώ ο κανόνας «proposingPackages» ορίζει την αποστολή των όρων που σχετίζονται με τα πακέτα διακοπών στον πελάτη και περιμένει απάντηση.
Τέλος, ο κανόνας «getChosenPackage» λαμβάνει την απάντηση του πελάτη, ελέγχει τα επιλεγμένα πακέτα (A, B, C) και εξάγει τα προσωπικά δεδομένα του πελάτη σε RDF, προκειμένου να τα παρέχει στον ειδικό πράκτορα Reasoner για την διεξαγωγή της απαραίτητης συλλογιστικής.
Ο Reasoner απαιτεί τα δεδομένα που αφορούν τα διαθέσιμα πακέτα διακοπών (σε RDF) (Εικόνα 5.16) και τους όρους (13C11) του πράκτορα VTA, που σχετίζονται με τα χαρακτηριστικά των πακέτων (Πίνακας 5.4), σε RuleML (Εικόνα 5.18).
Οι όροι αυτοί εκφράζονται στην γλώσσα RuleML και όχι στην Jess, καθώς αφορούν δημόσιους διαμοιραζόμενους όρους και όχι κανόνες ιδιωτικής συμπεριφοράς.
Άλλωστε, αυτοί οι όροι είναι, στην πραγματικότητα, οι κανόνες που πρέπει να συνδυαστούν με τα (RDF) δεδομένα.
Ο πελάτης με βάση αυτούς τους όρους και τις προσωπικές του προτιμήσεις μπορεί να επιλέξει το πλέον κατάλληλο πακέτο.
Δεδομένου ότι οι συγκεκριμένοι κανόνες είναι ιδιαίτερα σημαντικοί παρουσιάζονται, στην συνέχεια, στο συντακτικό της d-POSL, προκειμένου να γίνουν καλύτερα κατανοητοί.
Οι τρεις κανόνες εξάγουν θετικό συμπέρασμα, ωστόσο, μόνο ένα από αυτά τα συμπεράσματα πρέπει να είναι αληθές, σύμφωνα με τον περιορισμό της τελευταίας γραμμής (αντικρουόμενα λεκτικά).
Συγκεκριμένα, κάθε πακέτο είναι μοναδικό (Y ≠ X) και ουσιαστικά ορίζει ένα σύνολο αντικρουόμενων λεκτικών:
Όμοια, ο πράκτορας του πελάτη περιέχει, μεταξύ άλλων, ένα γεγονός (personal_data), το οποίο αποτελεί μέρος της εσωτερικής του γνώσης και αντιπροσωπεύει τα προσωπικά του δεδομένα Fucust ≡ {personal_data}.
Επιπλέον, δεδομένου ότι το περιβάλλον είναι δυναμικό και ανανεώνεται συνεχώς, νέα γεγονότα, όπως αυτό με το όνομα του πρακτορείου (VTA) προστίθενται στην μνήμη εργασίας του (Fecust ≡ {VTA}).
Η συμπεριφορά του πράκτορα αναπαρίσταται, επίσης, με κανόνες, οι οποίοι υλοποιούν τις συνθήκες μετάβασης scndkl από το ένα βήμα της διαπραγμάτευσης στο άλλο.
Δύο από αυτούς τους κανόνες είναι οι «request» και «read», ο πρώτος χρησιμοποιείται για επικοινωνία: ενώ ο δεύτερος για κλήση Java μεθόδων:
Το ηλεκτρονικό συμβόλαιο είναι ο ακρογωνιαίος λίθος κάθε ηλεκτρονικής εμπορικής συναλλαγής.
Η σημαντικότητα του απαιτεί αυτοματοποίηση και ολοκληρωμένες λύσεις.
Παρά το γεγονός ότι υπάρχουν, ήδη, προσεγγίσεις προς αυτή την κατεύθυνση, οι περισσότερες από αυτές αντιμετωπίζουν το ζήτημα μερικώς, εστιάζοντας, για παράδειγμα, μόνο στην εκτέλεση ενός (ηλεκτρονικού) συμβολαίου.
Σε αυτό το πλαίσιο, δεν υπάρχουν άλλες γνωστές παρόμοιες προσεγγίσεις, που να βασίζονται στην γνώση για να διαχωρίσουν και να επανασυνδέσουν το πρωτόκολλο από τις στρατηγικές των πρακτόρων.
Ούτε, όμως, υπάρχουν και ολοκληρωμένες προσεγγίσεις που να βασίζονται στην τεχνολογία των ευφυών πρακτόρων για την συνολική αυτοματοποιημένη διαχείριση των ηλεκτρονικών συμβολαίων στο περιβάλλον του Σημασιολογικού Ιστού.
Παρ’ όλα αυτά, υπάρχουν αρκετές προσεγγίσεις, όπως αυτές που παρουσιάζονται στην συνέχεια, οι οποίες πραγματεύονται ένα από τα σημαντικότερα ζητήματα που συναντώνται στις συναλλαγές των ευφυών πρακτόρων, αυτό της διαπραγμάτευσης, καθώς οι αποφάσεις που λαμβάνονται κατά την διάρκεια της επηρεάζουν τους συμμετέχοντες καθοριστικά [Dunne et al., 2005].
Η εργασία [Bădică et al., 2007] συζητά προσεγγίσεις, που βασίζονται σε κανόνες, για την διαπραγμάτευση τιμών σε πολυπρακτορικά συστήματα που δραστηριοποιούνται στον χώρο του ηλεκτρονικού εμπορίου, υποστηρίζοντας ότι οι κανόνες είναι μια εφικτή και επεκτάσιμη τεχνολογία για αυτοματοποιημένες διαπραγματεύσεις.
Οι συγγραφείς συνοψίζουν την σχετική βιβλιογραφία και παρουσιάζουν ορισμένα αρχικά πειραματικά αποτελέσματα, χρησιμοποιώντας έναν μηχανισμό διαπραγμάτευσης τιμών.
Ωστόσο, δεν υπάρχουν πληροφορίες σχετικά με την εφαρμογή του μηχανισμού, εκτός από το ότι βασίζεται στο πλαίσιο JADE και την γλώσσα Jess.
Στην παρούσα διατριβή, αντίθετα, παρουσιάζονται συγκεκριμένες επαναχρησιμοποιήσιμες προσεγγίσεις, συμβατές με τις τεχνολογίες του Σημασιολογικού Ιστού, οι οποίες μπορούν να χρησιμοποιηθούν όχι μόνο για την διαπραγμάτευση τιμών αλλά και σε κάθε άλλη περίπτωση.
Επιπλέον, η υλοποίηση των μεθοδολογιών περιγράφεται λεπτομερώς και είναι διαθέσιμη για χρήση στο σύστημα EMERALD.
Ακόμη, μόνο στην παρούσα διατριβή προτείνονται μέθοδοι για την εδραίωση εμπιστοσύνης μεταξύ των εταίρων και την αξιολόγηση στρατηγικών και αποδόσεων.
Ωστόσο, και οι δύο προσεγγίσεις θεωρούν τους πράκτορες και τους κανόνες σημαντικούς για την μεγιστοποίηση της αυτοματοποίησης και της αποτελεσματικότητας των συναλλαγών.
Όσον αφορά την χρήση της αναιρέσιμης λογικής και την σύναψη συμβολαίων, μια σχετική προσέγγιση είναι η αρχιτεκτονική DR-CONTRACT [Governatori & Pham, 2009], για την αναπαράσταση και την συλλογιστική ηλεκτρονικών συμβολαίων (e-Contracts).
Αυτή η προσέγγιση ασχολείται με την εκτέλεση και την απόδοση των ηλεκτρονικών συμβολαίων, με την χρήση της αναιρέσιμης λογικής.
Οι συγγραφείς, προκειμένου να ενσωματώσουν στο DRCONTRACT τις τεχνολογίες του Σημασιολογικού Ιστού, χρησιμοποιούν μια επέκταση της γλώσσας RuleML, που συνδυάζει δεοντικές έννοιες με αναιρεσιμότητα και παραβιάσεις ενώ χρησιμοποιεί την RDF/XML σύνταξη για τα εξαγόμενα συμπεράσματα.
Επομένως, παρά το γεγονός ότι η προσέγγιση δεν αποτελεί ολοκληρωμένη μεθοδολογία, καθώς επικεντρώνεται μόνο στην εποπτεία της εκτέλεσης των ηλεκτρονικών συμβολαίων, παραλείποντας τον διαχωρισμό πρωτοκόλλων και στρατηγικών, παρουσιάζει παρόμοια στοιχεία με τις προτεινόμενες σε αυτό το κεφάλαιο προσεγγίσεις.
Για παράδειγμα, οι προτεινόμενες προσεγγίσεις μας συμφωνούν με την χρησιμότητα των κανόνων και της αναιρέσιμη λογικής, αν και δεν χρησιμοποιούν την δεοντική (deontic) αναιρέσιμη λογική και ούτε περιορίζονται μόνο σε αυτήν.
Επιπλέον, η μεθοδολογία K-SWAN δεν περιορίζεται μόνο στα ηλεκτρονικά συμβόλαια ενώ η προτεινόμενη μεθοδολογίας ροής εργασιών αντιμετωπίζει όλα τα ζητήματα που προκύπτουν από την σύνταξη έως την εκτέλεση και ανανέωση ενός ηλεκτρονικού συμβολαίου.
Τέλος, το DR-CONTRACT λειτουργεί περισσότερο ως μηχανισμός συλλογιστικής ενώ οι προτεινόμενες προσεγγίσεις αποτελούν ολοκληρωμένες διαδικασίες για τις αλληλεπιδράσεις των πρακτόρων στον Σημασιολογικό Ιστό.
Το DR-NEGOTIATE [Skylogiannis et al., 2007] είναι ένα σύστημα για την αυτοματοποίηση της διαπραγμάτευσης μεταξύ πρακτόρων, που βασίζεται στο πλαίσιο JADE.
Το σύστημα αυτό χρησιμοποιεί δηλωτικές στρατηγικές διαπραγμάτευσης, εκφρασμένες στην αναιρέσιμη λογική, που εφαρμόζονται με την χρήση του μηχανισμού αναιρέσιμης λογικής DR-DEVICE [Bassiliades et al., 2006].
Μια βασική προϋπόθεση για την αυτοματοποίηση της διαπραγμάτευσης στο DR-NEGOTIATE είναι η ύπαρξη ενός πρωτοκόλλου διαπραγμάτευσης που αναπτύχθηκε από τους συγγραφείς.
Το πρωτόκολλο αυτό είναι μια πεπερασμένη μηχανή διακριτών καταστάσεων και μεταβάσεων που πρέπει να είναι ενσωματωμένη στον κώδικα κάθε πράκτορα.
Από την άλλη πλευρά, οι προτεινόμενες, σε αυτό το κεφάλαιο, προσεγγίσεις αφορούν (υλοποιήσιμες) μεθοδολογίες και όχι περιοριστικά συστήματα.
Επιπλέον, η προτεινόμενη μεθοδολογία ροής εργασιών αποτελεί μια ολοκληρωμένη λύση για την σύναψη και παρακολούθηση ενός ηλεκτρονικού συμβολαίου, με πλήθος καινοτόμων χαρακτηριστικών.
Επιπλέον, η προτεινόμενη μεθοδολογία παρουσιάζει μια ανεξάρτητη από γλώσσες και λογικές, ευέλικτη προσέγγιση ενώ το σύστημα DR-NEGOTIATE απαιτεί συγκεκριμένα υλοποιημένα πρωτόκολλα που απαιτούν σημαντικό χρόνο και προγραμματιστικό κόστος.
Ιδιαίτερα, τα πρωτόκολλα είναι προκαθορισμένα στο σύστημα DR-NEGOTIATE ενώ στις προτεινόμενες προσεγγίσεις της παρούσας διατριβής μπορεί να χρησιμοποιηθεί οποιοδήποτε δημόσια διαθέσιμο πρωτόκολλο, ακόμη και αν οι πράκτορες που αλληλεπιδρούν χρησιμοποιούν διαφορετικές γλώσσες υλοποίησης.
Ωστόσο, και οι δύο προσεγγίσεις συμφωνούν στην χρησιμότητα της αναιρέσιμης λογικής και την ανάγκη για προσομοίωση της ανθρώπινης γνώσης και συμπεριφοράς.
Μια ακόμη περίπτωση που ασχολείται με την διαδικασία της διαπραγμάτευσης αποτελεί μια διαδικτυακή αυτή την φορά υπηρεσία [Silva et al., 2012], η οποία λαμβάνει υπόψη της τόσο την ανθρώπινη αλληλεπίδραση όσο και την χρήση διαφορετικών πρωτοκόλλων για τα ηλεκτρονικά συμβόλαια.
Αυτή η διαδικτυακή υπηρεσία επικεντρώνεται μόνο στην διαπραγμάτευση μεταξύ οργανισμών ενώ οι προτεινόμενες μεθοδολογίες του κεφαλαίου είναι πιο γενικές και μπορούν να χρησιμοποιηθούν σε ένα εύρος περιπτώσεων.
Δεδομένου ότι πρόκειται για μια υπηρεσία ιστού, περιλαμβάνει διαπραγματεύσεις μεταξύ ανθρώπων, σε αντίθεση με τις προτεινόμενες σε αυτό το κεφάλαιο προσεγγίσεις που παρέχουν πλήρως αυτοματοποιημένες διαδικασίες.
Επιπλέον, μόνο η προτεινόμενη μεθοδολογία ροής εργασιών προτείνει μια ολοκληρωμένη λύση για τα ηλεκτρονικά συμβόλαιο.
Ωστόσο, και οι δύο προσεγγίσεις προωθούν την φιλοσοφία της επαναχρησιμοποίησης βασικών στοιχείων και υποστηρίζουν διαφορετικά πρωτόκολλα (διαπραγμάτευσης).
Τέλος, στην εργασία [Huang et al., 2010], οι συγγραφείς παρουσιάζουν ένα μοντέλο διαπραγμάτευσης πολλαπλών ιδιοτήτων για το ηλεκτρονικό εμπόριο, όπου χρησιμοποιούνται ευφυείς πράκτορες για την αυτοματοποίηση των πωλήσεων και των αγορών.
Το μοντέλο διαπραγμάτευσης περιλαμβάνει τέσσερα στάδια, την συλλογή πληροφοριών, την έρευνα, την διαπραγμάτευση και την αξιολόγηση.
Οι συγγραφείς χρησιμοποιούν επίσης ασαφή θεωρία (fuzzy theory) και μια αναλυτική διαδικασία ιεράρχησης, για την ανάπτυξη της διεπαφής του συστήματος.
Παρά το γεγονός ότι αυτό το μοντέλο ασχολείται μόνο με αγοραπωλησίες και όχι με ηλεκτρονικά συμβόλαια, παρουσιάζει ομοιότητες με τις προτεινόμενες προσεγγίσεις, ιδιαίτερα στην θεώρηση της διαπραγμάτευσης.
Ωστόσο, οι προτεινόμενες μεθοδολογίες αναγνωρίζουν την ανάγκη για ολοκληρωμένες, αυτοματοποιημένες και επαναχρησιμοποιήσιμες προσεγγίσεις.
Σε αυτό το πλαίσιο, οι πολιτικές / στρατηγικές των πρακτόρων λαμβάνονται υπόψη με έναν ευέλικτο και επαναχρησιμοποιήσιμο τρόπο, όπου η εμπιστοσύνη μεταξύ των εταίρων θεωρείται σημαντική.
Με άλλα λόγια, οι προτεινόμενες προσεγγίσεις είναι προσανατολισμένες στην ανθρώπινη λογική ενώ μπορούν να χρησιμοποιηθούν σε οποιοδήποτε πολυπρακτορικό σύστημα.
Σε αυτό το κεφάλαιο, μελετήθηκαν οι προκλήσεις των αλληλεπιδράσεων των ευφυών πρακτόρων στον Σημασιολογικό Ιστό, σε χώρους όπως το ηλεκτρονικό εμπόριο, που γνωρίζει σημαντική άνθηση, δημιουργώντας νέους τρόπους συναλλαγών.
Οι συναλλαγές αυτές είναι ζωτικής σημασίας για την επιβίωση και την ωφέλεια των χρηστών των πρακτόρων, ωστόσο παρουσιάζουν μια σειρά δυσκολιών.
Σε αυτό το πλαίσιο, προτάθηκαν δυο προσεγγίσεις μια για την διαχείριση πρωτοκόλλων και στρατηγικών αλληλεπίδρασης πρακτόρων μέσω κανόνων και μια για την διαχείριση της ροής εργασιών ηλεκτρονικών συμβολαίων μέσω πολιτικών.
Οι δυο προσεγγίσεις είναι επαναχρησιμοποιήσεις και υιοθετούν τεχνολογίες του Σημασιολογικού Ιστού, όπως η γλώσσες RuleML και RDF, που ενισχύουν την διαλειτουργικότητα μεταξύ των πρακτόρων.
Επιπλέον, για πρακτικούς λόγους, οι προτεινόμενες μεθοδολογίες ενσωματώθηκαν στο σύστημα EMERALD.
Ειδικότερα, η πρώτη προσέγγιση προτείνει μια μεθοδολογία, που ονομάζεται KSWAN, για τον διαχωρισμό και τον αυτόματο, εν τέλει, συνδυασμό πρωτοκόλλων και στρατηγικών, μέσω της χρήσης κανόνων.
Η προσέγγιση επιτρέπει επαναχρησιμοποίηση και αξιολόγηση στρατηγικών και πρωτοκόλλων, ενισχύοντας την συμμετοχή των πρακτόρων σε διάφορες περιπτώσεις αλληλεπιδράσεων και συναλλαγών, χωρίς την ανάγκη επαναπρο-
Η δεύτερη προσέγγιση προτείνει μια μεθοδολογία ροής εργασιών για την διαπραγμάτευση και σύναψη ηλεκτρονικών συμβολαίων μεταξύ πρακτόρων με διαφορετικές πολιτικές.
Η μεθοδολογία αυτή αντιμετωπίζει την ολική διαδικασία που αφορά ένα ηλεκτρονικό συμβόλαιο, από την αρχική εδραίωση εμπιστοσύνης μεταξύ των εταίρων μέχρι την τελική συμφωνία και αποδοχή.
Ιδιαίτερα μελετήθηκαν δύο κρίσιμα ζητήματα της διαδικασίας, η διαπραγμάτευση των όρων του συμβολαίου και η αξιολόγηση του.
Συγκεκριμένα, προτάθηκε η διαπραγμάτευση δέκα κύριων ζητημάτων / στόχων, που συναντώνται στην πλειονότητα των συμβολαίων ενώ όσον αφορά την αξιολόγηση, προτείνεται η αξιολόγηση όχι μόνο του αποτελέσματος του ίδιου του συμβολαίου αλλά και των στρατηγικών που χρησιμοποίησαν οι εταίροι κατά την διάρκεια της αλληλεπίδρασης τους.
Με αυτό τον τρόπο είναι δυνατή η βελτίωση της συμπεριφοράς των πρακτόρων σε μελλοντικές συναλλαγές και επομένως της ωφέλειας που αυτοί λαμβάνουν. 6 6 Εμπιστοσύνη και Αξιοπιστία
Η χρήση των ευφυών πρακτόρων συνεχώς αυξάνεται και η εκτέλεση των εργασιών που αναλαμβάνουν γίνεται ολοένα και πιο αποτελεσματική.
Όμως, σταδιακά απομακρύνουν τους ανθρώπους-χρήστες από τις οικείες μορφές αλληλεπίδρασης που παραδοσιακά βασίζονται σε κάποιο βαθμό προεδραιωμένης εμπιστοσύνης.
Επιπλέον, τα περισσότερα παραδοσιακά στοιχεία για την αξιολόγηση της εμπιστοσύνης στον φυσικό κόσμο, δεν είναι πια διαθέσιμα στα πολυπρακτορικά συστήματα.
Κάθε φορά που, μέσω των πρακτόρων οι άνθρωποιχρήστες, πρέπει να αλληλεπιδράσουν με εταίρους για τους οποίους δεν γνωρίζουν τίποτα, πρέπει να αντιμετωπίσουν την πρόκληση της λήψης αποφάσεων που ενέχουν κίνδυνο.
Έτσι, η επιτυχία ενός πράκτορα μπορεί να εξαρτάται από την ικανότητά του να επιλέξει αξιόπιστους εταίρους.
Προκύπτει, επομένως, ένα κρίσιμο ζήτημα, αναφορικά με το πώς μπορεί ένας πράκτορας να εμπιστευτεί έναν άγνωστο εταίρο σε ένα ανοικτό και ως εκ τούτου άγνωστο και ενδεχομένως επικίνδυνο περιβάλλον.
Η Εμπιστοσύνη στα Πολυπρακτορικά Συστήματα Σε αυτό το πλαίσιο, δεδομένου ότι οι πράκτορες, όπως και οι χρήστες τους, είναι πιθανόν να είναι ανέντιμοι, έχουν προταθεί διάφορα μοντέλα και μετρικές εμπιστοσύνης και φήμης.
Αυτές οι προτάσεις εστιάζουν ουσιαστικά στην εκτίμηση του βαθμού της εμπιστοσύνης που μπορεί να επενδυθεί σε ένα συγκεκριμένο πράκτορα [Ramchurn et al., 2004].
Ωστόσο, δεν υπάρχει ακόμη ένας ενιαίος και γενικά αποδεκτός ορισμός της εμπιστοσύνης στην ερευνητική κοινότητα.
Γενικά βέβαια η εμπιστοσύνη ορίζεται ως η προσδοκία και η προθυμία κάποιου να εκτελέσει μια συγκεκριμένη εργασία.
Στην βιβλιογραφία, η εμπιστοσύνη έχει οριστεί με διάφορους τρόπους, ανάλογα με το πεδίο χρήσης.
Ανάμεσα σε αυτούς τους ορισμούς, υπάρχει ένας που μπορεί να χρησιμοποιηθεί ως σημείο αναφοράς για την κατανόηση της.
Σύμφωνα λοιπόν με τον Dasgupta [Dasgupta, 2000], «εμπιστοσύνη είναι η πεποίθηση ενός πράκτορα ότι το άλλο μέλος θα κάνει ό, τι λέει (είναι δηλαδή ειλικρινής και αξιόπιστος) ή θα ανταποδώσει (είναι δηλαδή ανταποδοτικός για το κοινό καλό και των δύο)».
Από την άλλη, η φήμη είναι «η γνώμη και η άποψη κάποιου για κάτι» [Sabater & Sierra, 2001], δηλαδή είναι η γνώμη του κοινού για έναν πράκτορα.
Η φήμη επιτρέπει στους πράκτορες να οικοδομήσουν εμπιστοσύνη, τον βαθμό δηλαδή που ένας πράκτορας νιώθει ασφάλεια για έναν άλλο πράκτορα, βοηθώντας τους να εδραιώσουν σχέσεις που οδηγούν σε αμοι-
Επομένως, τα μοντέλα φήμης, ή εμπιστοσύνης γενικότερα, παρέχουν το μέσο για να προσδιοριστεί ποσοτικά η φήμη και τελικά η εμπιστοσύνη [Resnick et al., 2000].
Έτσι, βοηθούν τους πράκτορες να αποφασίσουν ποιον να εμπιστευτούν, ενθαρρύνοντας αξιόπιστη συμπεριφορά και αποτρέποντας ανέντιμη συμμετοχή.
Αν και υπάρχουν διάφορα μοντέλα εμπιστοσύνης και φήμης, σε γενικές γραμμές μπορούν να διακριθούν σε δύο κατηγορίες, τα κεντρικής προσέγγισης και τα κατανεμημένα.
Κατά συνέπεια, οι μηχανισμοί που χρησιμοποιούνται σε κάθε περίπτωση διαφέρουν τόσο σε σκοπιμότητα όσο και σε πολυπλοκότητα.
Σε ένα κεντρικό σύστημα, μια κεντρική αρχή αναλαμβάνει όλη την ευθύνη της διαχείρισης.
Από την άλλη πλευρά, σε ένα κατανεμημένο σύστημα, θα πρέπει όλοι να συνεργάζονται και να μοιράζονται τις ευθύνες για τη διαχείριση.
Συνήθως, οι μηχανισμοί εμπιστοσύνης και φήμης στα κεντρικά μοντέλα είναι λιγότερο πολύπλοκοι και πιο εύκολοι στην εφαρμογή από ότι στα κατανεμημένα.
Ωστόσο, χρειάζονται ισχυρές και αξιόπιστες κεντρικές αρχές που να μπορούν να καλύψουν τις υψηλές απαιτήσεις για την αποθήκευση των δεδομένων, τον υπολογισμό της φήμης αλλά και το επικοινωνιακό εύρος.
Πέρα όμως από το παραδοσιακό ζήτημα της επιλογής κεντρικού ή κατανεμημένου συστήματος, προκύπτει ένα ίσως ακόμη πιο σημαντικό, αυτό της απόφασης του τι πρέπει να ληφθεί υπόψη για την εκτίμηση της φήμης ενός πράκτορα [Huynh et al., 2006a;
Τα σημερινά υπολογιστικά μοντέλα εμπιστοσύνης, τόσο τα κεντρικά όσο και τα κατανεμημένα, συνήθως βασίζονται είτε στην άμεση προσωπική εμπειρία του ίδιου του πράκτορα (interaction trust) είτε σε αναφορές που παρέχονται από τρίτους (witness reputation).
Ωστόσο και οι δύο προσεγγίσεις παρουσιάζουν περιορισμούς.
Για παράδειγμα, όταν ένας πράκτορας εισέρχεται σε ένα περιβάλλον για πρώτη φορά δεν διαθέτει καμία πληροφορία για τους υπόλοιπους πράκτορες του περιβάλλοντος.
Εάν η εκτίμηση της φήμης και κατ’ επέκταση της εμπιστοσύνης βασίζεται μόνο στην άμεση προσωπική εμπειρία, θα απαιτούνταν αρκετός χρόνος για να φτάσει ο νεοεισερχόμενος πράκτορας σε μια ικανοποιητική εκτίμηση.
Αυτό συμβαίνει διότι, όταν ένας πράκτορας εισέλθει για πρώτη φορά σε ένα περιβάλλον, δεν έχει κανένα ιστορικό αλληλεπιδράσεων με τους άλλους πράκτορες.
Έτσι, χρειάζεται πολύς χρόνος για να επιτευχθεί μια επαρκής ποσότητα αλληλεπιδράσεων που θα μπορούσε να οδηγήσει σε επαρκείς πληροφορίες.
Από την άλλη πλευρά, μοντέλα που βασίζονται μόνο σε αναφορές μαρτυριών τρίτων δεν μπορούν να εγγυηθούν αξιόπιστη εκτίμηση, δεδομένου ότι κάποιοι ιδιωφελείς πράκτορες πιθανόν να είναι απρόθυμοι ή ανίκανοι να διαθέσουν τους πόρους τους προκειμένου να παρέχουν αναφορές.
Επιπλέον, στα ανοικτά και κατανεμημένα περιβάλλοντα, όπως είναι τα πολυπρακτορικά, δεν υπάρχει μια κεντρική αρχή που να εποπτεύει και να ελέγχει το περιβάλλον.
Έτσι, οι μαρτυρίες των πρακτόρων που δρουν ή έδρασαν κάποια στιγμή στο περιβάλλον πιθανόν να είναι δύσκολο να εντοπισθούν.
Φυσικά, μια λύση για να αντιμετωπιστεί αυτό το ζήτημα είναι με την χρήση κάποιας μορφής κεντρικού μηχανισμού που θα συλλέγει όλες τις αναφορές [Zacharia & Maes, 2000], όπως συμβαίνει στα κεντρικά μοντέλα.
Επομένως, μοντέλα που βασίζονται μόνο στη μία ή την άλλη προσέγγιση συνήθως δεν μπορούν να εγγυηθούν σταθερή και αξιόπιστη εκτίμηση.
Για να ξεπεραστούν αυτά τα ζητήματα, ορισμένοι ερευνητές, όπως και στην παρούσα διατριβή, έχουν προτείνει υβριδικά μοντέλα που, καταρχήν, συνδυάζουν τόσο την εμπιστοσύνη από την άμεση εμπειρία όσο και την γνώμη τρίτων [Artz & Gil, 2007;
Κεφάλαιο 6 – Αναιρέσιμη Λογική και Ευφυείς Πράκτορες στο Σημασιολογικό Ιστό
Ωστόσο, τα περισσότερα από τα υβριδικά μοντέλα είτε έχουν σταθερό ποσοστό της ενεργού συμμετοχής κάθε παραμέτρου στην τελική εκτίμηση είτε αφήνουν την επιλογή στον τελικό χρήστη.
Αν και αυτές οι προσεγγίσεις έχουν σημαντικά πλεονεκτήματα, μερικές φορές μπορεί να οδηγήσουν σε παραπλανητικές εκτιμήσεις.
Οι χρήστες μπορεί να έχουν μικρή ή καθόλου εμπειρία και, ως εκ τούτου, μπορεί να λάβουν λάθος αποφάσεις που θα μπορούσαν να οδηγήσουν σε λάθος εκτιμήσεις, ενώ από την άλλη πλευρά οι σταθερές τιμές παρέχουν μόνο γενικές εκτιμήσεις.
Στόχος ωστόσο δεν είναι να αποξενωθούν οι χρήστες από τη διαδικασία λήψης αποφάσεων, αλλά κατάλληλα μοντέλα να βοηθήσουν τους ίδιους και τους πράκτορες τους να λάβουν καλύτερες αποφάσεις.
Σε αυτό το πλαίσιο, η παρούσα διατριβή πραγματεύεται την σχεδίαση και υλοποίηση νέων, πρωτότυπων υβριδικών προσεγγίσεων που αντιμετωπίζουν αποτελεσματικά τα παραπάνω ζητήματα.
Αρχικά, μελετώνται οι αρχές της κεντρικής προσέγγισης και προτείνονται τρία τέτοια μοντέλα, το SERM [Kravari et al., 2010b;
Kravari & Bassiliades, 2012b], το T-REX [Kravari et al., 2010a] και το HARM [Kravari & Bassiliades, 2012a].
Τα μοντέλα αυτά επιχειρούν να εξασφαλίσουν την βέλτιστη απόδοση της πραγματικής φήμης ενός πράκτορα.
Απώτερος στόχος είναι κάθε μοντέλο ξεχωριστά να αναπαριστά τις διαπροσωπικές σχέσεις του πραγματικού κόσμου, να οδηγεί σε λογικά και ρεαλιστικά συμπεράσματα παρόμοια με την ανθρώπινη λογική, και να είναι σε θέση να συλλάβει τις προτιμήσεις και τις ιδιαιτερότητες κάθε περίπτωσης ξεχωριστά.
Στην συνέχεια μελετώνται οι αρχές της κατανεμημένης προσέγγισης και προτείνονται δύο κατανεμημένα μοντέλα φήμης, το DRM [Kravari et al., 2010b;
Kravari & Bassiliades, 2012b], που βασίζεται σε δύο από τα πλέον αξιοσημείωτα μοντέλα της βιβλιογραφίας, το SPORAS [Zacharia & Maes, 2000] και το Certified Reputation [Huynh et al., 2006b], και το DISARM [Kravari & Bassiliades, 2014], που εισάγει μια κοινωνική διάσταση στην δράση και στην αξιοπιστία των ευφυών πρακτόρων.
Τα προβλήματα των κατανεμημένων προσεγγίσεων, όπως ο εντοπισμός των αναφορών, δεν μπορούν να εξαλειφθούν, μπορούν όμως να περιοριστούν.
Στόχος της παρούσας διατριβής είναι τα προτεινόμενα κατανεμημένα μοντέλα να υποστηρίζουν τους πράκτορες, έτσι ώστε να λάβουν την βέλτιστη για αυτούς απόφαση παρά τις όποιες αντικειμενικές δυσκολίες εντοπισμού αναφορών.
Τέλος, μελετώνται άλλες παρόμοιες προσεγγίσεις μοντέλων, οι οποίες συγκρίνονται με τα μοντέλα της παρού-
Κεντρική Διαχείριση Αξιοπιστίας Στις κεντρικές προσεγγίσεις, οι πράκτορες μαθαίνουν πιο εύκολα και πιο γρήγορα την φήμη κάποιου άλλου πράκτορα.
Ωστόσο, τις περισσότερες φορές η φήμη σε ένα κεντρικό σύστημα αντανακλά μόνο τη γνώμη του κοινού για έναν πράκτορα.
Αυτό συμβαίνει γιατί στην πλειονότητα των μοντέλων, όλες οι διαθέσιμες αξιολογήσεις για αυτόν τον πράκτορα μετρούν ισότιμα.
Ακόμη χειρότερα αν δεν υπάρχουν σαφή κριτήρια αξιολόγησης στο μοντέλο, ένας πράκτορας που δεν συμβαδίζει με τον τρόπο αξιολόγησης της πλειοψηφίας των πρακτόρων του περιβάλλοντος θα μπορούσε να οδηγηθεί σε μια πραγματικά παραπλανητική φήμη.
Ουσιαστικά, αν δεν ληφθεί κατάλληλη μέριμνα, η μεταφορά των αξιολογήσεων στον κεντρικό πράκτορα διαχειριστή οδηγεί σε απώλεια πληροφοριών αναφορικά με τις προσωπικές προτιμήσεις και τα κριτήρια κάθε πράκτορα-αξιολογητή.
Σε αυτό το πλαίσιο, προτάθηκε η ιδέα του συνεργατικού φιλτραρίσματος [Breese et al., 1998] έτσι ώστε σε μια κεντρική μέθοδο να παρέχονται εξατομικευμένες αξιολογήσεις για κάθε πράκτορα.
Όμως, παρά την πρόταση τέτοιων προσεγγίσεων, τα κεντρικά συστήματα συνεχίζουν να μην λαμβάνουν υπόψη κάθε πιθανή πληροφορία και προτίμηση και επομένως δεν εξασφαλίζουν διαφοροποιημένες τιμές φήμης για κάθε πράκτορα.
Όμως, τα μοντέλα SERM, T-REX και HARM που προτείνονται στην συνέχεια συνδυάζουν, το καθένα με τον δικό του τρόπο, όλες τις δυνατές πληροφορίες, καταλήγοντας σε ρεαλιστικά συμπεράσματα και εξασφαλίζοντας υψηλή απόδοση στους πράκτορες που τα χρησιμοποιούν.
Το μοντέλο SERM είναι μια πρώτη κεντρική προσέγγιση που σχεδιάστηκε και υλοποιήθηκε στο πλαίσιο EMERALD, χωρίς, ωστόσο, αυτό να σημαίνει ότι δεν μπορεί να χρησιμοποιηθεί και έξω από αυτό.
Στο SERM ως κεντρική διαχειριστική αρχή ορίστηκε η πιστοποιημένη υπηρεσία AYPS.
Φυσικά, οποιοσδήποτε πιστοποιημένος πράκτορας μέσα σε ένα πολυπρακτορικό περιβάλλον θα μπορούσε να αναλάβει αυτό τον ρόλο.
Ευθύνη του πράκτορα-διαχειριστή είναι να διατηρεί τις αναφορές των αξιολογήσεων που δίνονται από τους υπόλοιπους πράκτορες του περιβάλλοντος και κάθε φορά που του ζητείται η τιμή της φήμης ενός πράκτορα να την υπολογίζει και να την επιστρέφει σε αυτόν που τη ζήτησε.
Σε αυτό το πλαίσιο, πρωταρχικός στόχος του μοντέλου SERM είναι να δώσει την δυνατότητα στους πράκτορες του περιβάλλοντος όχι μόνο να αξιολογούν ο ένας την επίδοση του άλλου αλλά να αξιολογούν και τις υπηρεσίες συλλογιστικής που παρέχονται από τους ειδικούς πράκτορες Reasoners του EMERALD.
Για το λόγο αυτό, το μοντέλο επικεντρώνεται κυρίως σε κριτήρια κατάλληλα για την αξιολόγηση τέτοιων υπηρεσιών.
Ειδικότερα, κάθε αναφορά αξιολόγησης στο μοντέλο SERM έχει την μορφή: όπου το a αναφέρεται στον πράκτορα αξιολογητή truster, το b αναφέρεται στον υπό αξιολόγηση πράκτορα trustee, ενώ η ορθότητα (Correctness) Corri, η πληρότητα (Completeness) Compi, η ευελιξία (Flexibility) Flexi, δηλαδή η ικανότητα του πράκτορα να ανταποκρίνεται σε μη αναμενόμενα αιτήματα (π.χ. αίτημα που περιλαμβάνει κάποιο συνώνυμο των στοιχείων που αναμένει να λάβει), και ο χρόνος απόκρισης (Response time) Respi είναι τα κριτήρια αξιολόγησης.
Οι βαθμολογίες των αξιολογήσεων κυμαίνονται από -1 (απαράδεκτο) έως 1 (ιδανικό), Refi[-1,1], ενώ οι νεοεισερχόμενοι πράκτορες ξεκινούν με τιμή 0, δηλαδή με ουδέτερη φήμη.
Η τελική τιμή της φήμης (TR) βασίζεται στο σταθμισμένο άθροισμα όλων των σχετικών αναφορών (iN) που βρίσκονται αποθηκευμένες στην υπηρεσία AYPS και υπολογίζεται σύμφωνα με τον τύπο:
Σε αυτό το πλαίσιο, το μοντέλο υποστηρίζει δύο επιλογές για την τιμή TR, μια προκαθορισμένη όπου όλα τα βάρη είναι ισότιμα, δηλαδή pi=0.25, και μια όπου τα βάρη καθορίζονται από τον χρήστη με την τιμή τους να κυμαίνεται από 0 έως 1 ανάλογα με τις προτιμήσεις του.
Η απλή μετρική αξιολόγησης του μοντέλου, οδηγεί σε κέρδος χρόνου καθώς χρειάζεται λιγότερος χρόνος για την αξιολόγηση και τον υπολογισμό από ότι χρειάζονται περισσότερο πολύπλοκες ή κατανεμημένες προσεγγίσεις.
Επιπλέον, παρέχει πιο εγγυημένα και αξιόπιστα αποτελέσματα για την τιμή της φήμης ενός πράκτορα δεδομένου ότι παρέχεται από την πιστοποιημένη υπηρεσία AYPS, ξεπερνώντας έτσι το πρόβλημα του εντοπισμού των αναφορών που παρατηρείται στις κατανεμημένες προσεγγίσεις.
Το μοντέλο SERM επομένως είναι κατάλληλο για την αξιολόγηση υπηρεσιών όπως αυτές της συλλογιστικής που παρέχονται από το πλαίσιο EMERALD, συνδυάζοντας μια απλή και γρήγορη μετρική με τα κατάλληλα κριτήρια αξιολόγησης.
Θα μπορούσε το μοντέλο αυτό να χρησιμοποιηθεί συνδυαστικά με άλλα μοντέλα φήμης και εμπιστοσύνης έτσι ώστε να εξασφαλιστεί ότι ο ενδιαφερόμενος πράκτορας θα επιλέξει την πιο αξιόπιστη υπηρεσία συλλογιστικής (SERM) και τον πιο αξιόπιστο πράκτορα στο περιβάλλον (κάποιο άλλο μοντέλο όπως τα παρακάτω) για να συναλλαγεί.
Είναι φανερό λοιπόν ότι στα πλαίσια μιας συναλλαγής κάθε πράκτορας είναι σε θέση να χρησιμοποιεί περισσότερα από ένα μοντέλα, έτσι ώστε να λαμβάνει την βέλτιστη πληροφορία κατά περίπτωση.
Το μοντέλο T-REX [Kravari et al., 2010] είναι ένα κεντρικό σύστημα διαχείρισης αξιοπιστίας που συνδυάζει την εμπιστοσύνη που εδραιώθηκε μέσω προσωπικής αλληλεπίδρασης με την φήμη που αποκτήθηκε μέσω μαρτυρίων τρίτων.
Ένας ειδικός πράκτορας είναι επιφορτισμένος με την διαχείριση του, ονομάζεται Trustor και είναι υπεύθυνος για την συλλογή, την αποθήκευση και την διατήρηση των αναφορών.
Έτσι, κάθε φορά που ένας πράκτορας ζητά την τιμή της φήμης ενός άλλου πράκτορα, ο Trustor πρέπει να υπολογίσει, σύμφωνα με την μετρική του μοντέλου, την τελική τιμή της φήμης του πράκτορα αυτού και να την επιστρέψει σε αυτόν που την ζήτησε.
Φυσικά, ο πράκτορας Trustor θεωρείται πιστοποιημένος από το πρωτόκολλο και ως εκ τούτου αξιόπιστος.
Μηχανισμός Αξιολόγησης του Μοντέλου T-REX Πιο συγκεκριμένα, σύμφωνα με το μοντέλο T-REX κάθε φορά που δύο πράκτορες αλληλεπιδρούν, ο καθένας από αυτούς δύναται να αξιολογήσει την απόδοση του έτερου πράκτορα και επομένως να επηρεάσει την φήμη του.
Στο πλαίσιο αυτό, ο πράκτορας που αξιολογεί ονομάζεται truster ενώ αντίστοιχα ο υπό αξιολόγηση πράκτορας ονομάζεται trustee.
Έτσι, μετά από κάθε συναλλαγή στο περιβάλλον ο truster πρέπει να αξιολογήσει τις ικανότητες του trustee και να αναφέρει την αξιολόγηση του αναφορικά με την ορθότητα (correctness), την πληρότητα (completeness) και τον χρόνο απόκρισης (response time) στον πράκτορα διαχειριστή (Trustor) (Εικόνα 6.1).
Ο πράκτορας Trustor από την πλευρά του αποθηκεύει τις βαθμολογίες των εν λόγω αξιολογήσεων υπό τη μορφή αναφορών: όπου a, b, Corr, Resp και Comp συμβολίζουν αντίστοιχα τον πράκτορα αξιολογητή (truster), τον υπό αξιολόγηση πράκτορα (trustee), την ορθότητα (correctness), τον χρόνο απόκρισης (response time) και την πληρότητα (completeness).
Προκειμένου να διευκολυνθεί η παρουσίαση της μετρικής του μοντέλου, οι δείκτες Corr, Resp και Comp αντιστοιχίζονται στους δείκτες 1, 2 και 3 αντίστοιχα, και έτσι οι βαθμολογίες των αξιολογήσεων αναφέρονται πλέον ως rx.
Η μεταβλητή t λειτουργεί ως χρονική σφραγίδα και χρησιμοποιείται από τον διαχειριστή-πράκτορα Trustor για να οργανώνει τα αρχεία των αναφορών που συλλέγει.
Θα πρέπει να σημειωθεί ότι αναφορές με υψηλότερη χρονική σφραγίδα θεωρούνται πιο σημαντικές καθώς αναφέρονται σε πιο πρόσφατες αξιολογήσεις.
Επομένως, η προσέγγιση του μοντέλου T-REX ξεπερνά το κύριο πρόβλημα που αντιμετωπίζεται στα δυναμικά περιβάλλοντα, όπως είναι τα πολυπρακτορικά, όπου οι πράκτορες ενδέχεται να αλλάξουν τους στόχους τους ανά πάσα στιγμή.
Ως αποτέλεσμα, ένας αξιόπιστος πράκτορας (την χρονική στιγμή t0) μπορεί να μετατραπεί σε έναν στρατευμένο και κακόβουλο πράκτορα (την χρονική
Στο μοντέλο T-REX οι βαθμολογίες των αξιολογήσεων κυμαίνονται από 0.1 (απαράδεκτο) έως 10 (ιδανικό), δηλαδή rx[0.1, 10] | x{1,2,3}.
Ωστόσο, ο διαχειριστής πράκτορας Trustor προκειμένου να απαλείψει τις ακραίες θετικές ή τις ακραίες αρνητικές τιμές υπολογίζει κάθε βαθμολογία λογαριθμικά.
Ως εκ τούτου, κάθε βαθμολογία κανονικοποιείται (r[-1, 1] | -1 ≡ απαράδεκτο, 1 ≡ ιδανικό) και αποθηκεύεται στο αποθετήριο του πράκτορα Trustor αποτελώντας πια μια επίσημα καταγεγραμμένη αναφορά.
Έτσι, η τελική τιμή φήμης κυμαίνεται από -1 έως 1, όπου -1, +1 και 0 συμβολίζουν την απολύτως αρνητική, την απολύτως θετική και την ουδέτερη (τιμή που χρησιμοποιείται επίσης και για τους νεοεισερχόμενους) φήμη αντίστοιχα, γεγονός που σημαίνει ότι η φήμη κάθε πράκτορα θα μπορούσε να είναι είτε αρνητική είτε θετική.
Η επιλογή της ουδέτερης φήμης για τους νεοεισερχόμενους πράκτορες προέκυψε από το γεγονός ότι μια χαμηλή αρχική φήμη θα καθιστούσε πιθανότατα αρκετά δύσκολη την απόδειξη της αξιοπιστίας ενός πράκτορα ενώ μια υψηλή αρχική φήμη θα καθιστούσε απαραίτητη την λήψη ενεργειών για τον περιορισμό της εξόδου και επανεισόδου των «κακών» πρακτόρων στο περιβάλλον.
Επιπλέον, κάθε φορά που ένας πράκτορας ζητά την τιμή της φήμης κάποιου άλλου πράκτορα, μπορεί να καθορίσει με τη χρήση βαρών πόσο σημαντικές είναι οι παραπάνω κανονικοποιημένες αναφορές για αυτόν (τύπος 6.2).
Για παράδειγμα, ένας πράκτορας μπορεί να θεωρεί πιο σημαντικό το χρόνο απόκρισης (π.χ. 50% στην τελική τιμή) από ότι την ορθότητα (π.χ. 35%) ή την πληρότητα (15%).
Στον τύπο που ακολουθεί παρουσιάζεται ο τρόπος με τον οποίο υπολογίζονται οι σταθμισμένες κανονικοποιημένες βαθμολογίες: όπου a, b, rx, px συμβολίζουν τον πράκτορα αξιολογητή truster, τον υπό αξιολόγηση πράκτορα trustee, τις βαθμολογίες και τα βάρη (για κάθε βαθμολογία) αντίστοιχα.
Η τελική τιμή της φήμης (TR) ενός πράκτορα, για μια δεδομένη χρονική στιγμή t, βασίζεται στο σταθμισμένο άθροισμα των σχετικών αναφορών (κανονικοποιημένων βαθμολογίων) που βρίσκονται αποθηκευμένες στο αποθετήριο του διαχειριστή πράκτορα Trustor.
Ο υπολογισμός της τιμής προκύπτει από την εφαρμογή του τύπου που ακολουθεί.
Υπάρχουν ωστόσο δύο σημαντικές πτυχές σε αυτόν τον τύπο.
Κάθε φορά που ένας πράκτορας a ζητά την φήμη ενός άλλου πράκτορα b, υπάρχουν δύο σημαντικά ζητήματα που πρέπει να ληφθούν υπόψη.
Το πρώτο είναι ότι οι κανονικοποιημένες αξιολογήσεις χωρίζονται σε δύο ομάδες, μια που αφορά στις συναλλαγές μεταξύ a και b (rab) και μια που αφορά στις συναλλαγές μεταξύ b και κάθε ενός (j) από τους υπόλοιπους πράκτορες (rjb), διαχωρίζοντας τις αξιολογήσεις σε προσωπική εμπειρία και μαρτυρίες τρίτων, αντίστοιχα.
Το δεύτερο είναι ότι ο χρήστης, μέσω του πράκτορα-εκπροσώπου του a, είναι σε θέση να ορίσει αυτό που ονομάζουμε «βάρη κοινωνικής εμπιστοσύνης» (πp, πo).
Αυτά τα βάρη καθορίζουν την ισορροπία μεταξύ προσωπικής εμπειρίας (πp) και μαρτυριών τρίτων (πo), οι οποίες είναι στην πραγματικότητα απόψεις που παρέχονται από αγνώστους.
Επομένως, η τιμή TR υπολογίζεται ανάλογα με το τι είναι πιο σημαντικό για τον τελικό χρήστη, η δική του προσωπική εμπειρία ή η γνώμη των μαρτύρων.
Τέλος, ο χρόνος, όπως έχει ήδη αναφερθεί, είναι σημαντικός και με την σειρά του επηρεάζει την τελική τιμή, καθώς οι πιο πρόσφατες αξιολογήσεις «βαραίνουν» περισσότερο.
Αυτό επιτυγχάνεται με πολλαπλασιασμό της βαθμολογίας για την χρονική στιγμή ti, με την ίδια την χρονική στιγμή ti.
Αυτή η χρονοσφραγίδα μπορεί, για παράδειγμα, να αναπαρίσταται στην μορφή YYMMDDHHMMSS, YYMMDD ή HHMMSS ή ακόμη και ως ένας ακέραιος στην περίπτωση πειραματικών προσομοιώσεων.
Πλεονεκτήματα του Μοντέλου T-REX Το μοντέλο T-REX είναι ένα δυναμικό και ευέλικτο μοντέλο, που επιτρέπει στον χρήστη όχι μόνο να καθορίζει την σημαντικότητα του κάθε κριτηρίου αξιολόγησης αλλά και να μετατρέπει το ίδιο το μοντέλο από ένα σύστημα μαρτυριών σε ένα απολύτως υποκειμενικό σύστημα που βασίζεται μόνο στην προηγούμενη προσωπική εμπειρία.
Έτσι, μπορεί να εφαρμοστεί σε ποικίλες εφαρμογές, όπως για παράδειγμα διαπραγματεύσεις μεταξύ πρακτόρων, δημοπρασίες και συναλλαγές ηλεκτρονικού εμπορίου.
Επιπλέον, παρέχει ένα αξιόπιστο σύστημα, καθώς βασίζεται σε έναν κεντρικό πιστοποιημένο μηχανισμό που παρέχεται από τον Trustor, τον πράκτορα διαχειριστή του μοντέλου.
Τα κεντρικά συστήματα βέβαια αντιμετωπίζονται συνήθως με σκεπτικισμό, καθώς στα ανοικτά πολυπρακτορικά συστήματα οι πράκτορες εκπροσωπούν διαφορετικούς ιδιοκτήτες, οι οποίοι ενδέχεται να αμφισβητήσουν την αξιοπιστία μιας κεντρικής αρχής.
Ωστόσο, το μοντέλο T-REX υπερνικά αυτό το ζήτημα παρέχοντας μια πιστοποιημένη αρχή, υλοποιημένη στο EMERALD που έχει ως βάση του το JADE, ένα αξιόπιστο και ευρέως χρησιμοποιούμενο πολυπρακτορικό πλαίσιο.
Ως εκ τούτου, ο Trustor είναι πάντοτε ειλικρινής, υπολογίζοντας και επιστρέφοντας πάντα την σωστή τιμή TR.
Αντίθετα, σε κάποια κατανεμημένη προσέγγιση όπου οι πράκτορες που αξιολογούνται συλλέγουν και κρατούν μόνοι τους τις βαθμολογίες που τους αφορούν, [Huynh et al, 2006b;
Sabater & Sierra, 2001], ένας κακόβουλος πράκτορας με χαμηλή τιμή φήμης θα μπορούσε να παρέχει μόνο τις θετικές αξιολογήσεις σε μια προσπάθεια να εξαπατήσει τους εταίρους του.
Επιπλέον, το T-REX παρέχει ένα μηχανισμό με χαμηλό εύρος ζώνης και χαμηλό αποθηκευτικό κόστος.
Από την μια πλευρά οι υπό αξιολόγηση πράκτορες δεν χρειάζεται να μεταδώσουν ή να αποθηκεύσουν τίποτα και από την άλλη πλευρά οι πράκτορες που αξιολογούν αναφέρουν την αξιολόγηση τους σε ένα και μόνο βήμα επικοινωνίας, π.χ. ένα ACL μήνυμα, το οποίο έχει εξαιρετικά χαμηλό κόστος.
Έτσι, κανείς από τους πράκτορες δεν χρειάζεται να ανησυχεί για την αποθήκευση όλων αυτών των αξιολογήσεων, καθώς πάντα θα είναι διαθέσιμες για μελλοντική αναφορά μέσω του Trustor.
Ο πράκτορας Trustor άλλωστε επωμίζεται το συνολικό υπολογιστικό και αποθηκευτικό κόστος.
Πρακτικά, ωστόσο, η τελική υπολογιστική πολυπλοκότητα του Trustor είναι μόνο O(1).
Αναπόφευκτα όμως, η αποθηκευτική πολυπλοκότητα είναι O(n*n).
Μείωση της Υπολογιστικής Πολυπλοκότητας Το μοντέλο T-REX υλοποιήθηκε, αρχικά, στο γνωστό πολυπρακτορικό πλαίσιο JADE και, εν τέλει, ενσωματώθηκε στο πλαίσιο EMERALD.
Στο πλαίσιο αυτής της υλοποίησης έγινε μια προσπάθεια να μειωθεί η υπολογιστική πολυπλοκότητα του μοντέλου.
Έτσι, ο τελικός τύπος (6.3) του μοντέλου αναθεωρήθηκε.
Πρακτικά, η υπολογιστική πολυπλοκότητα του τύπου (6.3) είναι υψηλή, καθώς υπάρχει ένα διπλό άθροισμα στο δεύτερο μέρος του τύπου.
Από την μια πλευρά το εσωτερικό άθροισμα εκτείνεται σε κάθε προηγούμενο χρονικό βήμα και από την άλλη το εξωτερικό άθροισμα εκτείνεται σε όλους τους πράκτορες, εκτός φυσικά των a και b.
Έτσι, κατά τον χρόνο εκτέλεσης η υπολογιστική πολυπλοκότητα του (6.3) είναι O(n*t), όπου n είναι ο αριθμός των πρακτόρων που δρουν στο σύστημα και t είναι ο συνολικός αριθμός των συναλλαγών.
Σε ένα ανοικτό, δυναμικό και εξελισσόμενο πολυπρακτορικό περιβάλλον και οι δύο αυτοί αριθμοί όπως είναι φυσικό αυξάνονται ραγδαία.
Για να μειωθεί επομένως το υπολογιστικό κόστος κατά τον χρόνο εκτέλεσης πρέπει ο Trustor να αθροίζει και να αποθηκεύει πολλαπλές τιμές, επιπρόσθετα των πρωταρχικών αναφορών που λαμβάνει.
Έτσι, ο πράκτορας Trustor δεν αποθηκεύει πλέον απλά τις κανονικοποιημένες βαθμολογίες των αξιολογήσεων (τύπος 6.2), αλλά τις πολλαπλασιάζει πρώτα με ti, τη χρονoσφραγίδα τους.
Επιπλέον, αθροίζει και τις βαθμολογίες που αφορούν στις συναλλαγές μεταξύ δύο συγκεκριμένων πρακτόρων.
Έτσι, αντικαταστάθηκαν οι τιμές rab and rjb του τελικού τύπου (6.3) με την χρήση του τύπου 6.2 όπως παρουσιάζεται παρακάτω. 𝑞𝑦(𝑡)) ∙ 𝑡𝑖∀𝑡𝑖<𝑡 , όπου q{a, j} και y≡b, δεν είναι απαραίτητο να υπολογιστεί κατά τον χρόνο εκτέλεσης.
Θα μπορούσε να υπολογίζεται επαυξητικά, κάθε φορά που λαμβάνεται μια καινούργια αναφορά.
Επομένως, το παραπάνω άθροισμα μπορεί 𝑞𝑦(𝑡).
Ομοίως, το άθροισμα ∑ 𝑡𝑖 ∀𝑡𝑖<𝑡 , το οποίο αναπαρίσταται ως T(t), θα μπορούσε επίσης να υπολογιστεί επαυξητικά.
Επομένως, ο τύπος μπορεί τελικά να γραφεί εκ νέου στην ακόλουθη μορφή:
Σε αυτό το σημείο, η υπολογιστική πολυπλοκότητα μειώνεται σε O(n), συγκρινόμενη με την αρχική O(n*t) του τύπου 6.3, δεδομένου ότι υπάρχει πια μόνο ένα άθροισμα που εκτείνεται μέχρι τον αριθμό των πρακτόρων.
Ωστόσο, υπάρχει μια αναπόφευκτη επιβάρυνση στην αποθηκευτική πολυπλοκότητα καθώς χρειάζεται πλέον περισσότερος χώρος στη μνήμη.
Η αποθήκευση όλων αυτών των αθροισμάτων οδηγεί σε μια πολυπλοκότητα της τάξης του O(n2), κάτι που είναι ανεκτό με δεδομένο ότι οι ποσότητες 𝜎𝑥 λογίζονται και να αποθηκεύονται για κάθε πρακτορικό ζεύγος q-y.
Προχωρώντας ακόμη ένα βήμα, γίνεται εμφανές ότι οι μεταβλητές x και j στον παραπάνω τύπο (6.5) είναι ανεξάρτητες, επομένως τα αθροίσματα μπορούν να μετατεθούν:
Ακόμη, υπολογίζοντας και αποθηκεύοντας τις ποσότητες ∑ 𝜎𝑥 𝑎𝑏(𝑡), η τελική αναθεωρημένη μετρική του μοντέλου γίνεται:
Η υπολογιστική πολυπλοκότητα μειώνεται τελικά σε O(1), καθώς δεν υπάρχουν πια στην μετρική αθροίσματα που να εξαρτώνται από το μέγεθος του προβλήματος.
Όμως, η αποθηκευτική πολυπλοκότητα παραμένει O(n*n), καθώς ο πράκτορας Trustor πρέπει επιπρόσθετα να αποθηκεύει μερικά ακόμη αθροίσματα 𝑆𝑥 𝑎𝑏(𝑡) για κάθε ζεύγος πρακτόρων.
Ο Διαχειριστής-Πράκτορας Trustor Ο διαχειριστής-πράκτορας Trustor είναι πλήρως υλοποιημένος στην γλώσσα Java και επικοινωνεί με τους υπόλοιπους πράκτορες μέσω ACL μηνυμάτων συγκεκριμένων τύπων (communication acts).
Για παράδειγμα, ένα νέο αίτημα, όπου ζητείται η τιμή φήμης ενός πράκτορα (TR), θεωρείται έγκυρο μόνο εάν είναι τύπου REQUEST.
Πιο συγκεκριμένα, κάθε φορά που ένας πράκτορας επιθυμεί να αναφέρει τις βαθμολογίες της αξιολόγησης του σχετικά με κάποιον άλλο πράκτορα, πρέπει να αποστείλει ένα ACL μήνυμα τύπου INFORM στον πράκτορα Trustor.
Το περιεχόμενο του μηνύματος αυτού πρέπει επίσης να ακολουθεί μια συγκεκριμένη μορφή, περιέχοντας αρχικά τους εμπλεκόμενους πράκτορες και στην συνέχεια τις τρεις βαθμολογίες, μια για κάθε κριτήριο όπως φαίνεται παρακάτω.
Αμέσως μόλις ο πράκτορας Trustor λάβει μια έγκυρη αναφορά υπολογίζει όλα τα απαραίτητα αθροίσματα, σύμφωνα με τους τύπους που έχουν αναλυθεί παραπάνω, και αποθηκεύει τις πληροφορίες στο αποθετήριο του.
Αργότερα, πιθανόν κάποιος πράκτορας να ζητήσει την τιμή φήμης για κάποιον άλλο πράκτορα, μέσω ενός ACL μηνύματος τύπου REQUEST.
Φυσικά και αυτό το μήνυμα θα πρέπει να ακολουθεί μια συγκεκριμένη μορφή, η οποία είναι η εξής (the_requester’s_name the_trustee’s_name pcorr presp pcomp πp πo), όπου pcorr, presp, pcomp είναι τα δοθέντα βάρη που καθορίζουν την σημαντικότητα του κάθε κριτηρίου και πp, πo είναι τα λεγόμενα «βάρη κοινωνικής εμπιστοσύνης» που καθορίζουν την σημαντικότητα της εμπειρίας του ίδιου του χρήστη σε σχέση με τις μαρτυρίες τρίτων.
Ο Trustor μετά από κάθε τέτοιο αίτημα υπολογίζει την τιμή TR και την αποστέλλει στον πράκτορα που την ζήτησε μέσω ενός μηνύματος τύπου INFORM.
Παράδειγμα Χρήσης του Μοντέλου T-REX Αυτή η ενότητα παρουσιάζει ένα παράδειγμα χρήσης σχετικό με την εμπορία λογισμικού.
Το σενάριο αυτό στοχεύει στο να επιδείξει την πλήρη λειτουργικότητα του μοντέλου και πιο συγκεκριμένα την χρησιμότητα του πράκτορα Trustor μέσα στο πολυπρακτορικό σύστημα αλλά και την ευκολία στην αξιολόγηση κάθε πράκτορα μέσα στο περιβάλλον.
Στα πλαίσια του σεναρίου ορίστηκε ένα πολυπρακτορικό σύστημα που απαρτίζεται από δυο ανεξάρτητες ομάδες πρακτόρων, η πρώτη αποτελείται από πράκτορες-πελάτες (Customer agents), οι οποίοι επιθυμούν να αγοράσουν ένα συγκεκριμένο λογισμικό, σύμφωνο με τις προτιμήσεις τους, και η δεύτερη αποτελείται από πράκτορες-παρόχους (Seller agents) που επιθυμούν να πουλήσουν το λογισμικό που κατέχουν.
Τέλος, στο σύστημα βρίσκεται και ο πράκτορας Trustor, ο οποίος είναι ανεξάρτητος και πιστοποιημένος, και είναι επιφορτισμένος με την διαχείριση του μηχανισμού που παρέχει το μοντέλο T-REX.
Πιο συγκεκριμένα σύμφωνα με τις προδιαγραφές του σεναρίου, αρχικά o πελάτης βρίσκει έναν πωλητή, ζητώντας για το σκοπό αυτό από τον Trustor να τον ενημερώσει σχετικά με το επίπεδο της αποτελεσματικότητας των πωλητών στις προηγούμενες συναλλαγές του μέσα στο περιβάλλον (βήμα 1).
Πρακτικά, επομένως, ο πράκτορας-πελάτης παρέχει μέσω ενός ACL (τύπου REQUEST) τα επιθυμητά βάρη για τα διαθέσιμα κριτήρια απόδοσης.
Ο Trustor από την πλευρά του χρησιμοποιεί αυτά τα βάρη για να υπολογίσει την τελική τιμή της φήμης για κάθε έναν από τους ζητούμενους πωλητές και επιστρέφει την πληροφορία αυτή μέσω ενός μηνύματος τύπου INFORM (βήμα 2).
Ο πελάτης με την σειρά του επιλέγει τον πιο έμπιστο πωλητή και επικοινωνεί μαζί του με σκοπό να αποκτήσει το κατάλληλο λογισμικό (βήμα 3).
Έτσι, ο πωλητής απαντά, αποστέλλοντας το ζητηθέν λογισμικό (βήμα 4) και ο πελάτης αξιολογεί τελικά τον χρόνο απόκρισης και την αποδοτικότητα του αναφέροντας την βαθμολογία του στον Trustor μέσω ενός ACL μηνύματος τύπου INFORM (βήμα 5).
Σύμφωνα με τα παραπάνω βήματα, όπως αυτά παρουσιάζονται στην Εικόνα 6.2, αναπτύχθηκαν τέσσερις πωλητές, με διαφορετικά χαρακτηριστικά αποδοτικότητας ο καθένας, και τρεις πελάτες.
Κάθε πελάτης ζητά ένα συγκεκριμένο λογισμικό από κάθε έναν από τους πωλητές και μετά από κάθε συναλλαγή αποστέλλει τις βαθμολογίες των αξιολογήσεων του στον διαχειριστή πράκτορα Trustor σχετικά με την ορθότητα των πληροφοριών που έλαβε, την ταχύτητα που τις έλαβε και το επίπεδο της πληρότητας.
Στη συνέχεια ο Trustor αποθηκεύει αυτές τις βαθμολογίες στο αποθετήριο του.
Ολόκληρη αυτή η διαδικασία παρουσιάζεται πρακτικά στην Εικόνα 6.3, η οποία αποτελεί απεικόνιση που λήφθηκε από τον πράκτορα sniffer της πλατφόρμας υλοποίησης JADE.
Το στιγμιότυπο αυτό παρουσιάζει τις συναλλαγές που εκτελέστηκαν από τον πρώτο από τους τρεις πράκτορες και τις προσπάθειες του Trustor να δημιουργήσει το ιστορικό του.
Αργότερα, όταν ένας πράκτορας πελάτης εισέλθει στο πολυπρακτορικό σύστημα και ζητήσει από τον Trustor τις τιμές της φήμης των πωλητών που δρουν σε αυτό, δίνοντας τα δικά του επιθυμητά βάρη, εκείνος θα είναι σε θέση να απαντήσει κατάλληλα.
Η διαδικασία αυτή παρουσιάζεται στην Εικόνα 6.4.
Σε αυτή την περίπτωση, ο πλέον αξιόπιστος πράκτορας είναι ο δεύτερος πωλητής (Seller 2).
Φυσικά, ο διαχειριστής πράκτορας Trustor έχει ήδη εποπτεύσει έναν αριθμό συναλλαγών μεταξύ των πρακτόρων και έτσι έχει ήδη δημιουργήσει ένα ικανοποιητικό ιστορικό αναφορών.
Αυτό επιτρέπει πλέον στο μοντέλο να λειτουργήσει είτε ως σύστημα μαρτυριών είτε ως προσωπικό σύστημα εκτίμησης.
Επομένως, ο πράκτορας Trustor παρέχει το υλοποιημένο μοντέλο T-REX, εγγυώμενος τις συναλλαγές μεταξύ των πρακτόρων.
Τέλος, πρέπει να σημειωθεί ότι η τιμή της φήμης κάθε πράκτορα δεν είναι προκαθορισμένη αλλά δυναμική, εξαρτώμενη από τα βάρη που παρέχει ο εκάστοτε ενδιαφερόμενος πράκτορας.
Επομένως, ένας καλός πράκτορας σύμφωνα με τις προτιμήσεις κάποιου πράκτορα πιθανόν να είναι κακός για κάποιον άλλο.
Προκειμένου να βελτιωθεί περισσότερο η αποτελεσματικότητα της υβριδικής προσέγγισης, προτείνεται ακόμη μια νέα πρωτότυπη λύση που συνδυάζει τα πλεονεκτήματα των υβριδικών μοντέλων με αυτά της χρήσης κανόνων, μέσα από το πρίσμα της χρονικής αναιρέσιμης λογικής.
Η χρονική αναιρέσιμη λογική (Temporal defeasible logic TDL), όπως έχει ήδη παρουσιαστεί, αποτελεί επέκταση της αναιρέσιμης λογικής, που αναπτύχθηκε για να συλλάβει την έννοια της χρονικής επιμονής [Governatori & Terenziani, 2007], ένα ιδιαίτερα σημαντικό ζήτημα κατά την εκτίμηση της φήμης, καθώς οι πράκτορες μπορούν να αλλάξουν τους στόχους τους ανά πάσα στιγμή.
Στην πράξη, η χρονική αναιρέσιμη λογική, όντας μημονότονη λογική, έχει την ικανότητα να μοντελοποιεί τον τρόπο που οι ευφυείς πράκτορες και οι άνθρωποι καταλήγουν σε λογικά συμπεράσματα έχοντας ανεπαρκείς ή/και αντικρουόμενες πληροφορίες, επιτρέποντας τους να τα αναθεωρήσουν ανά πάσα στιγμή υπό το πρίσμα νέων πληροφοριών.
Σε αυτό το πλαίσιο, το μοντέλο HARM [Kravari & Bassiliades, 2012a] αποτελεί μια υβριδική προσέγγιση, βασισμένη σε κανόνες χρονικής αναιρέσιμης λογικής, που συνδυάζει την εμπιστοσύνη από την άμεση εμπειρία με τις μαρτυρίες τρίτων για την εκτίμηση της φήμης των πρακτόρων.
Πρόκειται για μια βασισμένη στη γνώση προσέγγιση, που παρέχει μια πιο διαισθητική μέθοδο για τους μη τεχνικούς χρήστες, επιτρέποντάς τους να καταλήξουν σε λογικά και ρεαλιστικά συμπεράσματα παρόμοια με τη δική τους συλλογιστική.
Επιπλέον, το HARM παρέχει ένα σταθερό και αξιόπιστο μηχανισμό εκτίμησης, σύμφωνα με μια κεντρική αρχή διαχείρισης (πράκτορας), ξεπερνώντας την δυσκολία στον εντοπισμό των μαρτυριών.
Βασίζεται σε καλά καθιερωμένες παραμέτρους εκτίμησης [Castelfranchi & Tan, 2001;
Castelfranchi & Falcore, 2010], όπως η ορθότητα της πληροφορίας, η πληρότητα, η εγκυρότητα και ο χρόνος απόκρισης του πράκτορα.
Επιπλέον, παρέχει χαμηλό εύρος ζώνης και χαμηλή υπολογιστική πολυπλοκότητα.
Αρχιτεκτονική του Μοντέλου HARM Στο πλαίσιο της ανάπτυξης του μοντέλου HARM, επιλέχθηκαν για ακόμη μια φορά τέσσερις ιδιότητες αξιολόγησης, η εγκυρότητα (validity), η πληρότητα (completeness), η ορθότητα (correctness) και ο χρόνος απόκρισης (response time) [Castelfranchi & Falcone, 2010;
H εγκυρότητα (validity) είναι η σύζευξη της ειλικρίνειας (sincerity) και της αξιοπιστίας (credibility).
Ένας πράκτορας είναι ειλικρινής όταν πιστεύει αυτά που λέει, ενώ είναι αξιόπιστος όταν αυτό που πιστεύει πράγματι ισχύει στον κόσμο.
Επομένως, ένας πράκτορας είναι έγκυρος εάν είναι και ειλικρινής και αξιόπιστος.
Η πληρότητα (completeness), από την άλλη πλευρά, είναι η σύζευξη της συνεργατικότητας (cooperativity) και της εγρήγορσης (vigilance).
Η συνεργατικότητα αποτελεί το συμπλήρωμα της ειλικρίνειας, δηλαδή ένας πράκτορας είναι συνεργατικός όταν λέει αυτό που πιστεύει.
Κατά τον ίδιο τρόπο, η εγρήγορση αποτελεί το συμπλήρωμα της αξιοπιστίας, δηλαδή ένας πράκτορας βρίσκεται σε εγρήγορση όταν πιστεύει αυτό που όντως ισχύει τον κόσμο.
Επιπρόσθετα, η ορθότητα αναφέρεται στις υπηρεσίες που παρέχει ένας πράκτορας.
Ένας πράκτορας είναι ορθός εάν η παρεχόμενη υπηρεσία του είναι σωστή σε σχέση με τις προδιαγραφές.
Τέλος, ο χρόνος απόκρισης αναφέρεται στο χρόνο που χρειάζεται ένας πράκτορας προκειμένου να ολοκληρώσει τη συναλλαγή.
Όπως είναι γνωστό, ο πράκτορας που αξιολογεί ονομάζεται truster (A) και ο υπό αξιολόγηση πράκτορας ονομάζεται trustee (B).
Για ορισμένες συναλλαγές ένας πράκτορας μπορεί να είναι τόσο αξιολογητής όσο και αξιολογούμενος, δεδομένου ότι μπορεί να αξιολογήσει τον εταίρο του, ενώ παράλληλα αξιολογείται και από εκείνον.
Μετά από κάθε συναλλαγή στο περιβάλλον, ο πράκτορας truster οφείλει να αξιολογήσει τις ικανότητες του trustee και να αναφέρει τις βαθμολογίες του, αναφορικά με την εγκυρότητα, την πληρότητα, την ορθότητα και το χρόνο απόκρισης.
Ωστόσο, αυτό δεν είναι αρκετό.
Ο truster πρέπει να αναφέρει πόσο βέβαιος είναι για την βαθμολογία του και πόσο σημαντική ήταν η συναλλαγή για αυτόν.
Η βεβαιότητα αυτή δίνει μια εκτίμηση της σιγουριάς του truster, ενώ η σημαντικότητα της συναλλαγής υποδεικνύει πόσο κρίσιμη ήταν η συναλλαγή για αυτόν, επιτρέποντας μας να αποφασίσουμε πόση προσοχή θα πρέπει να δώσουμε στη βαθμολογία του.
Λαμβάνοντας τα ανωτέρω υπόψη η αξιολόγηση (r) του truster στο μοντέλο HARM έχει οκτώ συντελεστές με την μορφή (truster, trustee, validity, completeness, correctness, re-
Στο HARM η βεβαιότητα (confidence) και η σημαντικότητα (transaction value) κυμαίνονται από 0 (0%) έως 1 (100%) , ενώ οι υπόλοιπες βαθμολογίες κυμαίνονται από 0.1 (απαράδεκτο) έως 10 (ιδανικό), r[0.1, 10].
Για την καλύτερη ανάλυση των δεδομένων αξιολόγησης, προτείνεται απαλοιφή των ακραίων θετικών ή ακραίων αρνητικών τιμών, δηλαδή λογαριθμικός μετασχηματισμός των τιμών της αξιολόγησης.
Το πιο σημαντικό χαρακτηριστικό του λογάριθμου είναι ότι κινεί τις μεγάλες τιμές πιο κοντά ενώ απομακρύνει τις μικρές.
Αυτό είναι χρήσιμο για την ανάλυση των δεδομένων, διότι πολλές στατιστικές τεχνικές λειτουργούν καλύτερα με συμμετρικά δεδομένα που συγκεντρώνονται γύρω από μια κορυφή (peak).
Άλλωστε, είναι ευκολότερο να περιγραφεί η σχέση μεταξύ των μεταβλητών όταν είναι κατά προσέγγιση γραμμική.
Επομένως, όταν αυτές οι συνθήκες δεν ισχύουν στα αρχικά δεδομένα, μπορούν να επιτευχθούν με έναν λογαριθμικό μετασχηματισμό.
Έτσι, κάθε βαθμολογία κανονικοποιείται (r[-1,1] | -1 ≡ απαράδεκτο, 1 ≡ ιδανικό), χρησιμοποιώντας το 10 ως βάση.
Επομένως, η τελική τιμή της φήμη κυμαίνεται από -1 έως +1, όπου -1, +1, 0 είναι αντίστοιχα η απολύτως αρνητική, η απολύτως θετική και η ουδέτερη τιμή που χρησιμοποιείται επίσης και για τους νεοεισερχόμενους.
Με άλλα λόγια, αυτό σημαίνει ότι η φήμη ενός πράκτορα μπορεί να είναι είτε αρνητική είτε θετική.
Όσον αφορά την εμπειρία, που πρέπει να ληφθεί υπόψη, άμεση ή/και έμμεση (μαρτυρίες), προχωρώντας περισσότερο σε όσα έχουν ήδη συζητηθεί για τις μαρτυρίες, γίνεται σαφές ότι η έμμεση εμπειρία χωρίζεται σε δύο κατηγορίες, τις αναφορές που παρέχονται από ξένους και τις αναφορές που παρέχονται από άλλους γνωστούς όμως πράκτορες.
Είναι γνωστό ότι η χρήση διαφορετικών απόψεων, εν προκειμένω αξιολογήσεων, από μια μεγάλη ομάδα ατόμων μεγιστοποιεί την δυνατότητα αποκλεισμού μεροληπτικών αξιολογήσεων, που δεν αντικατοπτρίζουν την πραγματική κατάσταση, και έτσι αντιμετωπίζεται το ζήτημα των διακρίσεων.
Διάκριση σημαίνει ότι ένας πράκτορας παρέχει υψηλής ποιότητας υπηρεσίες σε μια ομάδα εταίρων και χαμηλής ποιότητας σε μια άλλη ομάδα.
Έτσι, η χρήση τόσο της άμεσης όσο και της έμμεσης εμπειρίας θα μπορούσε να οδηγήσει σε πιο αξιόπιστες εκτιμήσεις.
Επομένως, η τελική τιμή της φήμης ενός πράκτορα X, που ζητείται από έναν πράκτορα A, είναι συνδυασμός τριών συντελεστών, RAX = {PRAX , KRAX, SRAX}.
Το PRAX αναφέρεται στην άμεση εμπειρία του πράκτορα, το KRAX αναφέρεται σε μαρτυρίες από γνωστούς πράκτορες και το SRAX αναφέρεται στις υπόλοιπες αναφορές μαρτυριών.
Ωστόσο, μερικές φορές μία ή περισσότερες κατηγορίες αξιολόγησης λείπουν.
Για παράδειγμα, ένας νεοεισερχόμενος πράκτορας δεν έχει προσωπική εμπειρία και επομένως δεν υπάρχουν διαθέσιμες αξιολογήσεις (prAX).
Συνδυάζοντας το παραπάνω με το γεγονός ότι οι άνθρωποι στον πραγματικό κόσμο βασίζονται σε σχέσεις εμπιστοσύνης που έχουν εδραιώσει με τα χρόνια, είναι πιο πιθανό ένας χρήστης να πιστέψει τις δηλώσεις κάποιου γνωστού παρά ενός ξένου.
Επομένως, είναι εμφανές ότι η προσωπική άποψη (AX) είναι πιο σημαντική από τη γνώμη των ξένων (SX), όπως είναι και πιο σημαντική από τη γνώμη παλαιότερα αξιόπιστων εταίρων (KX).
Αυτή η σχέση μεταξύ των κατηγοριών αξιολόγησης παρουσιάζεται γραφικά, στο σχήμα της Εικόνας 6.5.
Επομένως, κάθε κατηγορία που πρόκειται να συμμετάσχει στην εκτίμηση, σύμφωνα με την εκάστοτε θεωρία σχέσεων που επιλέγεται, χρησιμοποιείται στο RAX = {PRAX , KRAX, SRAX}.
Πιο συγκεκριμένα, η τελική τιμή φήμης RAX είναι μια συνάρτηση που συνδυάζει τις μετασχηματισμένες αξιολογήσεις για κάθε διαθέσιμη κατηγορία όπως φαίνεται παρακάτω.
Επιπλέον, κάθε φορά που ένας πράκτορας ζητά την τιμή της φήμης ενός άλλου πράκτορα, προσδιορίζει μόνος του τι είναι σημαντικό για αυτόν.
Για παράδειγμα, ένας πράκτορας μπορεί να θεωρεί το χρόνο απόκρισης πιο σημαντικό (π.χ. με ένα ποσοστό 50% στην τελική τιμή) από ότι την ορθότητα (π.χ. 30%) ή την πληρότητα (π.χ. 15%).
Το μοντέλο HARM, όπως και το T-REX, επιτρέπει στους πράκτορες να καθορίσουν τα βάρη που θα υποδείξουν τις προσωπικές προτιμήσεις τους για τους συντελεστές των βαθμολογιών.
Επομένως, ο αντίστοιχος τύπος διαμορφώνεται ως εξής:
Μηχανισμός Αξιολόγησης του Μοντέλου HARM Παραδοσιακά, οι άνθρωποι βασίζονται στην προηγούμενη εμπειρία και γνώση τους, προκειμένου να λάβουν αποφάσεις και να δράσουν.
Παρά το γεγονός ότι τα διαθέσιμα στοιχεία είναι κατά κύριο λόγο ασαφή, δεδομένου ότι νέες και πιο ενημερωμένες πληροφορίες μπορεί να προκύψουν ανά πάσα στιγμή, οι άνθρωποι είναι σε θέση να καταλήξουν σε λογικά συμπεράσματα.
Επομένως, θα ήταν πιο αποτελεσματικό αν η λογική των πρακτόρων μοντελοποιούνταν με τρόπο παρόμοιο με την ανθρώπινη λογική, μη-μονότονα δηλαδή, αφού ο σκοπός τους είναι να ενεργούν για λογαριασμό του χρήστη τους.
Σε αυτό το πλαίσιο, τα μοντέλα που βασίζονται στη γνώση και ειδικότερα αυτά που βασίζονται σε κανόνες, με τη χρήση μη-μονότονης (nonmonotonic) συλλογιστικής, μπορούν να επιτρέψουν στους πράκτορες να προσεγγίσουν τον τρόπο που σκέφτονται και ενεργούν οι χρήστες τους.
Για να εκφραστούν οι προδιαγραφές αλλά και οι αναιρέσιμοι κανόνες της προσέγγισής του μοντέλου HARM με έναν πιο περιεκτικό τρόπο, εκφράζονται στο συντακτικό dPOSL [Kontopoulos et al., 2011].
Aκολουθώντας τις αρχές του μοντέλου, η αξιολόγηση του πράκτορα truster (r) αναπαρίσταται ως γεγονός του ακόλουθου τύπου:
Έτσι, ένα παράδειγμα αξιολόγησης που παρέχεται από έναν πράκτορα Α (truster) για έναν πράκτορα Β (trustee) θα μπορούσε να είναι το εξής γεγονός:
Ο καθορισμός των παραμέτρων της αξιολόγησης είναι ένα από τα πιο σημαντικά βήματα στην προσπάθεια δημιουργίας αποτελεσματικών μοντέλων, εντούτοις, ο πυρήνας κάθε μοντέλου είναι ο μηχανισμός λήψης αποφάσεων.
Στο πλαίσιο αυτό, όπως ήδη αναφέρθηκε, δύο από τις τιμές κάθε αξιολόγησης, η βεβαιότητα και η σημαντικότητα, μπορούν να καθορίσουν την προσοχή που πρέπει να δοθεί στην εν λόγω αξιολόγηση.
Ουσιαστικά, είναι σημαντικό να ληφθούν υπόψη αξιολογήσεις που έγιναν από αξιολογητές με μεγάλο ποσοστό βεβαιότητας, δεδομένου ότι οι αξιολογήσεις τους είναι πιο πιθανό να είναι σωστές.
Επιπλέον, αν αυτοί οι αξιολογητές εμπλέκονταν σε μια σημαντική για αυτούς συναλλαγή, είναι ακόμη πιο πιθανό να αναφέρουν ειλικρινείς αξιολογήσεις.
Αυτή η εύλογη παραδοχή οδήγησε στους ακόλουθους τρεις αναιρέσιμους κανόνες.
Οι κανόνες αυτοί ορίζουν ποιες αξιολογήσεις θα ληφθούν υπόψη στην εκτίμηση της φήμης και ποιες όχι, σύμφωνα με την βεβαιότητα και την σημαντικότητα της κάθε συναλλαγής, ωστόσο δεν συμμετέχουν στην εκτίμηση της ίδιας της φήμης.
Ο κανόνας r1 καθορίζει ότι εάν τόσο η βεβαιότατα του αξιολογητή όσο και η σημαντικότητα της συναλλαγής κατά τον ίδιο έχουν υψηλές τιμές, σύμφωνα πάντα με το κατώφλι που θέτει ο χρήστης, τότε αυτή η αξιολόγηση θα ληφθεί υπόψη κατά την διάρκεια της εκτίμησης της φήμης.
Ο κανόνας r2, από την άλλη πλευρά, καθορίζει ότι ακόμη και αν η τιμή της σημαντικότητας της συναλλαγής είναι χαμηλότερη από το κατώφλι, δεν έχει τόση σημασία εάν η βεβαιότητα του αξιολογητή είναι υψηλή.
Τέλος, ο κανόνας r3 καθορίζει ότι εάν υπάρχουν μόνο αξιολογήσεις με υψηλές τιμές σημαντικότητας τότε αυτές πρέπει να ληφθούν υπόψη.
Σε κάθε άλλη περίπτωση, η αξιολόγηση θα πρέπει να μην λαμβάνεται υπόψη.
Οι παραπάνω κανόνες είναι αναιρέσιμοι και όλοι εξάγουν θετικά λεκτικά, αλλά αντικρουόμενα μεταξύ τους, για το ίδιο ζεύγος πρακτόρων (truster και trustee), έτσι ώστε αν υπάρχουν πολλαπλές αξιολογήσεις για το ίδιο ζεύγος πρακτόρων, να λαμβάνεται υπόψη μόνο η καλύτερη.
Γι' αυτό υπάρχει και μια σχέση υπεροχής μεταξύ των κανόνων.
Επομένως, το σύνολο των συγκρούσεων καθορίζεται ως εξής:
Στην συνέχεια πρέπει να αποφασιστεί ποια εμπειρία θα ληφθεί υπόψη, η άμεση, η έμμεση, δηλαδή οι μαρτυρίες, ή και οι δύο.
Η έμμεση εμπειρία, όπως ήδη αναφέρθηκε, χωρίζεται σε δύο κατηγορίες, η πρώτη κατηγορία αφορά αναφορές που παρείχαν εντελώς άγνωστοι πράκτορες ενώ η δεύτερη κατηγορία αφορά αναφορές που παρείχαν άλλοι πράκτορες γνωστοί όμως από παλαιότερες συναλλαγές.
Επομένως, καθώς στόχος του HARM είναι να παρέχει μια εκτίμηση παρόμοια με αυτή που κάνουν οι άνθρωποι στην πραγματική ζωή, όπου χτίζουν και διατηρούν σχέσεις εμπιστοσύνης στην διάρκεια του χρόνου, προτείνεται ένα σύνολο αναιρέσιμων κανόνων που προσομοιώνουν την διαδικασία λήψης αποφάσεων των ανθρώπων.
Έτσι, ο μηχανισμός του μοντέλου ελέγχει πρώτα τις διαθέσιμες αναφορές αξιολογήσεων και τις κατηγοριοποιεί (κανόνες r4 έως r7) και στην συνέχεια αποφασίζει ποια γνώμη θα λάβει υπόψη για την εκτίμηση της τιμής RAX (κανόνες r8 έως r10).
Ο κανόνας r4 καθορίζει ποιοι πράκτορες θεωρούνται γνωστοί ενώ οι υπόλοιποι κανόνες, r5 έως r7, κατηγοριοποιούν τις αξιολογήσεις που λαμβάνονται υπόψη σε PRAX (άμεσης εμπειρίας), KRAX (μαρτυριών γνωστών πρακτόρων) και SRAX (μαρτυριών αγνώστων).
Στον κανόνα r7 χρησιμοποιείται η άρνηση-σαν-αποτυχία (negation-as-failure), η οποία αποτελεί χαρακτηριστικό του Λογικού Προγραμματισμού και αντιπροσωπεύει τον τελεστή εξαγωγής αρνητικής γνώσης από ατελή πληροφορία.
Γεγονός που σημαίνει ότι εάν η συνάρτηση known() αποτύχει κατά την διάρκεια της εκτέλεσης τότε θα ισχύσει η not(known()), η οποία καθορίζει ποιοι πράκτορες θεωρούνται εντελώς άγνωστοι.
Οι παραπάνω κανόνες είναι αυστηροί (strict) και έτσι τα συμπεράσματα τους δεν μπορούν να αμφισβητηθούν.
Η τελική διαδικασία λήψης απόφασης όσον αφορά στο PRAX βασίζεται σε μια θεωρία σχέσεων μεταξύ των διαφορετικών κατηγοριών αξιολόγησης.
Στην Εικόνα 6.5, παρουσιάστηκε η πλήρης σχέση μεταξύ όλων των κατηγοριών αξιολόγησης, ενώ στην συνέχεια παρουσιάζονται τρεις πιθανές υποθέσεις που βασίζονται σε αυτή τη σχέση.
Στην πρώτη υπόθεση, όλες οι κατηγορίες έχουν την ίδια βαρύτητα, επομένως, εάν είναι διαθέσιμες αξιολογήσεις για όλες τις κατηγορίες (r8 έως r10) τότε θα συμμετέχουν όλες στην τελική εκτίμηση της φήμης.
Σε αυτό το πλαίσιο, αν μια κατηγορία από αυτές λείπει, τότε οι άλλες δυο συνδυάζονται, ενώ εάν τελικά είναι διαθέσιμη μόνο μια κατηγορία τότε απλά λαμβάνεται αυτή υπόψη.
Στις υπόλοιπες δύο υποθέσεις, συγκρούονται μεταξύ τους απόψεις από διαφορετικές κατηγορίες (rt) υπό την μορφή αντικρουόμενων λεκτικών, επομένως η σύγκρουση επιλύεται μέσω της προσθήκης σχέσεων υπεροχής.
Συγκεκριμένα, η προσωπική άποψη είναι η πιο σημαντική, έπεται η άποψη των φίλων και γνωστών και τελευταία, λιγότερο σημαντική, θεωρείται η άποψη των αγνώστων.
Για να μην επαναληφθούν σε αυτό το σημείο οι κανόνες, παρουσιάζονται μόνο οι σχέσεις υπεροχής.
Το σύνολο σύγκρουσης, και για τις δύο θε-
Στην δεύτερη υπόθεση, η σχέση προτεραιότητας μεταξύ των κανόνων βασίζεται στο γεγονός ότι ένας πράκτορας στηρίζεται κυρίως στην δική του εμπειρία εάν θεωρεί ότι είναι αρκετή.
Εάν πάλι θεωρεί ότι δεν είναι αρκετή, αναζητά τις απόψεις των υπολοίπων, όπως και οι άνθρωποι στην πραγματική ζωή.
Στην τρίτη υπόθεση, εάν είναι διαθέσιμη άμεση εμπειρία (PRAX) τότε προτιμάται να συνδυαστεί με τις αξιολογήσεις άλλων γνωστών πρακτόρων (KRAX), ενώ αν δεν είναι, τότε το HARM λειτουργεί ως ένα αμιγές σύστημα μαρτυριών (witness system).
Η Επέκταση στην Χρονική Αναιρέσιμη Λογική Από την στιγμή που οι πράκτορες, σε δυναμικά περιβάλλοντα όπως τα πολυπρακτορικά, μπορούν να αλλάξουν τους στόχους τους ανά πάσα στιγμή, η εξέλιξη στο χρόνο, όπως έχει τονισθεί ήδη, πρέπει να ληφθεί υπόψη σε ένα μοντέλο εμπιστοσύνης.
Για παράδειγμα, ένας τυπικός ανέντιμος πράκτορας θα μπορούσε να παρέχει υπηρεσίες υψηλής ποιότητας για μια χρονική περίοδο για να κερδίσει μια υψηλή φήμη και στην συνέχεια επωφελούμενος από αυτό το υψηλό σκορ θα μπορούσε να προσφέρει χαμηλής ποιότητας υπηρεσίες.
Σε αυτό το πλαίσιο, στην χρονική επέκταση του HARM, κάθε αξιολόγηση και κάθε συμπέρασμα έχει χρονική διάρκεια.
Έτσι, κάθε αξιολόγηση αναπαρίσταται ως ένα σταθερό χρονικό λεκτικό και κάθε συμπέρασμα κανόνα ως ένα χρονικό λεκτικό που εκπνέει.
Επομένως, οι αναφορές αξιολόγησης είναι πάντα εκεί, στην διάθεση του μοντέλου, όμως μόνο οι τελευταίες αξιολογήσεις θα συμπεριληφθούν στην εκτίμηση, παρέχοντας τελικά μια ενημερωμένη εκτίμηση φήμης.
Η αξιολόγηση (r) του αξιολογητή πράκτορα (truster) είναι ενεργή μετά από time_offset χρονικές στιγμές και παραμένει έγκυρη από εκείνη την στιγμή και έπειτα:
Σε αυτό το πλαίσιο, οι κανόνες που παρουσιάστηκαν στην προηγούμενη ενότητα τροποποιούνται αναλόγως.
Κάθε αξιολόγηση είναι ενεργή μετά από t χρονικές στιγμές («@t») ενώ κάθε συμπέρασμα έχει μια διάρκεια («:duration»).
Επιπλέον, κάθε κανόνας έχει μια καθυστέρηση, η οποία μοντελοποιεί την καθυστέρηση ανάμεσα στο σώμα και την κεφαλή, δείχνοντας ουσιαστικά την καθυστέρηση μεταξύ της αιτίας και του αποτελέσματος.
Για παράδειγμα, ο κανόνας r1, ο οποίος καθορίζει ότι αξιολογήσεις με ψηλές τιμές βεβαιότητας και σημαντικότητας θα πρέπει να λαμβάνονται υπόψη κατά την εκτίμηση της φήμης, τροποποιείται κατάλληλα όπως φαίνεται παρακάτω.
Πιο συγκεκριμένα, μια έγκυρη αξιολόγηση, δηλαδή μια αξιολόγηση που είναι σε ισχύ με t < tcurrent, η οποία έχει τιμές βεβαιότητας και σημαντικότητας μεγαλύτερες ή ίσες από τα κατώφλια των χρηστών θα θεωρείται διαθέσιμη για ένα συγκεκριμένο χρονικό διάστημα (count_rating:duration).
Οι υπόλοιποι κανόνες, r4 έως r10, επίσης τροποποιούνται κατάλληλα με την χρονική αναιρέσιμη λογική.
Για παράδειγμα, ο κανόνας r5, που ξεχωρίζει ποιες αξιολογήσεις αναφέρθηκαν από τον ίδιο τον πράκτορα (προσωπική άμεση εμπειρία), παρουσιάζεται παρακάτω.
Με άλλα λόγια, μια έγκυρη αξιολόγηση (t < tcurrent), που πληροί τους περιορισμούς συμμετοχής (count_rating:duration) σε μια δεδομένη χρονική περίοδο (duration), αναγνωρίζεται ως έγκυρη άμεση εμπειρία (count_prAX:duration) κατά την περίοδο αυτή.
Κατανεμημένη Διαχείριση Αξιοπιστίας Οι μηχανισμοί εμπιστοσύνης και φήμης που χρησιμοποιούνται στα κατανεμημένα συστήματα είναι συνήθως πιο σύνθετοι από αυτούς που χρησιμοποιούνται στα κεντρικά.
Εδώ δεν υπάρχει κεντρική διαχειριστική αρχή και έτσι κάθε πράκτορας αναπτύσσει αποκλειστικά την δική του υποκειμενική εμπιστοσύνη μέσα από τις αλληλεπιδράσεις του με άλλους πράκτορες του περιβάλλοντος.
Επομένως, δεν υπάρχει μια καθολική ή δημόσια φήμη.
Για παράδειγμα, εάν ο πράκτορας Α θέλει να μάθει για τον πράκτορα Β, θα πρέπει να ρωτήσει άλλους πράκτορες για τις αξιολογήσεις τους σχετικά με τον Β και, στην συνέχεια, να συνθέσει αυτές τις αξιολογήσεις για να υπολογίσει την φήμη του πράκτορα Β.
Η φήμη του πράκτορα Β που αναπτύχθηκε από τον Α είναι καθαρά προσωπική, δεδομένου ότι ο πράκτορας Α μπορεί να επιλέξει ποιους πράκτορες θα ρωτήσει και πώς θα συνδυάσει τις αξιολογήσεις που θα συλλέξει.
Για παράδειγμα, μπορεί να επιλέξει μόνο τις αξιολογήσεις που προέρχονται από αξιόπιστους για αυτόν πράκτορες ή μπορεί να δώσει διαφορετικό βάρος στις αξιολογήσεις γνωστών και ήδη αξιόπιστων πρακτόρων από ότι σε αυτές παντελώς αγνώστων πρακτόρων.
Φυσικά, σε αυτές τις περιπτώσεις απαιτείται πολλή επικοινωνία από τους πράκτορες για να ανταλλάξουν τις πληροφορίες τους.
Έτσι, τα κατανεμημένα μοντέλα είναι συνήθως ευέλικτα ως προς την οικοδόμηση της φήμης καθώς επιτρέπουν σε κάθε πράκτορα να κάνει την δική του προσωπική εκτίμηση.
Παρ’ όλα αυτά, αντιμετωπίζουν δυο σημαντικά ζητήματα, καθιστώντας την εκτίμηση της φήμης μια εξαιρετικά δύσκολη διαδικασία.
Το πρώτο είναι ότι οι πράκτορες δεν γνωρίζουν πού να βρουν πληροφορίες, καθώς πιθανότατα δεν γνωρίζουν ποιοι πράκτορες έχουν αλληλεπιδράσει μεταξύ τους και έτσι οι πληροφορίες που αφορούν ένα συγκεκριμένο πράκτορα μπορεί να βρίσκονται οπουδήποτε στο σύστημα.
Το δεύτερο είναι ότι οι πράκτορες μπορεί να είναι συνδεδεμένοι στο σύστημα μπορεί και όχι.
Όταν ένας πράκτορας δεν είναι συνδεδεμένος, αυτόματα δεν είναι διαθέσιμες και οι αξιολογήσεις που διατηρεί, επομένως είναι αδύνατο να εντοπισθούν και χρησιμοποιηθούν.
Παρά τις αντικειμενικές δυσκολίες της κατανεμημένης προσέγγισης, στην παρούσα διατριβή γίνεται μια προσπάθεια να σχεδιαστούν και να υλοποιηθούν κατανεμημένα μοντέλα, όπως το DRM [Kravari et al., 2010b;
Kravari & Bassiliades, 2012b] και το DISARM [Kravari & Bassiliades, 2015b].
Απώτερος στόχος είναι να παρέχεται ένας ρεαλιστικός και σταθερός μηχανισμός που, μεταξύ άλλων, θα μοντελοποιεί τον τρόπο που οι ευφυείς πράκτορες, όπως και οι άνθρωποι, καταλήγουν σε λογικά συμπεράσματα από ελλιπείς και, ενδεχομένως, αντικρουόμενες πληροφορίες, υποστηρίζοντας, έτσι, τους πράκτορες του περιβάλλοντος στις κρίσιμες για αυτούς αποφάσεις.
Ειδικότερα, το DRM είναι επικεντρωμένο, όπως και το κεντρικό μοντέλο SERM, στην αξιολόγηση της ειδικής κατηγορίας πρακτόρων του συστήματος EMERALD, δηλαδή των Reasoners που παρέχουν υπηρεσίες συλλογιστικής, χωρίς αυτό να σημαίνει ότι δεν μπορεί να χρησιμοποιηθεί και σε άλλες περιπτώσεις.
Πρακτικά, το μοντέλο DRM βασίζεται σε ήδη γνωστά και καταξιωμένα μοντέλα εμπιστοσύνης, τα SPORAS [Zacharia & Maes, 2000] και CR (Certified Reputation) [Huynh et al., 2006a], αποτελώντας μια εναλλακτική του μοντέλου SERM κατανεμημένη πρόταση.
Από την άλλη πλευρά, το DISARM είναι μια προσέγγιση, που βασίζεται στην γνώση και χρησιμοποιεί εδραιωμένες παραμέτρους εκτίμησης [Castelfranchi
Hendrikx et al., 2014] για να παρέχει μια περισσότερο διαισθητική μέθοδο, προσιτή στους μη ειδικούς χρήστες.
Αυτό επιτυγχάνεται με τον σχεδιασμό και την εφαρμογή ενός μηχανισμού φήμης, που βασίζεται σε κοινωνικές αρχές και αναιρέσιμη λογική.
Όσον αφορά στην κοινωνική πτυχή του μοντέλου, το DISARM προτείνει μια προσέγγιση, όπου οι πράκτορες μπορούν να εδραιώσουν, μέσω των αλληλεπιδράσεων τους, και να διατηρήσουν σχέσεις, όπως κάνουν και οι άνθρωποι στην πραγματική ζωή.
Σε αυτό το πλαίσιο, το μοντέλο DISARM θεωρεί τους πράκτορες, που δρουν στο περιβάλλον, ως ένα κοινωνικό δίκτυο, το οποίο καθορίζει τις σχέσεις εγγύτητας μεταξύ τους.
Έτσι, όλοι οι γνωστοί πράκτορες δημιουργούν ένα δίκτυο, το οποίο επεκτείνεται κάθε φορά που λαμβάνουν χώρα νέες αλληλεπιδράσεις.
Το πλεονέκτημα της προσέγγισης έγκειται στο γεγονός ότι επιτρέπει στους πράκτορες να επικοινωνούν με ήδη γνωστούς και θετικά αξιολογημένους πράκτορες, εντοπίζοντας, σχετικά γρήγορα, αναφορές με μικρό κόστος εύρους ζώνης.
Όσον αφορά στον μηχανισμό μοντελοποίησης, παρόλο που είναι ανεξάρτητος από λογικές, το μοντέλο DISARM προτείνει την χρήση της μη-μονότονης αναιρέσιμης λογικής [Nute, 1987;
Pollock, 1992], που έχει παρουσιαστεί σε προηγούμενες ενότητες.
Μια αρχική κατανεμημένη προσέγγιση, της παρούσας διατριβής, για την εκτίμηση της φήμης σε ένα πολυπρακτορικό περιβάλλον αποτελεί το μοντέλο DRM [Kravari et al., 2010b;
Το μοντέλο αυτό είναι ένας συνδυασμός των γνωστών μοντέλων SPORAS [Zacharia & Maes, 2000] και CR (Certified Reputation) [Huynh et al., 2006a].
Το DRM, όπως και το κεντρικό μοντέλο SERM της προηγούμενης ενότητας, δημιουργήθηκε για να χρησιμοποιηθεί στην αξιολόγηση και εν τέλει την πιστοποίηση των ειδικών πρακτόρων (Reasoners) που παρέχουν τις υπηρεσίες συλλογιστικής στο EMERALD.
Σύμφωνα με την αρχιτεκτονική του νέου μοντέλου, κάθε πράκτορας (Reasoner) συλλέγει και αποθηκεύει τις αναφορές αξιολόγησης που δίνονται από τους άλλους πράκτορες.
Είναι, επίσης, ευθύνη του πράκτορα να χρησιμοποιήσει αυτές τις αναφορές για να υπολογίσει την τιμή της φήμης του, σύμφωνα με τον εξής τύπο:
Στον παραπάνω τύπο, το t αναφέρεται στον αριθμό των αξιολογήσεων που έχει λάβει ο πράκτορας μέχρι τώρα, το θ είναι μια ακέραιη σταθερά μεγαλύτερη από 1, το Ri αναπαριστά την αναφορά που δόθηκε από τον πράκτορα i, το Rother είναι η τιμή της φήμης του πράκτορα που δίνει την αναφορά, το D είναι το εύρος των τιμών φήμης και τέλος, σ είναι ο παράγοντας επιτάχυνσης της συνάρτησης απόσβεσης Φ.
Όπως και στα προηγούμενα μοντέλα που προτάθηκαν στην παρούσα διατριβή, έτσι και στο DRM κάθε αξιολόγηση αφορά τέσσερα διαδεδομένα κριτήρια.
Συγκεκριμένα, τα κριτήρια αυτά, επομένως και οι αντίστοιχες παράμετροι του μοντέλου, είναι η ορθότητα Correctness (Corri) των αποτελεσμάτων, η πληρότητα Completeness (Compi) των αποτελεσμάτων, ο χρόνος απόκρισης του πράκτορα
Response time (Respi) και η ευελιξία Flexibility (Flexi) του εκάστοτε πράκτορα Reasoner στις παραμέτρους εισόδου του.
Η αξιολόγηση αυτών των κριτηρίων βασίζεται φυσικά στα πρότυπα των χρηστών και οι βαθμολογίες τους κυμαίνονται από 1 έως 10.
Η τελική τιμή της αξιολόγησης (ri) είναι το σταθμισμένο άθροισμα των παραμέτρων (τύπος 6.11), όπου pi1, pi2, pi3 και pi4 είναι τα αντίστοιχα βάρη και nCorri, nCompi, nRespi και nFlexi είναι οι κανονικοποιημένες τιμές για την ορθότητα , την πληρότητα , το χρόνο απόκρισης και την ευελιξία, αντίστοιχα.
Με άλλα λόγια, κάθε φορά που ένας πράκτορας αλληλεπιδρά με έναν άλλο, εν προκειμένω έναν Reasoner, λαμβάνει υπόψη κατά πόσον ενήργησε γρήγορα και με ακρίβεια ή εάν, για παράδειγμα, η αλληλεπίδραση ήταν αρκετά ικανοποιητική (ευέλικτη).
Σε αυτό το πλαίσιο, ο πράκτορας αυτός θα μπορούσε να θεωρήσει το χρόνο απόκρισης εξαιρετικά σημαντικό, έτσι θα προτιμούσε να προσθέσει περισσότερη αξία σε αυτό.
Αυτός είναι ο λόγος που στον παραπάνω τύπο προβλέπονται βάρη (pxy), αφήνοντας τον ίδιο το πράκτορα να αποφασίσει τι είναι σημαντικό και πόσο.
Έτσι, η τελική τιμή της αξιολόγησης (ri) είναι η πραγματική γνώμη του πράκτορα, καθώς πολλαπλασιάζει κάθε παράμετρο αξιολόγησης με το ενδιαφέρον (βάρος) που έχει ο ίδιος ο πράκτορας για αυτή την παράμετρο και παρέχει τελικά την σφαιρική του άποψη μέσω του αθροίσματος.
Οι νεοεισερχόμενοι πράκτορες ξεκινούν και στο μοντέλο DRM με μηδενική τιμή φήμης και μπορούν να προχωρήσουν μέχρι το ανώτατο όριο των 3000 βαθμών.
Οι αξιολογήσεις από την άλλη, κυμαίνονται από 0.1 για μια απαράδεκτη συναλλαγή έως 1 για μια εξαιρετική συναλλαγή.
Έτσι, μόλις τελειώνει κάθε συναλλαγή, ο Reasoner ζητά την βαθμολογία του εταίρου του.
Ο πράκτορας λοιπόν απαντά με ένα νέο μήνυμα που περιέχει τόσο την βαθμολογία του όσο και την δική του προσωπική τιμή φήμης.
Ο Reasoner, από την πλευρά του, χρησιμοποιεί την κατάλληλη εξίσωση (6.10) τροφοδοτώντας την με τα νέα δεδομένα και ενημερώνει την φήμη του.
Κύριο πλεονέκτημα της προσέγγισης είναι ότι πρόκειται για μια ανεξάρτητη κατανεμημένη προσέγγιση που βασίζεται σε δυο γνωστά μοντέλα φήμης, επιτρέποντας έτσι σε κάθε Reasoner να παρέχει κάποια πληροφορία σχετικά με την επίδοση του.
Στην πραγματικότητα, οι Reasoners όπως υπαγορεύει η αρχιτεκτονική και η υλοποίηση του EMERALD είναι αγαθοί, δεν ενεργούν ποτέ με δόλο.
Επομένως, η εκτίμηση της φήμης τους δεν έχει να κάνει με τυχόν απάτες και κακόβουλες ενέργειες παρά με ένα μέτρο σύγκρισης της απόδοσης τους σε χρόνο και ποιότητα των υπηρεσιών τους.
To μοντέλο DISARM είναι ένα κατανεμημένο, υβριδικό μοντέλο φήμης, που βασίζεται σε κανόνες.
Το μοντέλο αυτό χρησιμοποιεί την αναιρέσιμη λογική, προκειμένου να συνδυάσει, με πρακτικό τρόπο, όλες τις διαθέσιμες αξιολογήσεις, τόσο εκείνες που βασίζονται στην προσωπική εμπειρία του πράκτορα όσο και εκείνες που παρέχονται από άλλους γνωστούς ή μη πράκτορες, μοντελοποιώντας τον τρόπο που οι άνθρωποι σκέφτονται και αποφασίζουν.
Το DISARM στοχεύει όχι μόνο στον περιορισμό των μειονεκτημάτων των κοινών κατανεμημένων προσεγγίσεων, όπως είναι η δυσκολία στον εντοπισμό αναφορών αξιολογήσεων, αλλά κυρίως στοχεύει στην βελτίωση της απόδοσης της υβριδικής προσέγγισης, παρέχοντας έναν διαισθητικό μηχανισμό λήψης αποφάσεων.
Στην πραγματικότητα, το μοντέλο DISARM είναι μια αναβαθμισμένη και εκτεταμένη προσέγγιση, που βασίζεται εν μέρει στις αρχές του μοντέλου HARM.
Για παράδειγμα, παρόλο που και τα δύο μοντέλα θεωρούν σημαντικό τον χρόνο, ασχολούνται με αυτόν με μια εντελώς διαφορετική προσέγγιση.
Οι αξιολογήσεις στο HARM χαρακτηρίζονται από μια χρονική μετατόπιση, η οποία καθορίζει πόσες χρονικές στιγμές πρέπει να περάσουν για να θεωρηθεί μια αξιολόγηση ενεργή ενώ, παράλληλα, κάθε μια από αυτές διαρκεί για ένα περιορισμένο χρονικό διάστημα.
Από την άλλη πλευρά, το DISARM χρησιμοποιεί τον ίδιο τον χρόνο στον τελικό τύπο της εκτίμησης.
Κύριες αρχές του μοντέλου Το μοντέλο DISARM δεν έχει κεντρική αρχή, επομένως, είναι ευθύνη κάθε πράκτορα να εντοπίσει κατάλληλες αναφορές αξιολογήσεων και να χρησιμοποιήσει το μοντέλο.
Σε αυτό το πλαίσιο, ακόμη και αν περισσότεροι από έναν πράκτορες έχουν στην διάθεσή τους τις ίδιες αναφορές, πιθανότατα, θα εξάγουν διαφορετικές εκτιμήσεις και, ως αποτέλεσμα, θα λάβουν διαφορετικές αποφάσεις.
Ένα άλλο κεντρικό ζήτημα στο μοντέλο αποτελεί ο χρόνος, ειδικότερα η εξέλιξη με το πέρασμα του χρόνου, δεδομένου ότι αντανακλά την συμπεριφορά ενός πράκτορα, η οποία μπορεί να μεταβληθεί ανά πάσα στιγμή.
Επομένως, ο χρόνος πρέπει, και όντως, λαμβάνεται υπόψη στο προτεινόμενο μοντέλο.
Ωστόσο, το DISARM επιτρέπει στους πράκτορες να αποφασίσουν μόνοι τους για το τι θεωρούν σημαντικό.
Για το σκοπό αυτό, εναπόκειται στην στρατηγική του κάθε πράκτορα να καθορίσει την αξία του χρόνου.
Οι πράκτορες θα μπορούσαν να λάβουν υπόψη είτε όλες τις διαθέσιμες αναφορές είτε τις τελευταίες, όπως αυτές που για παράδειγμα αφορούν την προηγούμενη εβδομάδα, τον προηγούμενο μήνα ή το προηγούμενο έτος.
Λαμβάνοντας υπόψη τις τελευταίες αναφορές, οδηγείται κανείς αναμφίβολα σε μια ενημερωμένη εικόνα, αν και η εικόνα αυτή θα μπορούσε να είναι παραπλανητική.
Για παράδειγμα, σε αυτό το περιορισμένο χρονικό διάστημα, ένας τυπικός ανέντιμος πράκτορας θα μπορούσε προσωρινά να βελτιώσει την συμπεριφορά του.
Από την άλλη πλευρά, ένας τυπικός αξιόπιστος πράκτορας, που αντιμετωπίζει, για παράδειγμα, ένα πρόβλημα, θα μπορούσε να δρα προσωρινά λανθασμένα και να μετατρέπεται σε έναν, φαινομενικά, κακόβουλο πράκτορα.
Επομένως, είναι παρακινδυνευμένο να ληφθεί υπόψη μόνο ένα μέρος των διαθέσιμων αναφορών, αν και μερικές φορές υπάρχει σημαντικό όφελος σε χρόνο και υπολογιστικό κόστος.
Αντίθετα, λαμβάνοντας υπόψη όλες τις διαθέσιμες αναφορές οδηγείται κανείς σε μια επισκόπηση της συμπεριφοράς ενός πράκτορα, αλλά η περίπτωση αυτή κοστίζει σε αποθηκευτικό χώρο, χρόνο εκτέλεσης και υπολογιστική ισχύ.
Το DISARM, ωστόσο, είναι ένα κατανεμημένο μοντέλο, γεγονός που σημαίνει ότι ο εντοπισμός αναφορών είναι μια αρκετά δύσκολη διαδικασία.
Οι αναφορές είναι πιθανό να υπάρχουν αλλά συνήθως είναι απρόσιτες, καθώς οι πράκτορες μπορούν να εισέλθουν ή να αποχωρήσουν από το σύστημα οποιαδήποτε στιγμή.
Συνήθως, μόνο ορισμένες αναφορές είναι διαθέσιμες, δεδομένου ότι πιθανόν να λείπει η προσωπική εμπειρία ή οι αναφορές τρίτων να είναι δύσκολο να εντοπισθούν.
Από την άλλη πλευρά, μερικές φορές υπάρχει ένας μεγάλος αριθμός διαθέσιμων αναφορών αλλά προκύπτει σημαντικό υπολογιστικό κόστος εάν ληφθούν όλες υπόψη.
Επιπλέον, οι αναφορές αυτές ενδέχεται να διαφέρουν σημαντικά.
Σε αυτό το πλαίσιο, το μοντέλο DISARM ενσωματώνει μια ένδειξη για το πόσο πιθανό είναι η εκτίμηση να αποδειχθεί σωστή με βάση την μεταβλητότητα των αναφορών που ελήφθησαν υπόψη.
Με άλλα λόγια, το μοντέλο DISARM επιτρέπει στους πράκτορες να ενημερωθούν σχετικά με την πιθανότητα λάθους εκτίμησης και την πιθανή απώλεια.
Ένα άλλο σημαντικό ζήτημα που αντιμετωπίζει το DISARM είναι οι σχέσεις εμπιστοσύνης που εδραιώνουν και διατηρούν οι πράκτορες με την πάροδο του χρόνου, περίπου όπως κάνουν και οι άνθρωποι στον πραγματικό κόσμο.
Έτσι, εάν ένας πράκτορας είναι ικανοποιημένος με έναν εταίρο, πιθανότατα θα προτιμήσει να συναλλαγεί ξανά μαζί του στο μέλλον ενώ εάν είναι απογοητευμένος από κάποιον, δεν θα να συναλλαγεί ξανά μαζί του.
Σε αυτό το πλαίσιο, το DISARM προτείνει την χρήση δύο λιστών, που ονομάζονται αντίστοιχα λευκή (white-list) και μαύρη (black-list).
Κάθε πράκτορας αποθηκεύει στην λευκή λίστα τα ονόματα των προτιμώμενων εταίρων ενώ στην μαύρη τα ονόματα όσων πρέπει να αποφύγει.
Η απόφαση για το ποιοι θα προστεθούν σε κάθε λίστα λαμβάνεται από τον ίδιο τον πράκτορα.
Ειδικότερα, κάθε πράκτορας είναι εξοπλισμένος με έναν μηχανισμό λήψης αποφάσεων που βασίζεται σε κανόνες, ο οποίος του επιτρέπει να αποφασίζει σχετικά, προσθέτοντας εάν είναι απαραίτητο τους εταίρους του στην κατάλληλη λίστα.
Επομένως, θα είναι εύκολο για έναν πράκτορα να εντοπίσει έναν γνωστό παλιό εταίρο, που θα κάνει τον εξυπηρετήσει, αποφεύγοντας μια πιθανή απάτη από κάποιον άγνωστο.
Επιπλέον, ο χρήστης είναι περισσότερο πιθανό να εμπιστευθεί δηλώσεις από έναν γνωστό και αξιόπιστο εταίρο παρά από έναν γνωστό αλλά αναξιόπιστο παλαιότερο εταίρο ή έναν εντελώς άγνωστο.
Τέλος, επιπρόσθετα της δυσκολίας εντοπισμού αναφορών, υπάρχει και η δυσκολία, όπως έχει ήδη αναφερθεί, εντοπισμού πραγματικά χρήσιμων αναφορών.
Για το σκοπό αυτό, το μοντέλο DISARM, όπως και το μοντέλο HARM, υιοθετεί την χρήση δύο επιπλέον παραμέτρων για κάθε αναφορά αξιολόγησης, την σημαντικότητα (importance) και την βεβαιότητα (confidence).
Η σημαντικότητα υποδεικνύει πόσο κρίσιμη ήταν η συναλλαγή για τον πράκτορα αξιολόγησης ενώ η βεβαιότητα δίνει μια εκτίμηση της βεβαιότητας του πράκτορα για την εν λόγω αναφορά.
Το μοντέλο DISARM υιοθετεί την χρήση έξι παραμέτρων, συγκεκριμένα τον χρόνο απόκρισης (response time), την εγκυρότητα (validity), την πληρότητα (completeness), την ορθότητα (correctness), της συνεργασίας (cooperation) και της έκβασης (outcome feeling) 2008;
Ο χρόνος απόκρισης αναφέρεται στον χρόνο που χρειάζεται ένας πράκτορας για να ολοκληρώσει τις εργασίες για τις οποίες είναι υπεύθυνος.
Η εγκυρότητα περιγράφει τον βαθμό που ένας πράκτορας είναι ειλικρινής και αξιόπιστος ενώ η πληρότητα περιγράφει τον βαθμό που ένας πράκτορας είναι ειλικρινής και ρεαλιστικός.
Η ορθότητα αναφέρεται στις παρεχόμενες υπηρεσίες του πράκτορα και περιγράφει τον βαθμό που οι υπηρεσίες αυτές είναι ορθές και συμβατές με τις προδιαγραφές.
Η συνεργασία περιγράφει την προθυμία ενός πράκτορα να κάνει ό, τι του ζητήθηκε ενώ, τέλος, η έκβαση περιγράφει το γενικό αίσθημα ικανοποίησης ή δυσαρέσκειας που προκύπτει από την έκβαση της συναλλαγής, δηλαδή περιγράφει εάν η συναλλαγή είχε ή όχι ένα ικανοποιητικό αποτέλεσμα. ‘Οπως και στα προηγούμενα μοντέλα που παρουσιάστηκαν, κάθε φορά που ένας πράκτορας A αλληλεπιδρά με έναν πράκτορα X, μπορεί να αξιολογήσει την επίδοση του και να επηρεάσει την φήμη του.
Ο πράκτορας αξιολογητής (A) ονομάζεται, όπως έχει ήδη αναφερθεί, truster ενώ ο υπό αξιολόγηση πράκτορας (X) ονομάζεται trustee.
Επομένως, μετά από κάθε συναλλαγή στο περιβάλλον, ο πράκτορας αξιολογητής οφείλει να αξιολογήσει τις ικανότητες του εταίρου του.
Ωστόσο, το μοντέλο DISARM είναι ένα κατανεμημένο μοντέλο και, ως εκ τούτου, ο πράκτορας αξιολογητής δεν χρειάζεται να υποβάλλει κάπου την αξιολόγηση του, παρά μόνο να την αποθηκεύσει μαζί με την τιμή της σημαντικότητας και της βεβαιότητας για μελλοντική χρήση.
Ακόμη, δεδομένου ότι ο χρόνος είναι μια σημαντική πτυχή, κάθε αξιολόγηση συνδέεται με μια χρονοσφραγίδα (t), υποδεικνύοντας το χρονικό σημείο της συναλλαγής.
Αυτή η χρονοσφραγίδα μπορεί, για παράδειγμα, να αναπαρίσταται στην μορφή YYMMDDHHMMSS, YYMMDD ή HHMMSS ή ακόμη και ως ένας ακέραιος στην περίπτωση πειραματικών προσομοιώσεων.
Επομένως, η αξιολόγησης (r) στο μοντέλο DISARM είναι μια πλειάδα έντεκα στοιχείων.
Σε αυτό το σημείο πρέπει να σημειωθεί ότι, παρόλο που κάθε πράκτορας αξιολογητής αποθηκεύει τις δικές του αξιολογήσεις, συμπεριλαμβάνεται στην πλειάδα και η μεταβλητή truster, γιατί είναι πιθανό να διαβιβάσει τις αξιολογήσεις του σε άλλους πράκτορες.
Σε αυτή την περίπτωση, όμως, οι πράκτορες θα πρέπει να είναι σε θέση να προσδιορίζουν τον πράκτορα αξιολογητή για κάθε αναφορά που λαμβάνουν.
Τέλος, στο μοντέλο DISARM οι τιμές αξιολόγησης κυμαίνεται από 0.1 (απαράδεκτο) έως 10 (εξαιρετικό) (r  [0.1, 10]), εκτός από την σημαντικότητα και την βεβαιότητα που κυμαίνεται από 0 (0%) έως 1 (100%).
Ο καθορισμός των τιμών αξιολόγησης είναι το πρώτο βήμα προς την κατεύθυνση ενός αποτελεσματικού μοντέλου φήμης, ο πυρήνας της προσέγγισης, όμως, είναι ο μηχανισμός λήψης αποφάσεων του μοντέλου.
Σε αυτό το πλαίσιο, το μοντέλο προσομοιώνει την διαδικασία λήψης αποφάσεων των ανθρώπων στον πραγματικό κόσμο, προτείνοντας μια σειρά αυστηρών και αναιρέσιμων κανόνων, σε μια πρακτική και διαισθητική προσέγγιση.
Ειδικότερα, αρχικά, μόλις μια συναλλαγή ολοκληρωθεί κάθε πράκτορας αξιολογεί τον εταίρο του σύμφωνα με τις ως άνω περιγραφείσες παραμέτρους, την σημαντικότητα και την βεβαιότητα του.
Μόλις συγκεντρωθούν όλες οι τιμές μαζί, ο πράκτορας αξιολογητής προσθέτει το όνομα του, το όνομα του υπό αξιολόγηση πράκτορα και το χρονικό σημείο (t), διαμορφώνοντας την τελική τιμή (r) της αξιολόγησης του.
Η πλειάδα αυτής της τιμής παρουσιάζεται παρακάτω, ως γεγονός (fact), στο συντακτικό d-POSL της αναιρέσιμης λογικής.
Ένα παράδειγμα αξιολόγησης που καταγράφεται από τον πράκτορα-αξιολογητή (Α) για τον πράκτορα (Χ) θα μπορούσε να είναι το εξής:
Ο πράκτορας-αξιολογητής αποθηκεύει την αξιολόγηση του στο αποθετήριο του.
Όπως προαναφέρθηκε οι πράκτορες χρησιμοποιούν επιπλέον δύο λίστες, την λευκή και την μαύρη.
Πιο συγκεκριμένα, αυτές οι λίστες είναι δύο ξεχωριστά αποθετήρια, ένα για την αποθήκευση υποσχόμενων εταίρων (λευκή λίστα) και ένα για εκείνους τους εταίρους που θα πρέπει να αποφεύγονται (μαύρη λίστα).
Επομένως, ο πράκτορας-αξιολογητής θα πρέπει επίσης να αποφασίσει εάν πρέπει να προσθέσει ή όχι τον πράκτορα που αξιολογεί στην λευκή (ή μαύρη) λίστα του.
Η απόφαση, φυσικά, στηρίζεται σε αυτό που εκείνος θεωρεί ως υποσχόμενο (ή απαράδεκτο) εταίρο.
Υποσχόμενος είναι ένας εταίρος, εάν ενεργεί με υπευθυνότητα και προσφέρει υψηλής ποιότητας υπηρεσίες ή προϊόντα.
Ένας εταίρος είναι υπεύθυνος εάν είναι συνεργάσιμος, ανταποκρίνεται γρήγορα και αφήνει μια θετική αίσθηση στο τέλος της συναλλαγής.
Φυσικά, κάθε πράκτορας έχει διαφορετικό βαθμό ανοχής, επομένως, κάτι που μπορεί να είναι γρήγορο για έναν πράκτορα, θα μπορούσε να είναι αργό για έναν άλλο.
Έτσι, κάθε πράκτορας έχει κάποια όρια που καθορίζουν την χαμηλότερη αποδεκτή τιμή για κάθε παράμετρο, δηλαδή τον χρόνο απόκρισης, την εγκυρότητα, την πληρότητα, την ορθότητα, την συνεργασία και την έκβαση.
Επιπλέον, από την οπτική γωνία κάθε πράκτορα, μία παράμετρος θα μπορούσε να είναι πιο σημαντική από τις άλλες.
Για παράδειγμα, ένας πράκτορας θα μπορούσε να θεωρήσει τον χρόνο απόκρισης ως την πιο σημαντική πτυχή, στην απόφαση του σχετικά με το εάν ο εταίρος του θα μπορούσε να χαρακτηριστεί καλός ή κακός.
Επομένως, ο πράκτορας αξιολογητής κατατάσσει τον εταίρο του σε σχέση με ένα λόγο, όπως ο χρόνος απόκρισης.
Φυσικά, η παράμετρος response_time (λόγος) θα μπορούσε να αντικατασταθεί με μία από τις υπόλοιπες παραμέτρους.
Στο πλαίσιο αυτό, ο κανόνας r1, που παρουσιάζεται παρακάτω, υποδεικνύει ότι εάν όλες οι τιμές είναι υψηλότερες από τα αντίστοιχα κατώφλια που έχει ορίσει ο πράκτορας, τότε η συμπεριφορά του υπό αξιολόγηση πράκτορα θεωρείται καλή.
Η συμπεριφορά του υπό αξιολόγηση πράκτορα θεωρείται απογοητευτική και, επομένως, κακή σε σχέση με έναν λόγο / παράμετρο, εάν η τιμή που λαμβάνει για αυτή την παράμετρο είναι χαμηλότερη από το κατώτατο όριο του πράκτορα αξιολογητή.
Οι κανόνες r2 ως r7 αποτελούν την ομάδα των κανόνων που χαρακτηρίζουν την συμπεριφορά ενός πράκτορα ως κακή με βάση έναν συγκεκριμένο λόγο.
Ωστόσο, χαρακτηρίζοντας την συμπεριφορά ενός πράκτορα καλή ή κακή δεν σημαίνει απαραίτητα ότι αυτός ο πράκτορας θα προστεθεί στην λευκή ή μαύρη λίστα, αντίστοιχα.
Αυτή η απόφαση επαφίεται στην ιδιωτική στρατηγική του αξιολογητή και μπορεί να διαφέρει σημαντικά από πράκτορα σε πράκτορα.
Για παράδειγμα, ένας πράκτορας αξιολογητής θα μπορούσε να είναι επιεικής και, ως εκ τούτου, μπορεί να προσθέτει σχετικά εύκολα πράκτορες στην λευκή του λίστα.
Ένας άλλος πιθανόν να περίμενε να δει αρκετές φορές καλή συμπεριφορά είτε για τον ίδιο λόγο (r8, όπου το ?self αναπαριστά τον ίδιο τον αξιολογητή), ή για μια σειρά λόγων (r9), πριν προσθέσει κάποιον στην λευκή του λίστα.
Ομοίως, ένας πράκτορας αξιολογητής πιθανόν να περίμενε να αντιμετωπίσει την κακή συμπεριφορά ενός πράκτορα περισσότερες από μία φορές, είτε για τον ίδιο λόγο (r10), ή για μια σειρά λόγων (r11), πριν τον προσθέσει στην μαύρη του λίστα.
Επομένως, ένας αυστηρός αξιολογητής θα πρόσθετε εύκολα πράκτορες στην μαύρη λίστα του αλλά όχι στην λευκή ενώ ένας επιεικής θα έδινε περισσότερες ευκαιρίες πριν προσθέσει κάποιον στην μαύρη λίστα του.
Οι παραπάνω κανόνες είναι αναιρέσιμοι, καθώς αποτελούν μέρος των προτιμήσεων του αξιολογητή (ιδιωτική στρατηγική).
Η σχέση υπεροχής μεταξύ αυτών των κανόνων μπορεί να διαφέρει από περίπτωση σε περίπτωση και επαφίεται στον ίδιο τον αξιολογητή.
Θα μπορούσαν, επίσης, να χρησιμοποιηθούν και άλλες θεωρίες, ανάλογα με τις ανάγκες και τις προτιμήσεις που έχει κάθε αξιολογητής.
Στην συνέχεια, μόλις, ο αξιολογητής αποφασίσει ποιος θα πρέπει να προστεθεί στην λευκή ή/και την μαύρη λίστα, προχωρά στο επόμενο μέρος των κανόνων (r12 r15), όπου διεξάγεται, στην πραγματικότητα, η προσθήκη.
Για παράδειγμα, ο κανόνας r12 υποδεικνύει ότι εάν ο πράκτορας trustee δεν βρισκόταν στην λευκή λίστα και κατόπιν λήφθηκε η απόφαση να ενταχθεί στην μαύρη λίστα, τότε θα καταχωρηθεί στην μαύρη λίστα.
Ως αποτέλεσμα, η λευκή λίστα του πράκτορα αξιολογητή WLA ≡ {Xi, … Xn} περιλαμβάνει, τελικά, τα ονόματα (?x → Xi) όλων των υποσχόμενων πρακτόρων (r16 r17) ενώ η μαύρη όσους θα προτιμούσε να αποφύγει (r18 r19).
Για παράδειγμα, ο κανόνας r16 υποδεικνύει ότι η λευκή λίστα του αξιολογητή περιλαμβάνει τον πράκτορα trustee μια συγεκριμένη χρο-
Μια σημαντική πρόκληση για τα ανοικτά κατανεμημένα και ενίοτε μεγάλης κλίμακας (πολυπρακτορικά) συστήματα είναι ο εντοπισμός αναφορών αξιολόγησης.
Η απλούστερη και πιο κοινή προσέγγιση σε ένα τέτοιο κατανεμημένο περιβάλλον είναι να σταλεί ένα μήνυμα αιτήματος [Jung, 2009;
Ωστόσο, το ερώτημα είναι πώς και σε ποιον πρέπει να σταλεί αυτό το μήνυμα, τόσο απευθείας όσο και μέσω (διαδοχικής) διάδοσης / προώθησης.
Χρησιμοποιώντας ως οδηγό την έρευνα για τα δίκτυα ομότιμων κόμβων (peer-topeer) [Androutsellis-Theotokis & Spinellis, 2004], προκύπτει ότι υπάρχουν δύο βασικοί τρόποι για να διαδοθούν τα μηνύματα, προκειμένου να εντοπιστούν κόμβοι (ή αναφορές στην περίπτωσή μας) [Meshkova et al., 2008].
Η πρώτη προσέγγιση εκχωρεί μια παράμετρο μέγιστου χρόνου ζωής (time-to-live – TTL) σε κάθε μήνυμα αιτήματος.
Επομένως, ο αιτών κόμβος αποστέλλει το μήνυμα στους γείτονες του, οι οποίοι με την σειρά τους το προωθούν στους δικούς τους γείτονες και ούτω καθεξής, μέχρι να εξαντληθεί ο διαθέσιμος χρόνος ζωής του μηνύματος (TTL).
Η δεύτερη προσέγγιση επιτρέπει στους κόμβους να προωθήσουν το μήνυμα μόνο σε έναν γείτονα κάθε φορά, καθώς πρέπει να περιμένουν την απάντηση από έναν γείτονα, πριν προωθήσουν το μήνυμα σε έναν άλλο γείτονα.
Η πρώτη προσέγγιση αυξάνει το κόστος επικοινωνίας, οδηγώντας σε σημαντικά αυξημένο εύρος ζώνης αλλά οι εταίροι (και οι αναφορές) εντοπίζονται γρήγορα.
Από την άλλη πλευρά, η δεύτερη προσέγγιση απαιτεί χαμηλό εύρος ζώνης αλλά οδηγεί σε χρονικές καθυστερήσεις, καθώς απαιτείται περισσότερος χρόνος για να πάρει πληροφορίες απαντήσεις στα αιτήματα.
Tα τελευταία χρόνια, αρκετοί ερευνητές έχουν προτείνει προσεγγίσεις που προσπαθούν να μειώσουν το εύρος ζώνης ή να βελτιώσουν τον χρόνο απόκρισης (παράδειγμα [Ramanathan et al., 2002;
Liao et al., 2014]), εστιάζοντας κυρίως στο πώς θα προσεγγιστούν καλοί και μακρινοί κόμβοι.
Φυσικά, το μοντέλο DISARM δεν επιχειρεί να ερευνήσει ή να βελτιώσει τα πρωτόκολλα διάδοσης μηνυμάτων στα συστήματα ομότιμων κόμβων, παρά εμπνέεται από αυτές τις προσεγγίσεις προκειμένου να προτείνει και να εφαρμόσει βελτιωμένες προσεγγίσεις στον χώρο τον πολυπρακτορικών συστημάτων.
Σε αυτό το πλαίσιο, το μοντέλο DISARM προτείνει μια περισσότερο διαισθητική προσέγγιση, όπου οι πράκτορες επωφελούνται από τις προηγουμένως καθιερωμένες σχέσεις τους, προκειμένου να διαδώσουν νέα αιτήματα, εντοπίζοντας σχετικά γρήγορα αναφορές με μικρό κόστος εύρους ζώνης.
Ειδικότερα, αν και η έννοια των γειτόνων δεν υπάρχει στα πολυπρακτορικά συστήματα, οι πράκτορες μπορούν να χρησιμοποιήσουν προηγουμένως γνωστούς εταίρους με παρόμοιο τρόπο.
Για το σκοπό αυτό, στο DISARM τα πολυπρακτορικά συστήματα θεωρούνται κοινωνικά δίκτυα πρακτόρων (social networks).
Ένα τέτοιο κοινωνικό δίκτυο μπορεί, ουσιαστικά, να αναπαρασταθεί με έναν κοινωνικό γράφο (social graph), δηλαδή έναν γράφο που βασίζεται σε ήδη γνωστούς πράκτορες, είτε καλούς (λευκή λίστα) είτε κακούς (μαύρη λίστα).
Επομένως, οι γνωστοί πράκτορες ενός πράκτορα είναι, υπό το πρίσμα του μοντέλου, οι γείτονες του.
Χρησιμοποιώντας την γνώση που αναπαρίσταται σε έναν κοινωνικό γράφο, το DISARM είναι σε θέση να προσδιορίσει τις σχέσεις εγγύτητας μεταξύ των πρακτόρων του περιβάλλοντος.
Σε αυτό το πλαίσιο, είναι ευκολότερο για έναν πράκτορα να διαδώσει τα αιτήματα του και να εντοπίσει τελικά κατάλληλες αναφορές αξιολογήσεων.
Επομένως, ένας πράκτορας A που θέλει να συλλέξει αναφορές, που αφορούν στον πράκτορα X, δεν στέλνει μήνυμα αιτήματος σε όλους τους πράκτορες παρά μόνο σε αυτούς που είναι αποθηκευμένοι στην λευκή του λίστα.
Το κίνητρο πίσω από αυτή την ενέργεια είναι το γεγονός ότι ο χρήστης είναι πολύ πιο πιθανό να πιστέψει δηλώσεις από έναν αξιόπιστο και γνωστό παρά από προηγουμένως γνωστό αλλά ανέντιμο πράκτορα ή έναν εντελώς άγνωστο.
Ωστόσο, αυτοί οι ήδη γνωστοί και καλοί πράκτορες πιθανόν να μην έχουν ιστορικό αλληλεπίδρασης με τον πράκτορα X.
Αυτό θα μπορούσε να οδηγήσει σε περιορισμένη ή μηδενική ανταπόκριση προς τον αιτούντα πράκτορα A.
Έτσι, υιοθετώντας την έννοια του μέγιστου χρόνου ζωής (TTL), στο DISARM κάθε μήνυμα αιτήματος για συλλογή αναφορών συνοδεύεται με μια τιμή TTL, η οποία αντιπροσωπεύει τις μεταβάσεις του γράφου.
Επομένως, κάθε αίτημα χαρακτηρίζεται από τον ορίζοντα του (τιμή TTL), που καθορίζει πόσο μακριά θα διαδοθεί το μήνυμα μέσα στο περιβάλλον.
Με άλλα λόγια, ο αιτών πράκτορας καθορίζει εάν επιτρέπεται (TTL ≠ 0) στους γνωστούς του (πράκτορες της λευκής λίστας) να προωθήσουν το αίτημα στους δικούς τους καλούς γνωστούς, δηλαδή τους πράκτορες των δικών τους λευκών λιστών (WL ≡ {Xk, … Xl}) και ούτω καθεξής.
Επομένως, το μήνυμα αιτήματος θα διαδίδεται σε βήματα, κάθε φορά που ένας πράκτορας λαμβάνει ένα τέτοιο αίτημα, θα το προωθεί στους δικούς του καλούς γνωστούς εάν επιτρέπεται (TTL ≠ 0), μειώνοντας την τιμή TTL κατά μια μονάδα.
Ωστόσο, εάν ο αιτών πράκτορας συμπεριλαμβάνεται στην μαύρη λίστα τότε το μήνυμα του αγνοείται.
Επιπρόσθετα, η τιμή TTL ενεργεί ως κριτήριο τερματισμού, έτσι ώστε τα μηνύματα να μην προωθούνται επ' αόριστον στο πολυπρακτορικό σύστημα.
Έτσι, κάθε φορά που ένας πράκτορας λαμβάνει ένα μήνυμα αιτήματος με μηδενική τιμή TTL, δεν το προωθεί.
Τέλος, κάθε πράκτορας επιστρέφει, ακολουθώντας την αντίστροφη πορεία του αιτήματος, τόσο τις δικές του αναφορές όσο και εκείνες που παρέχονται από τους εταίρους του.
Με αυτό τον τρόπο, όλες οι διαθέσιμες αναφορές θα ληφθούν τελικά από τον αρχικά αιτούντα πράκτο-
Το παραπάνω διαδικαστικό πλαίσιο του μοντέλου, όπως είναι φανερό, βασίζεται σε κανόνες και είναι, στην πραγματικότητα, ανεξάρτητο από λογικές, καθώς μπορεί να υλοποιηθεί με οποιαδήποτε λογική.
Ωστόσο, στα πλαίσια της παρούσας διατριβής, το μοντέλο DISARM χρησιμοποιεί την αναιρέσιμη λογική, για λόγους απλότητας και αποτελεσματικότητας.
Οι κανόνες r20-r24, που παρουσιάζονται στην συνέχεια, μοντελοποιούν την προαναφερθείσα συμπεριφορά.
Πιο συγκεκριμένα, ο κανόνας r20 αρχικοποιεί το αίτημα για αναφορές με την αποστολή του σε όλους τους πράκτορες ?r της λευκής λίστας, μαζί με την παράμετρο TTL.
Ο κανόνας r21 είναι υπεύθυνος για την απάντηση προς τον αιτούντα πράκτορα, όσον αφορά τις διαθέσιμες αναφορές, εφόσον υπάρχει προηγούμενη εμπειρία στην τοπική βάση γνώσης.
Ο κανόνας r22 είναι υπεύθυνος για την προώθηση ενός ληφθέντος αιτήματος στους πράκτορες της λευκής λίστας, εφόσον η τιμή TTL είναι ακόμη θετική, την οποία ταυτόχρονα μειώνει και κατά μια μονάδα.
Ο κανόνας r23 είναι ένας κανόνας-αναιρέτης (defeater), που υπερισχύει του κανόνα r22, εμποδίζοντας την απάντηση προς τους κακούς πράκτορες.
Τέλος, ο κανόνας r24 αποθηκεύει στην τοπική βάση γνώσης τις ληφθείσες αναφορές, εάν ο αποστολέας δεν περιλαμβάνεται στη μαύρη λίστα.
Σε αυτόν τον κανόνα χρησιμοποιείται η άρνηση-ως-αποτυχία, γεγονός που σημαίνει ότι εάν το κατηγόρημα BL(?s) αποτύχει κατά την διάρκεια της εκτέλεσης, τότε θα ισχύει το κατηγόρημα not(BL(?s)), το οποίο προσδιορίζει εάν ένας πράκτορας αποστολέας δεν ανήκει στη μαύρη λίστα.
Όταν συλλεχθούν όλες οι διαθέσιμες αναφορές αξιολογήσεων, πρέπει να ληφθεί μια σημαντική απόφαση, ποιες αναφορές θα πρέπει να ληφθούν υπόψη.
Οι αναφορές αντιπροσωπεύουν την εμπειρία των εμπλεκομένων μερών, η οποία διακρίνεται σε άμεση (άμεση εμπειρία πράκτορα PRX) και έμμεση εμπειρία.
Η έμμεση εμπειρία διαχωρίζεται σε δύο κατηγορίες, τις αναφορές που παρέχονται από αγνώστους (SRX) και τις αναφορές που παρέχονται από γνωστούς, λόγω προηγούμενων συναλλαγών, πράκτορες.
Σε αυτό το πλαίσιο, ο κανόνας r25 καθορίζει ποιοι πράκτορες θεωρούνται γνωστοί.
Επιπρόσθετα, οι γνωστοί πράκτορες διαχωρίζονται σε τρεις κατηγορίες, στους πράκτορες που περιλαμβάνονται στην λευκή λίστα WL (WRX), στους πράκτορες που περιλαμβάνονται στην μαύρη λίστα BL (BRX) και στους υπόλοιπους γνωστούς πράκτορες (KRX).
Η χρήση διαφορετικών απόψεων από μια μεγάλη ομάδα μεγιστοποιεί την πιθανότητα να περιθωριοποιηθούν αθέμιτες ή άδικες αξιολογήσεις.
Επομένως, η χρήση τόσο της άμεσης όσο και της έμμεσης εμπειρίας θα μπορούσε να οδηγήσει σε εκτιμήσεις που βρίσκονται πιο κοντά στην πραγματικότητα.
Ωστόσο, μερικές φορές μία ή περισσότερες κατηγορίες αναφορών λείπουν.
Για παράδειγμα, ένας νεοεισερχόμενος δεν έχει καμία προσωπική εμπειρία και, έτσι, δεν υπάρχουν διαθέσιμες αναφορές (PRX), οπότε, θα πρέπει να στραφεί στις αναφορές τρίτων.
Ειδικότερα, όπως κάνουν και οι άνθρωποι, θα αναζητήσει την γνώμη ήδη γνωστών και αξιόπιστων πρακτόρων, καθώς είναι πιο πιθανό να πιστέψει τις δικές τους δηλώσεις παρά αυτές άλλων ξένων πρακτόρων.
Επομένως, η προσωπική άποψη (PR) είναι πιο σημαντική από την γνώμη των γνωστών (KR), η οποία με την σειρά της είναι πιο σημαντική από την γνώμη των ξένων (SR).
Επιπρόσθετα, οι ήδη γνωστοί και καταχωρημένοι στην μαύρη λίστα πράκτορες θεωρούνται γενικά αναξιόπιστοι παρά έμπιστοι (γνωστοί πράκτορες ή πράκτορες λευκής λίστας) και, ως εκ τούτου, αγνοούνται.
Τέλος, οι πράκτορες της λευκής λίστας (WR) είναι συνήθως πιο αξιόπιστοι από τους απλούς γνωστούς (KR).
Σε αυτό το πλαίσιο, η σχέση μεταξύ των κατηγοριών των αναφορών παρουσιάζεται γραφικά στην Εικόνα 6.7.
Στην Εικόνα 6.7, το πρώτο επίπεδο (επάνω) υποδηλώνει ότι όλες οι αναφορές έχουν την ίδια βαρύτητα ενώ η τέταρτη γραμμή (κάτω) υποδηλώνει μια απόλυτη προτεραιότητα στην προσωπική εμπειρία (PR), έναντι των γνωστών της λευκής λίστας (WR), οι οποίοι με την σειρά τους υπερέχουν έναντι των υπολοίπων γνωστών (KR), οι οποίοι, τέλος, υπερέχουν έναντι των αγνώστων (SR).
Επομένως, οι κόμβοι στο αριστερό τμήμα έχουν προτεραιότητα έναντι των κόμβων στα δεξιά.
Επιπλέον, μπορούν να γίνουν συνδυασμοί των κόμβων από διαφορετικά επίπεδα, υπό τον όρο ότι κάθε πηγή αξιολόγησης (PR, WR, KR, SR) συμπεριλαμβάνεται μόνο μία φορά.
Για παράδειγμα, μπορεί να συνδυαστεί ο κόμβος {PR, WR} από το τρίτο επίπεδο με τους κόμβους {KR}, {SR} από το τελευταίο (κάτω) επίπεδο.
Αυτό σημαίνει ότι η προσωπική εμπειρία και η εμπειρία των αξιόπιστων γνωστών έχουν ίση μεταχείριση ενώ και οι δύο προτιμώνται έναντι αναφορών από απλούς γνωστούς και αγνώστους.
Επομένως, είναι ευθύνη του ενδιαφερόμενου πράκτορα (Α) να επιλέξει ποιες από τις αναφορές που έχει συλλέξει θα χρησιμοποιήσει στην διαδικασία της εκτίμησης.
Για να επιλέξει, ωστόσο, πρέπει πρώτα να προσδιορίσει ποιες από αυτές είναι επιλέξιμες για συμμετοχή στην τελική τιμή της φήμης ενός πράκτορα.
Με άλλα λόγια, πρέπει να προσδιορίσει τον επιλέξιμο συνδυασμό των τεσσάρων συντελεστών: RX = {PRX, WRX, KRX, SRX}.
Για το σκοπό αυτό, στο μοντέλο DISARM, όπως έχει ήδη αναφερθεί, χρησιμοποιούνται η σημαντικότητα και η βεβαιότητα, προκειμένου οι πράκτορες να αξιολογήσουν και να επιλέξουν τις κατάλληλες για αυτούς αναφορές από το σύνολο των αναφορών που έχουν συλλέξει.
Είναι, άλλωστε, σημαντικό να λαμβάνονται υπόψη αναφορές που έγιναν από βέβαιους για την αξιολόγηση τους πράκτορες, καθώς είναι πιο πιθανό να είναι σωστές.
Επιπλέον, βέβαιοι αξιολογητές, που συμμετείχαν σε σημαντικές για αυτούς συναλλαγές, είναι ακόμη πιο πιθανό να αναφέρουν ειλικρινείς αξιολογήσεις.
Αυτή η παραδοχή, οδήγησε στους ακόλουθους αναιρέσιμους κανόνες, που ορίζουν ποιες αναφορές είναι επιλέξιμες για την εκτίμηση της φήμης και ποιες όχι, σύμφωνα με την σημαντικότητα και την βεβαιότητα, αν και η ίδια η τιμή της σημαντικότητας και της βεβαιότητας δεν εμπλέκονται στην ίδια την εκτίμηση.
Ο κανόνας r26 υποδηλώνει ότι εάν τόσο η βεβαιότητα του αξιολογητή όσο και η σημαντικότητα της συναλλαγής είναι υψηλές, σύμφωνα με τα κατώφλια του χρήστη, τότε η υπό εξέταση αναφορά θεωρείται επιλέξιμη για την διαδικασία της εκτίμησης.
Ο κανόνας r27 υποδηλώνει ότι ακόμη και αν η σημαντικότητα είναι χαμηλότερη από το κατώφλι, δεν έχει τόση σημασία εάν η βεβαιότητα του αξιολογητή είναι υψηλή.
Ο κανόνας r28, τέλος, υποδηλώνει ότι εάν υπάρχουν μόνο αναφορές με υψηλή σημαντικότητα, τότε αυτές θα πρέπει να είναι επιλέξιμες.
Σε κάθε άλλη περίπτωση, η αναφορά θα πρέπει να απορριφθεί.
Οι παραπάνω κανόνες, φυσικά, είναι αναιρέσιμοι και όλοι εξάγουν θετικά λεκτικά.
Ωστόσο, τα λεκτικά αυτά είναι αντικρουόμενα για το ίδιο ζεύγος πρακτόρων (αξιολογητή και αξιολογούμενο), δεδομένου ότι παρουσία, για παράδειγμα, αναφορών που ξεπερνούν και τα δύο όρια, οι αναφορές που ξεπερνούν μόνο τα ένα παραλείπονται.
Αυτός είναι και ο λόγος, για τον οποίο υπάρχει μια σχέση υπεροχής μεταξύ των κανόνων.
Το σύνολο των συγκρούσεων
Ωστόσο, ακόμη και αν προσδιοριστεί ποιες αναφορές είναι επιλέξιμες, η πραγματικά τελική επιλογή επαφίεται στην προσωπική στρατηγική του πράκτορα Α.
Το κριτήριο για αυτή την επιλογή, όπως ήδη αναφέρθηκε, είναι ο χρόνος.
Κάποιοι πράκτορες προτιμούν να λάβουν υπόψη όλες τις επιλέξιμες αναφορές ενώ άλλοι προχωρούν ένα βήμα παραπέρα, υποδεικνύοντας ποιες από τις επιλέξιμες αναφορές, για παράδειγμα οι νεότερες, θα συμμετέχουν τελικά στην εκτίμηση.
Οι κανόνες r29, r29’ και r29’’ είναι παραδείγματα μιας τέτοιας απόφασης.
Ο r29 υποδηλώνει ότι δοθείσας μιας χρονικής περιόδου, μόνο αναφορές σε αυτό το διάστημα θα ληφθούν υπόψη, ο r29’ υποδηλώνει ότι μόνο οι τελευταίες (από ένα συγκεκριμένο χρονικό σημείο και μετά) θα ληφθούν υπόψη ενώ ο r29’’ υποδηλώνει ότι θα ληφθούν υπόψη μόνο αναφορές που βρίσκονται εντός ενός χρονικού παραθύρου (όπου now() επιστρέφει την τρέχουσα χρονική στιγμή).
Το μοντέλο DISARM, λαμβάνοντας όλα τα παραπάνω υπόψη, κατηγοριοποιεί τελικά τις αναφορές (κανόνες r30 έως r33) στις προηγουμένως καθορισμένες κατηγορίες και προχωρά στην τελική απόφαση σχετικά με το ποιες από τις αναφορές μπορούν, στην πραγματικότητα, να συμμετέχουν στην διαδικασία εκτίμησης για την τελική τιμή φήμης RX (κανόνες r34
Οι κανόνες r30 έως r33, κατηγοριοποιούν τις αναφορές που λαμβάνονται υπόψη σε PRX (άμεση εμπειρία), WRX (μαρτυρίες αξιόπιστων και γνωστών λευκής λίστας), KRX (μαρτυρίες λοιπών γνωστών) και SRX (μαρτυρίες αγνώστων), αντίστοιχα.
Στους κανόνες r32 and r33 χρησιμοποιείται άρνηση-ως-αποτυχία.
Συγκεκριμένα, στον r32 εάν ένας πράκτορας ?k δεν μπορεί να βρεθεί ούτε στην λευκή ούτε στην μαύρη λίστα, θεωρείται ως ένας απλός γνωστός μάρτυρας.
Επιπλέον, στον r33 εάν το κατηγόρημα known() αποτύχει κατά την διάρκεια της εκτέλεσης, τότε ισχύει το not(known()), προσδιορίζοντας δηλαδή ποιοι πράκτορες θεωρούνται εντελώς άγνωστοι.
Οι παραπάνω κανόνες είναι αυστηροί, δηλαδή τα συμπεράσματα τους δεν μπορούν να αμφισβητηθούν.
Η τελική διαδικασία λήψης αποφάσεων για την τιμή RX βασίζεται σε μια θεωρία σχέσεων μεταξύ των κατηγοριών των αναφορών.
Στην Εικόνα 6.7 παρουσιάστηκαν πλήρως οι σχέσεις μεταξύ όλων των κατηγοριών και στην συνέχεια παρουσιάζονται τρεις πιθανές θεωρίες που βασίζονται σε αυτή την σχέση.
Στην πρώτη θεωρία, λαμβάνονται υπόψη όλες οι κατηγορίες (rt), επομένως, εάν είναι διαθέσιμες αναφορές από όλες (r34 έως r37), τότε θα συμμετέχουν όλες στην τελική εκτίμηση της φήμης.
Εάν, κάποια από τις κατηγορίες λείπει, τότε οι υπόλοιπες συνδυάζονται ενώ εάν μόνο μία κατηγορία είναι διαθέσιμη, τότε λαμβάνεται υπόψη μόνο αυτή.
Η θεωρία αυτή είναι ισοδύναμη με την πρώτη γραμμή της Εικόνας 6.7, είναι δηλαδή ο συνδυασμός {PR, WR, KR, SR}.
Στις υπόλοιπες δύο θεωρίες, συγκρούονται μεταξύ τους απόψεις από διαφορετικές κατηγορίες (αντικρουόμενα λεκτικά), έτσι, η σύγκρουση επιλύεται μέσω της προσθήκης σχέσεων υπεροχής.
Συγκεκριμένα, η προσωπική άποψη είναι η πλέον σημαντική και, στην συνέχεια, ακολουθούν η γνώμη των πρακτόρων της λευκής λίστας, των υπολοίπων γνωστών πρακτόρων και των αγνώστων.
Για να αποφευχθεί επανάληψη των κανόνων, παρουσιάζεται μόνο η σχέση υπεροχής.
Το σύνολο συγκρούσεων και για τις δύο θεωρίες είναι:
Στην δεύτερη θεωρία, η σχέση υπεροχής μεταξύ των κανόνων βασίζεται στο γεγονός ότι ένας πράκτορας στηρίζεται στην δική του εμπειρία, εάν θεωρεί ότι είναι επαρκής ενώ εάν πιστεύει ότι δεν είναι, ζητά την γνώμη των άλλων, όπως κάνουν και οι άνθρωποι στην πραγματική ζωή.
Αυτή η θεωρία είναι ισοδύναμη με την τελευταία σειρά της Εικόνας 6.7, είναι δηλαδή ο συνδυασμός {PR}, {WR}, {KR}, {SR}.
Στην τρίτη θεωρία, εάν υπάρχει διαθέσιμη άμεση εμπειρία (PR), τότε είναι προτιμώμενο να συνδυαστεί με αναφορές αξιόπιστων πρακτόρων (WR).
Διαφορετικά προτιμώνται οι αναφορές από τους ήδη γνωστούς αξιόπιστους πράκτορες παρά οι αναφορές των αγνώστων.
Στο τέλος, εάν τίποτα από τα παραπάνω δεν είναι διαθέσιμα, το μοντέλο DISARM δρα ως ένα απόλυτο σύστημα μαρτυριών.
Αυτή η θεωρία είναι ισοδύναμη με τον συνδυασμό του πρώτου κόμβου της τρίτης σειράς με τους δύο τελευταίους κόμβους της τελευταίας σειράς της Εικόνας 6.7, είναι δηλαδή ο συνδυασμός {PR, WR}, {KR}, {SR}.
Τελικά, ο πράκτορας Α φτάνει σε μια απόφαση σχετικά με το ποιες αναφορές θα συμμετέχουν στην εκτίμηση (RX = {PRX, WRX, KRX, SRX}), σύμφωνα με την επιλεγείσα θεωρία σχέσεων.
Στο πλαίσιο αυτό, προκειμένου να απορριφθούν οι ακραίες τιμές (outliers), ακολουθείται η λογαριθμική προσέγγιση που έχει χρησιμοποιηθεί και στα προηγούμενα μοντέλα.
Έτσι, η τελική τιμή φήμης RX είναι μια συνάρτηση, που συνδυάζει τις μετασχηματισμένες αξιολογήσεις για κάθε διαθέσιμη κατηγορία και μπορεί να είναι είτε θετική είτε αρνητική, όπως και στην περίπτωση του μοντέλου HARM:
Επιπλέον, δεδομένου ότι το μοντέλο DISARM, όπως και το μοντέλο HARM, αποσκοπεί στην προσομοίωση της ανθρώπινης συμπεριφοράς, επιτρέπει στους πράκτορες να καθορίσουν ποια και πόσο σημαντική είναι κάθε παράμετρος αξιολόγησης για αυτούς.
Με άλλα λόγια, ένας πράκτορας μπορεί να θεωρήσει την εγκυρότητα ως την πιο σημαντική από όλες ενώ μπορεί να μην ενδιαφέρεται καθόλου για την έκβαση της αλληλεπίδρασης.
Ένα παράδειγμα θα μπορούσε να είναι το εξής: {response time→20%, validity→50%, completeness→10%, correctness→10%, cooperation→10%, outcome feeling→0%}.
Επομένως, επιτρέπεται στους πράκτορες να παρέχουν ειδικά βάρη (wi, i[1, 6]), τα οποία θα υποδηλώνουν τις προσωπικές τους προτιμήσεις για τις συνιστώσες των αξιολογήσεων.
Ο δεύτερος τύπος (6.13), ο οποίος τροποποιεί τον πρώτο (6.12), υπολογίζει τις σταθμισμένες κανονικο-
Προχωρώντας ένα βήμα ακόμη, το μοντέλο DISARM επιχειρεί να κατανοήσει βαθύτερα την σχέση μεταξύ των κατηγοριών αξιολόγησης που συμμετέχουν στην εκτίμηση.
Όπως παρουσιάστηκε στην προηγούμενη υποενότητα, η απόφαση για το ποιες κατηγορίες θα συμμετέχουν επαφίεται στην επιλεγείσα θεωρία σχέσεων, όμως δεν υπάρχει καμία ένδειξη για το ποσοστό χρήσης κάθε μιας κατά την εκτίμηση.
Για το σκοπό αυτό, ο χρήστης του μοντέλου DISARM, μέσω του πράκτορα του (A), είναι σε θέση να καθορίσει αυτό που στην παρούσα διατριβή ονομάζεται «κοινωνικά βάρη εμπιστοσύνης» (πp, πw, πk, πs).
Αυτά τα βάρη καθορίζουν την ισορροπία μεταξύ προσωπικής εμπειρίας (πp) και μαρτυριών (πw, πk, πs).
Επομένως, η τελική τιμή φήμης RX υπολογίζεται σύμφωνα με το ποια εμπειρία είναι πιο σημαντική για τον τελικό χρήστη (τύπος 6.14).
Τέλος, δεδομένου ότι ο χρόνος είναι σημαντικός, στο DISARM δεν χρησιμοποιείται μόνο για την επιλογή των διαθέσιμων αναφορών αλλά χρησιμοποιείται, επίσης, και στην ίδια την εκτίμηση.
Προκειμένου να συμπεριληφθεί αυτή η πτυχή στην τελική τιμή της φήμης, κάθε αξιολόγηση κατά την χρονική στιγμή t (t <tnow) πολλαπλασιάζεται με τον ίδιο τον χρόνο t, όπως φαίνεται παρακάτω.
Έτσι, ο χρόνος γίνεται ένα είδος βάρους, όσο μεγαλύτερος (πιο πρόσφατος) είναι τόσο περισσότερο βαραίνει.
Ο τέταρτος τύπος (4) παρουσιάζει την τελική μετρική του DISARM.
Ένα πιθανό παράδειγμα αυτού του τύπου, το απλούστερο για την συνάρτηση  , θα μπορούσε να είναι το άθροισμα, υπό την έννοια ότι όλες οι κατηγορίες συμμετέχουν αθροιστικά στην τελική τιμή, η καθεμία με το βάρος της.
Μέτρηση της βεβαιότητας της εκτίμησης Τέλος, το μοντέλο DISARM μελετά την μεταβλητότητα των αξιολογήσεων που ελήφθησαν τελικά υπόψη ως μέτρο για την βεβαιότητα της ίδιας της εκτίμησης.
Για το σκοπό αυτό, χρησιμοποιείται η τυπική απόκλιση, η οποία μετρά την ποσότητα της διακύμανσης ή διασποράς από το μέσο όρο.
Ωστόσο, εκτός από την έκφραση της μεταβλητότητας του πληθυσμού, η τυπική απόκλιση συνήθως χρησιμοποιείται και για την μέτρηση της βεβαιότητας σε στατιστικά συμπεράσματα, δηλαδή είναι ένα μέτρο για το πόσο διεσπαρμένοι είναι οι αριθμοί.
Μια χαμηλή τυπική απόκλιση υποδηλώνει ότι τα δεδομένα (εδώ αναφορές αξιολογήσεων) τείνουν να είναι πολύ κοντά στον μέσο όρο, την αναμενόμενη τιμή, έτσι είναι περισσότερο πιθανό η εκτίμηση να είναι πιο κοντά στην πραγματική συμπεριφορά του πράκτορα.
Από την άλλη πλευρά, μια υψηλή τυπική απόκλιση υποδηλώνει ότι τα δεδομένα βρίσκονται διεσπαρμένα σε ένα μεγάλο εύρος τιμών και, ως εκ τούτου, είναι δύσκολο να προβλέψουμε την συμπεριφορά του πράκτορα.
Ο πέμπτος τύπος (6.16) παρουσιάζει την μετρική της τυπικής απόκλισης, που χρησιμοποιείται στο DISARM, με το N να αντιπροσωπεύει τον συνολικό αριθμό αναφορών που χρησιμοποιήθηκαν (στον τύπο 6.15).
Στο DISARM, ο παραπάνω τύπος δεν συμμετέχει στην ίδια την διαδικασία εκτίμησης ούτε επηρεάζει, με οποιοδήποτε τρόπο, την τιμή της φήμης.
Ο ρόλος του είναι να δράσει συμπληρωματικά προς την τελική μετρική του DISARM (τύπος 6.15), προκειμένου να υποδείξει την πιθανότητα η εκτιμώμενη τιμή (τύπος 6.15), να είναι κοντά στην πραγματικότητα.
Το κίνητρο πίσω από την χρήση του τύπου της τυπικής απόκλισης (τύπος 6.16) είναι το γεγονός ότι, αν και τα μοντέλα φήμης παρέχουν μια εκτιμώμενη τιμή φήμης, δεν παρέχουν καμία ένδειξη για το πόσο πιθανό είναι αυτή η εκτίμηση να αντικατοπτρίζει την πραγματική συμπεριφορά του πράκτορα.
Έτσι, το μοντέλο DISARM παρέχει ένα πρόσθετο εργαλείο (τύπος 6.16), προκειμένου να βοηθήσει τους πράκτορες, και επομένως τους χρήστες τους, να κάνουν τις καλύτερες για αυτούς επιλογές.
Προκειμένου να αξιολογηθούν τα προτεινόμενα μοντέλα χρησιμοποιήθηκε το σύστημα EMERALD (Κεφάλαιο 4) [Kravari et al., 2010b].
Για την υλοποίηση των πειραμάτων υιοθετήθηκε με μικρές τροποποιήσεις, το κατάλληλο για αυτό το σκοπό πακέτο ελέγχου (testbed) που παρουσιάστηκε από τους Huynh, Jennings και Shadbolt [Huynh et al., 2006a;
Huynh et al., 2006b] και όχι το απλό σενάριο χρήσης που χρησιμοποιήθηκε για λόγους επίδειξης της γραφικής διεπαφής του συστήματος EMERALD στο τέταρτο κεφάλαιο της διατριβής (Ενότητα 4.5.3).
Το περιβάλλον ελέγχου είναι ένα πολυπρακτορικό σύστημα, που αποτελείται από δύο κατηγορίες πρακτόρων, αυτούς που παρέχουν κάποια υπηρεσία και αυτούς που χρησιμοποιούν τις υπηρεσίες αυτές.
Θεωρείται ότι η επίδοση ενός παρόχου και ουσιαστικά η αξιοπιστία του είναι ανεξάρτητη από την υπηρεσία που παρέχεται (π.χ. πώληση υπηρεσιών λογισμικού ή τραπεζικές υπηρεσίες).
Για να μειωθεί όμως η πολυπλοκότητα του περιβάλλοντος του ελέγχου γίνεται η παραδοχή ότι υπάρχει μόνο ένα είδος υπηρεσίας σε αυτό.
Ως αποτέλεσμα, θεωρείται ότι όλοι οι πάροχοι προσφέρουν την ίδια υπηρεσία.
Παρ' όλα αυτά, η επίδοση των παρόχων, όπως για παράδειγμα η ποιότητα της υπηρεσίας που προσφέρουν, διαφέρει και καθορίζει το όφελος που λαμβάνει τελικά ο καταναλωτής από κάθε συναλλαγή.
Το όφελος αυτό ονομάζεται UG (Utility Gain).
Κάθε συναλλαγή πρακτόρων είναι ένας γύρος στις προσομοιώσεις του ελέγχου.
Τα γεγονότα που λαμβάνουν χώρα στον ίδιο γύρο θεωρούνται ταυτόχρονα.
Ακολουθώντας επομένως αυτή την φιλοσοφία, ο αριθμός των γύρων χρησιμοποιείται ως χρονoσφραγίδα για τα γεγονότα.
Σε κάθε πείραμα, το πακέτο ελέγχου απαρτίζεται από πράκτορες παρόχους και καταναλωτές.
Κάθε πράκτορας-καταναλωτής χρησιμοποιεί ένα συγκεκριμένο μοντέλο εμπιστοσύνης, το οποίο και τον βοηθάει να επιλέξει τον κατάλληλο πάροχο κάθε φορά που χρειάζεται μια υπηρεσία.
Η μόνη διαφορά μεταξύ των καταναλωτών είναι τα μοντέλα εμπιστοσύνης που χρησιμοποιούν, έτσι η ωφέλεια που αποκτά κάθε πράκτορας μέσω των προσομοιώσεων θα αντικατοπτρίζει την απόδοση του μοντέλου εμπιστοσύνης που χρησιμοποιεί για να επιλέξει αξιόπιστους παρόχους.
Για να ληφθεί, επομένως, ένα ακριβές αποτέλεσμα για την σύγκριση των αποδόσεων μεταξύ των μοντέλων εμπιστοσύνης, κάθε ένα από τα μοντέλα πρέπει να χρησιμοποιηθεί από ένα μεγάλο αριθμό πρακτόρωνκαταναλωτών και κάθε πράκτορας πάροχος να εμπλέκεται με ένα μεγάλο αλλά ίσο αριθμό καταναλωτών.
Οι παράμετροι των πειραμάτων, που υιοθετήθηκαν από την εργασία [Huynh et al., 2006b] και χρησιμοποιήθηκαν σε όλα ανεξαιρέτως τα πειράματα παρουσιάζονται στον Πίνακα 6.1.
Οι τέσσερις τύποι των παρόχων υπηρεσιών που χρησιμοποιούνται είναι οι αγαθοί, οι κοινοί, οι ασταθείς και οι κακοί.
Οι ασταθείς πράκτορες καλύπτουν όλα τα πιθανά αποτελέσματα τυχαία ενώ οι υπόλοιποι τύποι παρέχουν υπηρεσίες σύμφωνα με μια καθορισμένη μέση τιμή ποιότητας, έχοντας ένα μικρό εύρος απόκλισης.
Πίνακας 6.1.
Οι παράμετροι των πειραμάτων αξιολόγησης για τα μοντέλα εμπιστοσύνης.
Σε αυτό το πλαίσιο, κάθε πράκτορας-καταναλωτής επιλέγει έναν πάροχο, έπειτα χρησιμοποιεί την υπηρεσία του επιλεγμένου παρόχου και αποκομίζει κάποιο όφελος (UG) από αυτήν την συναλλαγή.
Η τιμή της ωφέλειας UG κυμαίνεται από -10 έως 10 και εξαρτάται από το επίπεδο της επίδοσης του πράκτορα-παρόχου στην εν λόγω συναλλαγή.
Ένας πάροχος φυσικά μπορεί να εξυπηρετήσει πολλούς χρήστες ταυτόχρονα.
Μετά από μια συναλλαγή, ο πράκτορας-καταναλωτής βαθμολογεί την υπηρεσία του παρόχου αξιολογώντας το επίπεδο της επίδοσης και την ποιότητα της υπηρεσίας που έλαβε.
Καταγράφει την βαθμολογία για πιθανές μελλοντικές εκτιμήσεις και ενημερώνει τον πάροχο ή τον διαχειριστή του μοντέλου για την βαθμολογία που έδωσε.
Έτσι, είτε ο ίδιος ο πράκτορας-πάροχος, για κατανεμημένα μοντέλα, όπως το DISARM [Kravari & Bassiliades, 2015b], το Certified Reputation [Huynh et al., 2006b] και το CRM [Khosravifar et al., 2012], είτε η κεντρική διαχειριστική αρχή, όπως στα μοντέλα HARM [Kravari et al., 2012a], T-REX [Kravari et al., 2010a] και SPORAS [Zacharia & Maes, 2000], καταγράφει τη βαθμολογία ως αποδεικτικό στοιχείο της επίδοσης για μελλοντική παρουσίαση στους δυνητικούς καταναλωτές.
Σε αυτό το πλαίσιο, γίνεται η παραδοχή ότι όλοι οι πράκτορες ανταλλάσσουν τις πληροφορίες τους με ειλικρίνεια.
Αυτό σημαίνει ότι ένας πράκτορας, είτε ως μάρτυρας είτε ως κριτής, παρέχει τις πραγματικές αξιολογήσεις του χωρίς καμία τροποποίηση.
Αξιολόγηση των κεντρικών μοντέλων T-REX και HARM Στην πρώτη πειραματική διαδικασία, προκειμένου να αξιολογηθούν τα μοντέλα T-REX [Kravari et al., 2010a] και HARM [Kravari et al., 2012a], υλοποιήθηκαν στo σύστημα EMERALD.
Δεδομένου ότι τόσο το T-REX όσο και το HARM είναι κεντρικά μοντέλα φήμης, υλοποιήθηκε για το μοντέλο T-REX ένας πράκτορας που ονομάζεται Trustor και για το μοντέλο
HARM ένας άλλος πράκτορας που ονομάζεται HARMAgent.
Οι πράκτορες αυτοί ενεργούν ως κεντρική αρχή και είναι υπεύθυνοι για την συλλογή, την αποθήκευση και την ασφαλή διατήρηση των αναφορών αξιολόγησης.
Επιπλέον, το σύστημα EMERALD παρέχει και τον ειδικό πράκτορα DR-Reasoner, ο οποίος βασίζει την υπηρεσία του στο σύστημα αναιρέσιμης λογικής DR-Device [Bassiliades et al., 2006] και είναι αυτός που χρησιμοποιείται για την αξιολόγηση του μοντέλου HARM.
Η επιλογή και χρήση του πράκτορα DR-Reasoner έγινε, καθώς επί του παρόντος, δεν υπάρχει διαθέσιμος μηχανισμός εξαγωγής συμπερασμάτων για την χρονική αναιρέσιμη λογική έτσι ώστε να χρησιμοποιηθεί για την άμεση υποστήριξη του μοντέλου HARM.
Έτσι, στα πλαίσια της παρούσας διατριβής, οι κανόνες του μοντέλου μετατράπηκαν σε απλούς αναιρέσιμους κανόνες, οι οποίοι χρησιμοποιούν χρονικά κατηγορήματα για να προσομοιώσουν την χρονική σημασιολογία.
Σε αυτό το πλαίσιο, εάν ένας πράκτορας-καταναλωτής χρειάζεται, για παράδειγμα, κάποια υπηρεσία μπορεί να επικοινωνήσει με τον κεντρικό ανεξάρτητο πράκτορα Trustor εάν χρησιμοποιεί το μοντέλο T-REX ή τον πράκτορα HARMAgent εάν χρησιμοποιεί το κεντρικό μοντέλο HARM (Εικόνα 6.7), προκειμένου να ενημερωθεί για τις τιμές της φήμης των παρόχων και αυτό μπορεί να γίνεται σε κάθε γύρο ανεξάρτητα.
Έτσι, ο πράκτοραςκαταναλωτής θα είναι πάντα σε θέση να επιλέξει έναν πάροχο για την υπηρεσία που επιθυμεί, στην πραγματικότητα αυτόν με την υψηλότερη τιμή φήμης.
Η διαδικασία επιλογής, επομένως, βασίζεται στο μοντέλο εμπιστοσύνης, το οποίο και πρέπει να αποφανθεί ποιος από τους παρόχους είναι πιθανό να είναι ο πιο αξιόπιστος.
Φυσικά, πράκτορεςκαταναλωτές χωρίς την δυνατότητα επιλογής ενός μοντέλου εμπιστοσύνης θα επιλέξουν τυχαία έναν πάροχο από την λίστα.
Στην παρούσα διαδικασία ελέγχου περιλαμβάνονται τα μοντέλα HARM, T-REX, SERM [Kravari & Bassiliades, 2012b] και No Trust (ΝΟΝΕ), δηλαδή απουσία μοντέλου.
Επομένως μετά από 500 προσομοιώσεις και 100 συμμετέχοντες, προκύπτει ότι όταν η επιλογή παρόχων έγινε τυχαία χωρίς την χρήση κάποιου μοντέλου εμπιστοσύνης, η ωφέλεια είναι, όπως είναι αναμενόμενο, συνεχώς η χαμηλότερη.
Η επίδοση του SERM, το οποίο βασίζεται μόνο στο σταθμισμένο άθροισμα των σχετικών αξιολογήσεων είναι αρκετά χαμηλή.
Από την άλλη πλευρά, το μοντέλο T-REX, όντας μια κεντρική υπηρεσία, έχει την δυνατότητα να συλλέγει βαθμολογίες για όλες τις συναλλαγές του περιβάλλοντος, επιτρέποντας στους πράκτορες που το χρησιμοποιούν να επιτύχουν υψηλή απόδοση ωφέλειας ακόμη και από τις πρώτες συναλλαγές (Εικόνα 6.8).
Το μοντέλο HARM παρουσιάζει ακόμη υψηλότερη απόδοση, καθώς συνδυάζει τα πλεονεκτήματα ενός κεντρικού μοντέλου, όπως το T-REX, με αυτά τις συλλογιστικής.
Επιπλέον, πειράματα με τις ίδιες παραμέτρους, όπως παρουσιάστηκε στην εργασία [Huynh et al., 2006b], έχουν δείξει ότι τα μοντέλα SPORAS [Zacharia & Maes, 2000] και Certified Reputation (CR) [Huynh et al., 2006b] είναι επωφελή για τους πράκτορες-καταναλωτές καθώς τους βοηθούν να κερδίσουν σημαντικά υψηλή ωφέλεια (UG), χαμηλότερη ωστόσο από τα προτεινόμενα μοντέλα T-REX και HARM.
Εν κατακλείδι, τα μοντέλα που ελέγχθηκαν μπορούν να γνωρίσουν σταδιακά τους παρόχους, που δρουν στο περιβάλλον, και έτσι να επιτρέψουν στους υπόλοιπους πράκτορες να κάνουν την καλύτερη δυνατή επιλογή εταίρου.
Ο Πίνακας 6.2 παρουσιάζει την μέση τιμή ωφέλειας UG ανά συναλλαγή για όλα τα μοντέλα που εξετάστηκαν συνολικά, υπό τις ίδιες συνθήκες.
Συγκριτικά, καθώς στο μοντέλο CR κάθε πάροχος αποκαλύπτει ένα μικρό μόνο μέρος των αξιολογήσεων του, παρατηρείται το φαινόμενο οι πρώτες συναλλαγές να αναλώνονται στην «αναγνώριση» του περιβάλλοντος.
Η καλύτερη επίδοση του μοντέλου TREX οφείλεται στο γεγονός ότι είναι ένα κεντρικό μοντέλο και, επομένως, είναι σε θέση να συγκεντρώσει πολύ περισσότερες πληροφορίες από ό,τι τα κατανεμημένα μοντέλα και επιπλέον χρησιμοποιεί έναν δυναμικό και ευέλικτο τρόπο για την εκτίμηση της φήμης.
Η ελαφρώς καλύτερη επίδοση του μοντέλου HARM προκύπτει αφενός από το γεγονός ότι είναι κεντρικό, όπως και το T-REX, και επομένως είναι πιο εύκολη η συλλογή πληροφοριών και αφετέρου από το γεγονός ότι χρησιμοποιεί ένα δυναμικό και αναιρέσιμο μηχανισμό εκτίμησης.
Ωστόσο, λόγω έλλειψης ενός μηχανισμού για την εξαγωγή συμπερασμάτων από την χρονική αναιρέσιμη λογική, δεν είναι δυνατό να ελεγχθεί η μέγιστη δυναμική του μοντέλου.
Γι’ αυτό η διαφορά της επίδοσης μεταξύ των μοντέλων T-REX και HARM σχετικά μικρή.
Πίνακας 6.2.
Μέση τιμή UG ανά συναλλαγή για όλα τα μοντέλα φήμης.
Αξιολόγηση του Μοντέλου DISARM Στην δεύτερη πειραματική διαδικασία, αξιολογείται το μοντέλο DISARM [Kravari & Bassiliades, 2015b], ακολουθώντας τις ίδιες ρυθμίσεις, επίσης στα πλαίσια του συστήματος EMERALD.
Όπως έχει περιγραφεί, το EMERALD μεταξύ άλλων παρέχει τις προηγμένες υπηρεσίες καταλόγου AYPS, οι οποίες προσφέρουν πληροφορίες για όλους τους καταχωρημένους πράκτορες και τις παρεχόμενες από αυτούς υπηρεσίες.
Ως εκ τούτου, ακόμη και αν το DISARM, ή οποιοδήποτε άλλο μοντέλο, είναι κατανεμημένο, οι πράκτορες που το χρησιμοποιούν μπορούν να ζητήσουν από την υπηρεσία AYPS μια λίστα με πιθανούς εταίρους.
Έτσι, στην συνέχεια, προκειμένου να εντοπίσουν τον καταλληλότερο εταίρο, θα χρησιμοποιήσουν το μοντέλο DISARM, για να εκτιμήσουν την φήμη ενός ή περισσοτέρων από αυτούς.
Φυσικά, δεν είναι απαραίτητο να χρησιμοποιηθούν τέτοιες υπηρεσίες, εναπόκειται στην προσωπική στρατηγική κάθε πράκτορα πώς θα εντοπίσει πιθανούς εταίρους.
Ωστόσο, όσο περισσότερο ένας πράκτορας γνωρίζει το περιβάλλον, τόσο καλύτερα μπορεί να επιλέξει παρόχους, λαμβάνοντας περισσότερο όφελος.
Σε αυτό το πλαίσιο, στην παρούσα διαδικασία ελέγχου περιλαμβάνονται τα μοντέλα DISARM, Social Regret [Sabater & Sierra, 2002], Certified Reputation (CR), CRM [Khosravifar et al., 2012], FIRE [Huynh et al., 2006a], HARM και NONE (κανένας μηχανισμός εμπιστοσύνη, τυχαία επιλογή παρόχων).
Χρησιμοποιήθηκε στην σύγκριση και το μοντέλο HARM, παρόλο που είναι μια κεντρική προσέγγιση, καθώς πρόκειται για ένα μοντέλο που βασίζεται σε κανόνες και χρησιμοποιεί αναιρέσιμη λογική.
Όσον αφορά την τελική μετρική του DISARM (τύπος 6.15), για την αξιολόγηση του μοντέλου, υιοθετείται η πρόσθεση, όπως
Στο πλαίσιο αυτό, λαμβάνοντας υπόψη όλα τα διαθέσιμα στοιχεία, η Εικόνα 6.9 απεικονίζει την συνολική κατάταξη, όσον αφορά την ωφέλεια (UG) για όλα τα μοντέλα, ακόμα και για την περίπτωση τυχαίας επιλογής NONE (No Trust).
Όπως φαίνεται σε αυτή την Εικόνα (Εικόνα 6.9), η απόδοση της περίπτωσης NONE, όπως αναμενόταν, είναι συνεχώς η χαμηλότερη ενώ το μοντέλο HARM είναι σταθερά το υψηλότερο.
Αυτό δεν αποτελεί έκπληξη, δεδομένου ότι πρόκειται για ένα κεντρικό μοντέλο.
Επομένως, είναι σε θέση να συγκεντρώνει βαθμολογίες για όλες τις αλληλεπιδράσεις στο σύστημα, σε αντίθεση με τα υπόλοιπα κατανεμημένα μοντέλα, όπου ο εντοπισμός αναφορών είναι μια πρόκληση από μόνη της.
Αυτό επιτρέπει στους πράκτορες που χρησιμοποιούν το HARM, την επίτευξη υψηλότερων επιδόσεων ακόμη και από τις πρώτες αλληλεπιδράσεις.
Όσον αφορά, τα κατανεμημένα μοντέλα, τα DISARM, Certified Reputation και Social Regret επιτυγχάνουν υψηλή τιμή UG, χωρίς ωστόσο να κατορθώσουν να φτάσουν την απόδοση κεντρικών μοντέλων όπως το HARM.
Μεταξύ των κατανεμημένων μοντέλων, το DISARM επιτυγχάνει μια ελαφρώς υψηλότερη απόδοση, κυρίως λόγω του γεγονότος ότι χρησιμοποιεί έναν δυναμικό (αναιρέσιμο) μηχανισμό εκτίμησης της φήμης, που επιτρέπει στους πράκτορες να λάβουν περισσότερο διαισθητικές αποφάσεις και, ως εκ τούτου, να αυξήσουν τις επιδόσεις τους.
Επιπλέον, το DISARM επιτρέπει στους πράκτορες να εξοικειωθούν με το περιβάλλον πιο γρήγορα, σε αντίθεση με τα CRM και FIRE, τα οποία χρειάζονται περισσότερο χρόνο για να γνωρίζουν το περιβάλλον και να σταθεροποιήσουν τις επιδόσεις τους (Εικόνα 6.9).
Παρά το γεγονός ότι τα κεντρικά μοντέλα επιτυγχάνουν υψηλότερη τιμή UG, έχουν σημαντικούς περιορισμούς όσον αφορά τον χρόνο εκτέλεσης και τον αποθηκευτικό χώρο.
Αυτό δεν αποτελεί έκπληξη, δεδομένου ότι κάθε κεντρικό μοντέλο, συνήθως, ελέγχεται από έναν μόνο πράκτορα.
Αυτός ο πράκτορας διαχειριστής πρέπει να αποθηκεύει όλες τις αξιολογήσεις, οι οποίες αυξάνονται με την πάροδο του χρόνου, και να απαντάει σε έναν αυξανόμενο αριθμό αιτήσεων, οδηγώντας στο φαινόμενο της συμφόρησης (bottleneck effect).
Από την άλλη πλευρά, στα κατανεμημένα μοντέλα κάθε πράκτορας αποθηκεύει μόνο τις δικές του αξιολογήσεις και εκείνες που λαμβάνει από τους μάρτυρες.
Συνολικά, όμως, οι αναφορές που αποθηκεύονται είναι πολύ λιγότερες από τις συνολικά διαθέσιμες αξιολογήσεις στο σύστημα.
Επιπρόσθετα, αυτές οι επιπλέον αναφορές μαρτυριών θα μπορούσαν να διαγραφούν μετά την χρήση, απελευθερώνοντας χώρο.
Όπως φαίνεται στην Εικόνα 6.10, το μοντέλο HARM, όντας ένα κεντρικό μοντέλο, χρειάζεται πολύ περισσότερο χώρο από τα κατανεμημένα μοντέλα, φθάνοντας ακόμη και στον διπλάσιο.
Από την άλλη πλευρά, μοντέλα όπως το DISARM και το Social Regret, που λαμβάνουν υπόψη κοινωνικές πτυχές, χρειάζονται λιγότερο χώρο, ακόμα και από άλλες κατανεμημένες προσεγγίσεις, καθώς συλλέγουν λιγότερες αναφορές.
Επομένως, όσο περισσότερες αξιολογήσεις χρησιμοποιούνται από ένα μοντέλο, τόσο περισσότερος χώρος (και συνήθως χρόνος) είναι απαραίτητος.
Η εμπιστοσύνη και η αξιοπιστία είναι βασικά συστατικά στα περισσότερα πολυπρακτορικά συστήματα και γι’ αυτό έχουν ήδη προταθεί αρκετές διαφορετικές μετρικές [Grandison & Sloman, 2000;
Πρακτικά, τα μοντέλα εμπιστοσύνης και φήμης που έχουν προταθεί και συνεχίζουν να προτείνονται ακολουθούν δύο κύριες προσεγγίσεις, την κεντρική και την κατανεμημένη.
Στην κεντρική προσέγγιση, μια κεντρική διαχειριστική αρχή αναλαμβάνει την ευθύνη διαχείρισης του μοντέλου και των αναφορών αξιολόγησης που προκύπτουν κατά την διάρκεια χρήσης του ενώ στην κατανεμημένη προσέγγιση αυτή η ευθύνη κατανέμεται σε όλους τους συμμε-
Το μοντέλο SPORAS [Zacharia & Maes, 2000] είναι το πλέον αξιοσημείωτο από αυτές τις προτάσεις.
Σε αυτό το μοντέλο, κάθε πράκτορας αξιολογεί τον εταίρο του μετά το τέλος της συναλλαγής τους και αναφέρει την αξιολόγηση του στο κεντρικό αποθετήριο του μοντέλου.
Έπειτα, οι βαθμολογίες που λαμβάνονται χρησιμοποιούνται για την ενημέρωση των καθολικών τιμών φήμης των αξιολογηθέντων πρακτόρων.
Στο μοντέλο SPORAS οι νεοεισερχόμενοι πράκτορες ξεκινούν με μια ελάχιστη τιμή φήμης και χτίζουν την φήμη τους σταδιακά κατά την διάρκεια της δράσης τους στο περιβάλλον.
Τόσο στο SPORAS όσο και στα μοντέλα T-REX, HARM και DISARM, οι αξιολογήσεις χάνουν την σημαντικότητα τους με την πάροδο του χρόνου δεδομένου ότι οι πιο πρόσφατες αξιολογήσεις έχουν μεγαλύτερο βάρος στην εκτίμηση της φήμης ενός πράκτορα.
Επιπλέον, όλα τα μοντέλα χρησιμοποιούν έναν τύπο μάθησης για τη διαδικασία της ενημέρωσης, έτσι ώστε η τιμή της να αντικατοπτρίζει όσο το δυνατόν πιο πιστά τις επιδόσεις ενός πράκτορα ανά πάσα στιγμή.
Ωστόσο, το μοντέλο SPORAS έχει περιορισμούς, καθώς δυσκολεύεται να αποφύγει την κατάχρηση της φήμης από κάποιον ιδιοτελή πράκτορα.
Ένας από τους σημαντικότερους λόγους για αυτό είναι ο συντελεστής απόσβεσης που χρησιμοποιεί το μοντέλο SPORAS.
Αυτός ο συντελεστής περιορίζει τις μεταβολές στην τιμή της φήμης των πρακτόρων που έχουν ήδη υψηλή φήμη, διατηρώντας τους φαινομενικά αξιόπιστους ακόμη και εάν έχουν πάψει να είναι.
Έτσι, με αυτό τον τρόπο μειώνεται επίσης και η συμβολή των νέων αξιολογήσεων.
Ως εκ τούτου, το SPORAS δεν είναι τόσο δυναμικό και ευέλικτο όπως το T-REX και τα HARM και DISARM, που χρησιμοποιούν μη-μονότονη λογική, παρόμοια με την λογική των ανθρώπων.
Επιπρόσθετα, στο SPORAS οι νεοεισερχόμενοι δεν θεωρούνται αξιόπιστοι και οι υπόλοιποι πράκτορες δεν τους εμπιστεύονται εύκολα, καθώς η φήμη ενός νεοεισερχόμενου πράκτορα δεν μπορεί να ξεπεράσει την φήμη κάποιου άλλου πράκτορα.
Από την άλλη πλευρά, τα μοντέλα T-REX, HARM και DISARM ξεπερνούν το ζήτημα με την αξιολόγηση των νέων πρακτόρων δίνοντας τους αρχικά μια ουδέτερη τιμή.
Ένα εξίσου άξιο αναφοράς μοντέλο είναι το Certified Reputation [Huynh et al., 2006a], το οποίο είναι ένα κατανεμημένο μοντέλο φήμης, όπου κάθε πράκτορας αποθηκεύει και διατηρεί ένα σύνολο αναφορών που δίνονται για αυτόν από τους άλλους πράκτορες.
Σε αυτό το μοντέλο, κάθε πράκτορας καλείται να δώσει αξιολογήσεις της επίδοσης του μετά από κάθε συναλλαγή.
Ο πράκτορας κατόπιν επιλέγει την υψηλότερη βαθμολογία και την αποθηκεύει για μελλοντική αναφορά.
Οποιοσδήποτε άλλος πράκτορας μπορεί στη συνέχεια να ζητήσει τις αποθηκευμένες αναφορές και να υπολογίσει την φήμη του πράκτορα.
Το μοντέλο αυτό ξεπερνά το ζήτημα της αρχικής αξιοπιστίας με τρόπο παρόμοιο με τα μοντέλα ΤREX, HARM και DISARM.
Οι περισσότερες προηγούμενες μετρικές εμπιστοσύνης δεν ήταν ιδιαίτερα αξιόπιστες και σταθερές έως ότου γίνει πρώτα ένας μεγάλος αριθμός αλληλεπιδράσεων στο περιβάλλον.
Το μοντέλο Certified Reputation όμως αποδείχτηκε αξιόπιστο από την αρχή οποιασδήποτε προσομοίωσης.
Ωστόσο, σε αντίθεση με τα μοντέλα που προτείνονται στην παρούσα διατριβή, το μοντέλο αυτό έχει σχεδιαστεί για να καθορίζει τα δικαιώματα πρόσβασης των πρακτόρων, παρά για να εκτιμά την αναμενόμενη απόδοση τους.
Επιπλέον, πρόκειται για ένα μοντέλο που βασίζεται μόνο σε μαρτυρίες, αδυνατώντας, κατά συνέπεια, να συμπεριλάβει την προσωπική γνώμη κάθε πράκτορα.
Η έλλειψη αυτή οδηγεί τόσο σε διαστρέβλωση της φήμης ενός πράκτορα, καθώς επαφίεται μόνο στην γνώμη τρίτων, όσο και σε πιθανή κατάχρηση αξιολογήσεων από ιδιοτελείς πράκτορες, καθώς για ιδίον όφελος θα μπορούσαν να αλλοιώνουν την πραγματική εικόνα της φήμης ενός πράκτορα.
Αντίθετα τα Τ-REX, HARM και DISARM συνδυάζουν τόσο τις μαρτυρίες όσο και την άμεση προσωπική εμπειρία των πρακτόρων, αποφεύγοντας πιθανές αλλοιώσεις τρίτων.
Μια ακόμη αξιοσημείωτη προσπάθεια είναι αυτή των Jurca και Faltings [Jurca & Faltings, 2003], οι οποίοι προτείνουν ένα μοντέλο φήμης, όπου οι πράκτορες ενθαρρύνονται να παρέχουν με ειλικρίνεια τις αναφορές τους.
Σε αυτή την προσέγγιση, υπάρχει ένα σύνολο πρακτόρων-μεσιτών που αγοράζει και συναθροίζει αναφορές από άλλους πράκτορες και στη συνέχεια πωλούν τις απαραίτητες πληροφορίες σε εκείνους.
Παρά το γεγονός ότι οι πράκτορες-μεσίτες είναι κατανεμημένοι στο σύστημα, καθένας από αυτούς συλλέγει τις τιμές φήμης κεντρικά, όπως στο T-REX και το HARM.
Ωστόσο, οι τιμές της φήμης περιορίζονται σε δύο διακριτές ποσοτικές τιμές, 0 και 1 συγκεκριμένα, 0 για τους πράκτορες που εξαπατούν και 1 για τους αξιόπιστους.
Αυτό φυσικά είναι πρόβλημα στην περίπτωση που ένας πράκτορας είναι πιο αξιόπιστος από κάποιον άλλο αλλά κανένας από αυτούς δεν είναι πράκτορας που συνηθίζει να εξαπατά.
Αντίθετα, στα μοντέλα που προτείνονται στην παρούσα διατριβή υπάρχουν συνεχείς τιμές στο εύρος [-1, 1], όπου -1 είναι η χειρότερη τιμή για τους πλέον αναξιόπιστους πράκτορες και 1 είναι η καλύτερη για τους πιο αξιόπιστους παράγοντες του περιβάλλοντος.
Επιπλέον, το μοντέλο των Jurca και Faltings είναι στατικό παραμετρικό μοντέλο και αυτές οι παράμετροι δεν προσαρμόζονται δυναμικά ώστε να προσαρμόζονται στις αλλαγές του περιβάλλοντος.
Ένα ακόμη γνωστό μοντέλο της βιβλιογραφίας είναι το κατανεμημένο μοντέλο REGRET [Sabater & Sierra, 2001;
Sabater, 2003], το οποίο αποτελεί ένα από τα πρώτα, αν όχι το πρώτο μοντέλο που χρησιμοποίησε την ιδέα των μαρτυριών και του συνδυασμού τους με την προσωπική εμπειρία.
Το Regret είναι, στην πραγματικότητα, ένα από τα πιο αντιπροσωπευτικά μοντέλα εμπιστοσύνης και φήμης στα πολυπρακτορικά συστήματα.
Σε αυτό κάθε πράκτορας αξιολογεί τη φήμη των άλλων μετά από κάθε αλληλεπίδραση και καταγράφει τις αξιολογήσεις του σε μια τοπική βάση δεδομένων.
Επιπλέον, οι αξιολογήσεις στο Regret αντιμετωπίζονται σε σχέση με το χρόνο, όπως στο T-REX έτσι και στο REGRET οι πιο πρόσφατες αξιολογήσεις είναι πιο σημαντικές από άλλες παλαιότερες.
Ωστόσο, το REGRET είναι ένα απολύτως κατανεμημένο μοντέλο φήμης.
Αυτό το μοντέλο δεν μπορεί να αντιμετωπίσει περιπτώσεις όπου ο πράκτορας αλλάζει την συμπεριφορά του και μεταμορφώνεται από έναν αξιόπιστο σε έναν αναξιόπιστο πράκτορα, σε αντίθεση με τα μοντέλα T-REX.
HARM και DISARM που προτείνουν δυναμικούς μηχανισμούς αντιμετώπισης του ζητήματος.
Μια εξέλιξη του μοντέλου REGRET, που ονομάστηκε Social Regret [Sabater & Sierra, 2002], παρουσιάστηκε, επίσης, από την ίδια ομάδα, στρέφοντας την προσοχή στο περιβάλλον του ηλεκτρονικού εμπορίου.
Το μοντέλο αυτό ενσωματώνει την έννοια του κοινωνικού γράφου και ομαδοποιεί τους πράκτορες που παρουσιάζουν συχνές αλληλεπιδράσεις μεταξύ τους ενώ θεωρεί κάθε ομάδα ως μια ενιαία πηγή τιμών φήμης.
Σε αυτό το πλαίσιο, μόνο ο πλέον αντιπροσωπευτικός πράκτορας κάθε ομάδας καλείται για πληροφορίες.
Έτσι, χρησιμοποιείται μια ευριστική συνάρτηση, προκειμένου να βρεθούν οι ομάδες και να επιλεγεί ο καλύτερος πράκτορας της ομάδας για να ερωτηθεί.
Το Social Regret, ομοίως με το DISARM, είναι μια από τις σπάνιες περιπτώσεις, όπου η κοινωνική διάσταση των πρακτόρων λαμβάνεται υπόψη.
Ωστόσο, το Social Regret δεν αντικατοπτρίζει τις πραγματικές κοινωνικές σχέσεις μεταξύ των πρακτόρων, όπως συμβαίνει στο DISARM, παρά προσπαθεί να μειώσει ευρετικά τον αριθμό των ερωτημάτων που πρέπει να γίνουν, προκειμένου να εντοπιστούν αναφορές.
Λαμβάνοντας υπόψη την γνώμη μόνο ενός πράκτορα από κάθε ομάδα είναι ένα σοβαρό μειονέκτημα, δεδομένου ότι οι περισσότεροι πράκτορες περιθωριοποιούνται, διαστρεβλώνοντας την πραγματικότητα.
Ωστόσο, το Social Regret όπως και τα μοντέλα T-REX, HARM και DISARM αναγνωρίζουν την σημασία του χρόνου και λαμβάνουν υπόψη τόσο την προσωπική εμπειρία όσο και τις μαρτυρίες τρίτων.
Ωστόσο, μόνο τα HARM και DISARM επιτρέπουν στους πράκτορες να αποφασίσουν μόνοι τους για το τι θεωρούν σημαντικό όσον αφορά το χρόνο.
Όπως επίσης, μόνο αυτά παρέχουν έναν μηχανισμό που βασίζεται στην γνώση, προωθώντας μια μη-μονότονη και περισσότερο ευέλικτη προσέγγιση.
Ένα άλλο δημοφιλές κατανεμημένο μοντέλο είναι το FIRE [Huynh et al., 2006a], το οποίο ενσωματώνει τέσσερις τύπους πληροφορίας, την προσωπική εμπειρία (interaction trust), την βασισμένη σε ρόλους εμπιστοσύνη (role-based trust), τις μαρτυρίες (witness reputation) και την πιστοποιημένη φήμη (certified reputation).
Η προσωπική εμπειρία και οι μαρτυρίες, αναφέρονται στην προηγούμενη άμεση εμπειρία ενός πράκτορα και τις μαρτυρίες τρίτων, όπως είναι και στα μοντέλα που προτάθηκαν στο παρόν κεφάλαιο.
Η βασισμένη σε ρόλους εμπιστοσύνη είναι η εμπιστοσύνη που ορίζεται από διάφορες σχέσεις που βασίζονται σε ρόλους μεταξύ των πρακτόρων, ενώ η πιστοποιημένη φήμη είναι αναφορές τρίτων που παρέχονται από συγκεκριμένους πράκτορες-στόχους.
Οι τέσσερις αυτοί τύποι συνδυάζονται σε μια ενιαία μέτρηση, με την χρήση της μεθόδου του σταθμισμένου μέσου όρου.
Το FIRE, όπως και τα προτεινόμενα μοντέλα της παρούσα διατριβής, αναγνωρίζει την ανάγκη για υβριδικά μοντέλα που θα λαμβάνουν υπόψη περισσότερες από μία πηγές για την τελική εκτίμηση της φήμης.
Ωστόσο, παρόλο που το FIRE λαμβάνει υπόψη περισσότερες πηγές από τα προτεινόμενα μοντέλα, χρησιμοποιεί ένα αδύναμο μοντέλο υπολογισμού για τον τελικό συνδυασμό και την εκτίμηση.
Από την άλλη πλευρά, το T-REX αλλά κυρίως τα μοντέλα HARM και DISARM, που βασίζονται στην αναιρέσιμη λογική, παρέχουν παρόμοιους με την ανθρώπινη συμπεριφορά μηχανισμούς.
Επιπλέον, μόνο το DISARM λαμβάνει υπόψη την κοινωνική διάσταση των πολυπρακτορικών συστημάτων σε σχέση με το χρόνο.
Το μοντέλο εμπιστοσύνης TRR (Trust–Reliability–Reputation) [Rosaci et al., 2012] επιτρέπει σε έναν πράκτορα να αναπαραστήσει τόσο την αξιοπιστία όσο και την φήμη ενός άλλου πράκτορα, συγχωνεύοντας τελικά αυτές τις μετρήσεις σε μια καθολική αξιολόγηση της εμπιστοσύνης.
Χρησιμοποιεί ένα δυναμικά υπολογιζόμενο βάρος, το οποίο σχετίζεται με το πόσο σημαντική θεωρεί ένας πράκτορας την αξιοπιστία σε σχέση με την φήμη, όταν υπολογίζει την εμπιστοσύνη που μπορεί να επενδυθεί σε έναν άλλο πράκτορα.
Όμως, το βάρος εξαρτάται από τον αριθμό των αλληλεπιδράσεων μεταξύ των δύο πρακτόρων, γεγονός που είναι πραγματικά πρόβλημα όταν αυτοί οι πράκτορες δεν έχουν ιστορικό αλληλεπίδρασης.
Επομένως, το TRR παρέχει έναν μηχανισμό για την εκτίμηση της καθολικής τιμής της φήμης ενός πράκτορα, με βάση τις προηγούμενες αλληλεπιδράσεις.
Από την άλλη πλευρά, τα προτεινόμενα μοντέλα, όπως το HARM και το DISARM, παρέχουν έναν μηχανισμό, που βασίζεται στην γνώση και στο χρόνο, ο οποίος επιτρέπει σε κάθε πράκτορα να στηριχθεί στις προτιμήσεις του, λαμβάνοντας τελικά προσωπικές εκτιμήσεις.
Επιπλέον, το μοντέλο DISARM λαμβάνει υπόψη την κοινωνική διάσταση των πολυπρακτορικών συστημάτων.
Το μοντέλο CRM (Comprehensive Reputation Model) [Khosravifar et al., 2012] είναι ακόμη ένα τυπικό παράδειγμα κατανεμημένου μοντέλου.
Σε αυτό το μοντέλο, οι αξιολογήσεις που χρησιμοποιούνται για να εκτιμηθεί η αξιοπιστία ενός συγκεκριμένου πράκτορα, προκύπτουν, όπως και στα προτεινόμενα μοντέλα της διατριβής, από την άμεση εμπειρία ενός πράκτορα και τις μαρτυρίες τρίτων.
Το CRM είναι ένα μοντέλο που βασίζεται στις πιθανότητες, λαμβάνοντας υπόψη τον αριθμό των αλληλεπιδράσεων μεταξύ των πρακτόρων, την χρονική συνάφεια των παρεχόμενων πληροφοριών και την βεβαιότητα των πρακτόρων που παρέχουν τα δεδομένα.
Πιο συγκεκριμένα, το CRM, πρώτα, λαμβάνει υπόψη τις άμεσες αλληλεπιδράσεις μεταξύ των πρακτόρων, καλώντας την διαδικασία «online» εκτίμησης εμπιστοσύνης.
Έπειτα από ένα χρονικό διάστημα, η πραγματική απόδοση του αξιολογούμενου πράκτορα συγκρίνεται με τις πληροφορίες που παρέχονται από άλλους πράκτορες, σε μια διαδικασία που ονομάζεται «off-line».
Αυτή η διαδικασία χρησιμοποιεί τις πληροφορίες που κοινοποιούνται για να κρίνει την ακρίβεια της προηγούμενης διαδικασίας (online).
Με άλλα λόγια, στο CRM η διαδικασία της εκτίμησης αποτελείται από online και offline διαδι-
Τόσο το CRM όσο και, κυρίως, τα μοντέλα T-REX.
HARM και DISARM αναγνωρίζουν την ανάγκη για υβριδικά μοντέλα φήμης, που θα λαμβάνουν υπόψη ζητήματα χρόνου, ακολουθούν, ωστόσο, εκ διαμέτρου αντίθετες προσεγγίσεις.
Επιπλέον, το μοντέλο CRM, όπως και τα μοντέλα HARM και DISARM χρησιμοποιούν μια παράμετρο βεβαιότητας, προκειμένου να σταθμίσουν τις αξιολογήσεις με μεγαλύτερη ακρίβεια.
Βέβαια, τα HARM και DISARM προτείνουν μη-μονότονες προσεγγίσεις, λαμβάνοντας υπόψη μια ποικιλία επιπρόσθετων παραμέτρων, επιτρέποντας στους χρήστες να καθορίσουν σχετικά βάρη (όπως και στα υπόλοιπα προτεινόμενα μοντέλα).
Ως αποτέλεσμα, παρέχονται πιο ακριβείς και εξατομικευμέ-
Στο κεφάλαιο αυτό μελετήθηκε το ζήτημα της αξιοπιστίας των πρακτόρων που δρουν σε ένα πολυπρακτορικό περιβάλλον, της εμπιστοσύνης και των σχέσεων που αναπτύσσουν οι πράκτορες αυτοί μεταξύ τους.
Ιδιαίτερη προσοχή δόθηκε στο γεγονός ότι οι πράκτορες δρουν για λογαριασμό των χρηστών και επομένως οι ενέργειες, οι σχέσεις και εν γένει οι αποφάσεις τους θα πρέπει να προσομοιώνουν την ανθρώπινη σκέψη και συμπεριφορά.
Σε αυτό το πλαίσιο παρουσιάστηκαν εν συντομία οι αρχές, τα πλεονεκτήματα και τα ανοιχτά ζητήματα τόσο των κεντρικών προσεγγίσεων όσο και των κατανεμημένων.
Επιπλέον, μελετήθηκε και το ζήτημα της προέλευσης των αναφορών αξιολόγησης, οι οποίες μπορεί να προέρχονται είτε από άμεση προσωπική εμπειρία είτε από μαρτυρίες τρίτων, με τα σημερινά μοντέλα να υιοθετούν συνήθως μία από αυτές τις προσεγγίσεις.
Ακολουθώντας τα αποτελέσματα αυτής της μελέτης, παρουσιάστηκαν πέντε νέα μοντέλα φήμης, κάθε ένα από τα οποία αποτελεί μια νέα ξεχωριστή περίπτωση.
Δύο από τα μοντέλα, το κεντρικό SERM και το κατανεμημένο DRM επικεντρώθηκαν στην αξιολόγηση της επίδοσης των ειδικών πρακτόρων (Reasoners) που παρέχουν υπηρεσίες συλλογιστικής στο πλαίσιο EMERALD.
Παρά το γεγονός ότι σχεδιάστηκαν και υλοποιήθηκαν για αυτό το σκοπό, η αρχιτεκτονική τους μπορεί να υιοθετηθεί σε οποιοδήποτε πολυπρακτορικό περιβάλλον.
Ωστόσο, κύριος στόχος στα πλαίσια της παρούσας διατριβής ήταν να χρησιμοποιηθούν συνδυαστικά με άλλα μοντέλα για να καλύψουν όλες τις ανάγκες του περιβάλλοντος, τόσο αυτές που προκύπτουν για τους μόνιμους πράκτορες του περιβάλλοντος όπως είναι οι Reasoners όσο και για τους υπόλοιπους περιστασιακούς πράκτορες.
Τα υπόλοιπα τρία μοντέλα, T-REX, HARM και DISARM, είναι υβριδικές προσεγγίσεις που έχουν ως στόχο να προσομοιώσουν τις συνήθειες και τον τρόπο λήψης αποφάσεων των ανθρώπων-χρηστών.
Έτσι, μπορούν να χρησιμοποιηθούν σε οποιοδήποτε σύστημα εγγυόμενα υψηλά επίπεδα επιτυχίας στην εκτίμηση της φήμης οποιουδήποτε πράκτορα, όπως προέκυψε από την πειραματική αξιολόγηση των μοντέλων, ανεξάρτητα από το ρόλο τους στο σύστημα.
Πιο συγκεκριμένα, το T-REX είναι ένα υβριδικό κεντρικό μοντέλο εμπιστοσύνης που βασίζεται τόσο στις μαρτυρίες τρίτων όσο και στην προσωπική εμπειρία.
Είναι ένα δυναμικό και ευέλικτο μοντέλο που αντιμετωπίζει τους περιορισμούς των γνωστών προσεγγίσεων βασιζόμενο αποκλειστικά είτε στις μαρτυρίες τρίτων είτε στην προσωπική εμπειρία.
Σημαντικό πλεονέκτημα του αποτελεί το γεγονός ότι μπορεί να μετατραπεί από ένα σύστημα υποκειμενικό που βασίζεται μόνο στην προσωπική εμπειρία σε ένα σύστημα καθαρά μαρτυριών, καλύπτοντας κάθε πιθανή περίπτωση.
Επιπρόσθετα, το T-REX, μεταξύ άλλων, έχει χαμηλό εύρος ζώνης, χαμηλό υπολογιστικό κόστος κατά τον χρόνο εκτέλεσης και χαμηλό κόστος αποθήκευσης για τους πράκτορες.
Το μοντέλο HARM είναι επίσης ένα κεντρικό υβριδικό, βασισμένο σε κανόνες, μοντέλο φήμης, το οποίο χρησιμοποιεί την χρονική αναιρέσιμη λογική για να συνδυάσει την άμεση προσωπική εμπειρία με τις μαρτυρίες τρίτων.
Το HARM παρέχει επίσης ένα σταθερό και αξιόπιστο μηχανισμό εκτίμησης, στο πλαίσιο μιας κεντρικής διαχειριστικής αρχής, ξεπερνώντας τη δυσκολία του εντοπισμού μαρτυρίων.
Ένα από τα κύρια πλεονεκτήματα του HARM είναι η ικανότητά του να προσομοιώνει την σκέψη και τον τρόπο λήψης αποφάσεων των ανθρώπων.
Είναι το πρώτο μοντέλο που χρησιμοποιεί τη γνώση, με τη μορφή της αναιρέσιμης λογικής, προκειμένου να προβλέψει τη μελλοντική συμπεριφορά των πρακτόρων.
Επιπλέον, το HARM διαχωρίζει όχι μόνο την προσωπική εμπειρία από τις μαρτυρίες τρίτων αλλά και τις ίδιες τις μαρτυρίες σε αυτές που προέκυψαν από παλαιότερα γνωστούς εταίρους και αυτές που προέκυψαν από παντελώς άγνωστους πράκτορες.
Το μοντέλο DISARM, από την άλλη πλευρά, είναι ένα κοινωνικό, κατανεμημένο, υβριδικό μοντέλο φήμης που βασίζεται σε κανόνες και χρησιμοποιεί την αναιρέσιμη λογική, μοντελοποιώντας τον τρόπο που οι άνθρωποι καταλήγουν σε λογικά συμπεράσματα.
Το DISARM μέσω κατάλληλων κανόνων συνδυάζει την προσωπική εμπειρία με τις μαρτυρίες.
Επιπλέον, περιορίζει τα κοινά μειονεκτήματα των κατανεμημένων προσεγγίσεων, όπως τον εντοπισμό αξιολογήσεων, θεωρώντας τους πράκτορες που δρουν στο περιβάλλον ως ένα κοινωνικό δίκτυο.
Επομένως, κάθε πράκτορας είναι σε θέση να προωθήσει τα αιτήματά του στην κοινότητα, εντοπίζοντας αρκετά γρήγορα αξιολογήσεις από προηγουμένως γνωστούς και αξιόπιστους πράκτορες.
Παρά τις επιφανειακές ομοιότητες τους, τα μοντέλα αυτά αποτελούν υβριδικά μοντέλα φήμης που βασίζονται τόσο στις μαρτυρίες όσο και στην προσωπική εμπειρία, υιοθετώντας, ωστόσο, διαφορετικές φιλοσοφίες.
Τα HARM και DISARM, για παράδειγμα, χρησιμοποιούν μια χρονική αναιρέσιμη θεωρία γνώσης, με την χρήση χρονικών αναιρέσιμων κανόνων, για την διαδικασία λήψης αποφάσεων ενώ το T-REX εξαρτάται από την στατική γνώμη του χρήση, μέσω των βαρών που παρέχει στην αρχή.
Ωστόσο όλα τα μοντέλα ασχολούνται με το θέμα του χρόνου, χρησιμοποιώντας μια παρόμοια φιλοσοφία αλλά με εντελώς διαφορετική προσέγγιση.
Το T-REX βασίζεται σε μια μονότονη προσέγγιση, όπου όλες οι αξιολογήσεις λαμβάνονται υπόψη, αν και χάνουν τη σημαντικότητα τους μέσω μιας γραμμικής συνάρτησης απόσβεσης με την πάροδο του χρόνου.
Στο T-REX χρησιμοποιείται μια χρονoσφραγίδα για να οργανωθούν οι βαθμολογίες, όπου βαθμολογίες με υψηλότερη χρονoσφραγίδα θεωρούνται πιο σημαντικές, δεδομένου ότι αναφέρονται σε πιο πρόσφα-
Από την άλλη πλευρά, το HARM βασίζεται σε μια μη-μονότονη προσέγγιση κανόνων, όπου οι βαθμολογίες θεωρούνται περισσότερο σαν αναφορές που εκπνέουν.
Στο HARM, κάθε αξιολόγηση χαρακτηρίζεται από μια χρονική ιδιότητα, η οποία καταδεικνύει τις χρονικές στιγμές που πρέπει να περάσουν προκειμένου να θεωρηθεί έγκυρη μια αξιολόγηση.
Επιπλέον, κάθε αξιολόγηση ισχύει μόνο για ένα χρονικό διάστημα.
Ως εκ τούτου, το HARM λαμβάνει υπόψη μόνο τις αξιολογήσεις που πληρούν τους παραπάνω περιορισμούς, οι οποίοι αντικατοπτρίζουν μια πιο ρεαλιστική άποψη παρόμοια με την ανθρώπινη λογική.
Το DISARM, τέλος, χρησιμοποιεί τον χρόνο τόσο για την επιλογή αναφορών όσο και για την ίδια την εκτίμηση.
Συγκριτικά, το μοντέλο HARM βελτιώνει την προσέγγιση του TREX και το DISARM βελτιώνει την προσέγγιση του HARM, παρέχοντας ένα νέο μηχανισμό που βασίζεται στη γνώση και βελτιώνει την αποτελεσματικότητα και την διαίσθηση της εκτίμησης, καθώς σχετίζεται περισσότερο με την παραδοσιακή ανθρώπινη λογική για την εκτίμηση της εμπιστοσύνης στον φυσικό κόσμο. 7 7 Διασύνδεση και Διαλειτουργικότητα Πολυπρα-κτορικών Συστημάτων
Παρά το πλήθος των πολυπρακτορικών συστημάτων που είναι, σήμερα, διαθέσιμα, τα συστήματα αυτά εξακολουθούν κατά κύριο λόγο να είναι απομονωμένα το ένα από το άλλο, καθώς οι αρχές και οι αρχιτεκτονικές τους τυπικά διαφέρουν.
Βασικό σημείο διαφοροποίησης αποτελούν οι διαφορετικοί φορμαλισμοί λογικών και κανόνων που χρησιμοποιούν, τα διαφορετικά πρωτόκολλα αλλά και οι διαφορετικές γλώσσες επικοινωνίας.
Αυτή η ετερογένεια και η επακόλουθη ασυμφωνία αποτελούν ένα κρίσιμο μειονέκτημα για την διαλειτουργικότητα των πρακτόρων.
Επιπλέον, κάθε πράκτορας, ανεξάρτητα από το σύστημα που ανήκει, έχει την δική του πολιτική, τις δικές του απαιτήσεις, υποχρεώσεις και περιορισμούς, αλλά και την δική του ιδιοσυγκρασιακή γνώση για τον κόσμο, γεγονός που καθιστά την διαλειτουργικότητα ένα δύσκολο έργο.
Σε αυτό το πλαίσιο, στόχος της παρούσας διατριβής είναι να ορίσει πιθανές μεθόδους διαλειτουργικότητας, με βάση τον τύπο της επικοινωνίας και την κατάσταση κάθε συστήματος και πλαισίου, και να συμβάλει στην επίτευξη της.
Ειδικότερα, όσον αφορά στην ρεαλιστική επίτευξη διαλειτουργικότητας, μελετώνται δύο αντιπροσωπευτικά παραδείγματα αυτοματοποιημένης διασύνδεσης διαφορετικών συστημάτων και τεχνολογιών, τα οποία καταδεικνύουν πώς ετερογενή συστήματα μπορούν να συνεργαστούν.
Η προτεινόμενη προσέγγιση της παρούσας διατριβής το επιτυγχάνει μέσω της χρήσης δηλωτικών, βασισμένων στην γνώση, μεθόδων.
Η επιλογή τέτοιων μεθόδων έγινε με γνώμονα το γεγονός ότι η διαχείριση της γνώσης αποτελεί κεντρικής σημασίας ζήτημα για την Τεχνητή Νοημοσύνη και, επιπλέον, πολλά από τα προβλήματα που οι ευφυείς πράκτορες καλούνται να επιλύσουν απαιτούν εκτεταμένη γνώση [Russell & Norvig, 2009].
Άλλωστε, οι βασισμένες στην γνώση μέθοδοι είναι ένας τρόπος διαχείρισης και αυτοματοποίησης της γνώσης, που επιτρέπει στους πράκτορες να λαμβάνουν ευφυείς και συνεπείς αποφάσεις, στηριζόμενοι σε υψηλής ποιότητας γεγονότα και κανόνες.
Έτσι, η προσέγγιση της παρούσας διατριβής επικεντρώνεται στο τι χρειάζεται ένας πράκτορας να γνωρίζει, προκειμένου να συμπεριφέρεται με ευφυΐα, πώς αυτή η γνώση μπορεί να αναπαρίσταται αλλά και πως μπορεί να είναι διαθέσιμη μέσω αυτοματοποιημένων διαδικασιών
Σε αυτό το πλαίσιο, μελετάται και αναπτύσσεται, αρχικά, η διασύνδεση μεταξύ του προτεινόμενου, στην παρούσα διατριβή, συστήματος EMERALD και του συστήματος Rule Responder, με την χρήση της καταλληλότερης μεθόδου [Kravari et al., 2011c;
Ειδικότερα, τα συστήματα αναλύονται, προκειμένου να εντοπισθούν οι ομοιότητες και οι διαφορές τους, και επεκτείνονται με κατάλληλες αμφίδρομες γέφυρες, έτσι ώστε να καταστεί δυνατή η μεταξύ τους επικοινωνία.
Με αυτό τον τρόπο, οι πράκτορες των δύο συστημάτων είναι σε θέση να κατανοούν ο ένας τις θέσεις και τα επιχειρήματα του άλλου, επιτρέποντας τους να συμμετέχουν σε έναν διάλογο ή ένα πλαίσιο επιχειρηματολογίας.
Επομένως, καθίσταται δυνατή η υλοποίηση πλήθους περιπτώσεων διαπραγματεύσεων, δημοπρασιών και μεσιτείας μεταξύ πρακτόρων διαφορετικών συστημάτων.
Στην συνέχεια, μελετάται η διασύνδεση μεταξύ των ιδιαίτερα διαλειτουργικών υπηρεσιών ιστού (Web services) και των αυτόνομων και ευφυών πολυπρακτορικών συστημάτων.
Στόχος αυτής της μελέτης είναι να επιτρέψει, σε αυτές τις διαφορετικές τεχνολογίες να συνεργαστούν και να συνυπάρξουν αποδοτικά στο περιβάλλον του Σημασιολογικού Ιστού.
Ιδιαίτερα, τα πολυπρακτορικά συστήματα μέσω των υπηρεσιών ιστού μπορούν να υπερνικήσουν περιορισμούς, όπως είναι οι πλατφόρμες επικοινωνίας, οι γλώσσες και οι φορμαλισμοί συλλογιστικής.
Σε αυτό το πλαίσιο, προτείνεται μια προσέγγιση, που αφορά την επαναχρησιμοποίηση των δυνατοτήτων, που παρουσιάζουν οι πράκτορες για συλλογιστική, μέσω της κλήσης υπηρεσιών ιστού.
Για το σκοπό αυτό, προτείνεται η επέκταση του συστήματος EMERALD με μια διεπαφή υπηρεσιών ιστού και την αντίστοιχη λειτουργικότητα.
Η προτεινόμενη προσέγγιση παρουσιάζεται αναλυτικά μέσω ενός παραδείγματος μεσιτείας, χωρίς ωστόσο να περιορίζεται σε αυτό.
Παράλληλα με την πρόοδο του Σημασιολογικού Ιστού, το πεδίο των κατανεμημένων συστημάτων έχει, επίσης, δει μια σημαντική πρόοδο, τόσο με τα πολυπρακτορικά συστήματα όσο και με την νέα προσέγγιση που είναι γνωστή, ως αρχιτεκτονική προσανατολισμένη στις υπηρεσίες (service oriented architecture).
Με την προώθηση νέων ιδεών για διαλειτουργικότητα και ενσωμάτωση διαφόρων υφιστάμενων ή νέων ετερογενών συστατικών, ο Σημασιολογικός Ιστός επωφελείται από την ανάπτυξη περισσότερο σύνθετων και αποδοτικών κατανεμημένων εφαρμογών.
Σε αυτό το πλαίσιο, οι δύο περιπτώσεις μελέτης και διασύνδεσης που επιλέχθηκαν, αντιπροσωπεύουν τόσο τα πολυπρακτορικά συστήματα όσο και τις υπηρεσίες ιστού, αποτελώντας πρότυπα για την διασύνδεση και την διαλειτουργικότητα αντίστοιχων περιπτώσεων.
Μελέτη μεθόδων διασύνδεσης πολυπρακτορικών συστη-
Η πρώτη περίπτωση διασύνδεσης αφορά διαφορετικά πολυπρακτορικά συστήματα.
Δύο συστήματα, στα οποία δρα ένας αριθμός πρακτόρων, μπορούν να συνδεθούν με διάφορες μεθόδους.
Η παρούσα διατριβή προτείνει τέσσερις (Πίνακας 7.1), οι οποίες μπορούν να χρησιμοποιηθούν για την διασύνδεση δύο ή περισσότερων συστημάτων.
Μια εκ των τεσσάρων αυτών μεθόδων μπορεί να χρησιμοποιηθεί, όπως παρουσιάζεται στην συνέχεια, και για την ειδική περίπτωση διασύνδεσης υπηρεσιών ιστού με ένα πολυπρακτορικό σύστημα, καθώς μια ομάδα υπηρεσιών ιστού μπορεί να θεωρηθεί σύστημα, υπό την έννοια του κοινού εννοιολογικού και τεχνολογικού πλαισίου.
Πρακτικά, κεντρικό στοιχείο των μεθόδων διασύνδεσης αποτελούν η επικοινωνία μεταξύ των συστημάτων και η κατάσταση τους.
Η αμφίδρομη επικοινωνία, πρακτικά, διακρίνεται σε δύο τύπους, την συμμετρική και την ασύμμετρη.
Ο όρος συμμετρική αναφέρεται σε εκείνα τα πολυπρακτορικά συστήματα, όπου η επικοινωνία, ποσοτικά, είναι κατά
Κεφάλαιο 7 – Διασύνδεση και Διαλειτουργικότητα Πολυπρακτορικών Συστημάτων μέσο όρο η ίδια και στις δύο κατευθύνσεις.
Από την άλλη πλευρά, ο όρος ασύμμετρη αναφέρεται σε εκείνα τα συστήματα, όπου η επικοινωνία διαφέρει, ποσοτικά, στην μια κατεύθυνση σε σύγκριση με την άλλη.
Η κατάσταση των πολυπρακτορικών συστημάτων διακρίνεται, επίσης, σε δύο τύπους, την ανοικτή και την κλειστή.
Ένα πολυπρακτορικό σύστημα καλείται ανοικτό, όταν οι πράκτορες του μπορούν να επικοινωνούν άμεσα με οποιονδήποτε πράκτορα σε οποιοδήποτε άλλο πολυπρακτορικό σύστημα.
Από άλλη πλευρά, κλειστό καλείται ένα σύστημα, όταν οι πράκτορες του είναι απομονωμένοι από άλλα συστήματα και αναγκάζονται να επικοινωνούν με τους πράκτορες των συστημάτων αυτών, μέσω εκπροσώπων (delegates) ή διαμεσολαβητών (proxies).
Τόσο οι εκπρόσωποι όσο και οι διαμεσολαβητές είναι πράκτορες που μπορούν να βρεθούν στα κλειστά συστήματα και να δράσουν ως πύλες (gateways).
Ο ρόλος τους είναι να λαμβάνουν αιτήματα από τους υπόλοιπους πράκτορες του συστήματος τους (intra – community) και να τα προωθούν στον κατάλληλο πράκτορα του άλλου συστήματος (cross / inter – community).
Ωστόσο, έχουν μια σημαντική διαφορά: ένας πράκτορας διαμεσολαβητής είναι σε θέση να επικοινωνεί μόνο με έναν συγκεκριμένο πράκτορα, είτε αυτός είναι επίσης διαμεσολαβητής είτε είναι εκπρόσωπος, ενώ ένας πράκτορας εκπρόσωπος είναι σε θέση να επικοινωνεί απευθείας με κάθε πράκτορα του άλλου συστήμα-
Πίνακας 7.1.
Μέθοδοι επικοινωνίας και διασύνδεσης πολυπρακτορικών συστημάτων.
Συμμετρική (symmetric) Ασύμμετρη (asymmetric) Ανοικτά (A) οποιοσδήποτε οποιοσδήποτε X Κλειστά (B) διαμεσολαβητής διαμεσολαβητής (C) εκπρόσωπος διαμεσολαβητής Ανοικτά–Κλειστά X (D) οποιοσδήποτε εκπρόσωπος
Η Εικόνα 7.1, σε συνδυασμό με τον πίνακα 7.1 παρουσιάζει, αναλυτικά, τις τέσσερις μεθόδους διασύνδεσης και, επομένως, διαλειτουργικότητας.
Η πρώτη μέθοδος (A) αφορά στην περίπτωση, όπου και τα δύο συστήματα είναι ανοικτά και, ως εκ τούτου, οι πράκτορες κάθε συστήματος κατανοούν τις θέσεις και τα επιχειρήματα των άλλων πρακτόρων, εκτελώντας μια συμμετρική επικοινωνία.
Σε αυτό το πλαίσιο, κάθε πράκτορας είναι σε θέση να επικοινωνεί άμεσα με οποιονδήποτε πράκτορα του άλλου συστήματος, χωρίς την ανάγκη ειδικών πρακτόρων.
Η περίπτωση αυτή συναντάται εάν τα συστήματα βασίζονται στις ίδιες τεχνολογικές αρχές (γλώσσες, πλατφόρμες, κλπ) ή εάν όλοι οι πράκτορες έχουν υλοποιημένη στον κώδικα τους μια σειρά τεχνολογιών αναπαράστασης και συλλογισμού.
Ωστόσο, συνήθως, τα πολυπρακτορικά συστήματα βασίζονται σε διαφορετικές τεχνολογικές αρχές και οι πράκτορες δεν διαθέτουν μια πληθώρα τεχνολογιών αναπαράστασης και συλλογισμού κωδικοποιημένη στον κώδικα τους, καθώς δεν είναι πρακτικό.
Σε αυτό το πλαίσιο, η δεύτερη μέθοδος (B) αφορά στην περίπτωση, όπου δύο ετερογενή συστήματα μπορούν να συνεργάζονται μέσω της χρήσης διαμεσολαβητών.
Κάθε σύστημα παρέχει έναν ειδικό πράκτορα διαμεσολαβητή, ο όποιος ενεργεί ως πύλη και διαβιβάζει τα αιτήματα των πρακτόρων του συστήματος του στον διαμεσολαβητή του άλλου συστήματος, ο οποίος με την σειρά του τα προωθεί στους αποδέκτες του συστήματος του και αντίστροφα.
Η προσέγγιση αυτή δεν επιβαρύνει τους πράκτορες με επιπλέον τεχνολογίες αναπαράστασης και συλλογισμού, καθώς μόνοι οι πράκτορες διαμεσολαβητές είναι υπεύθυνοι για την επικοινωνία μεταξύ των συστημάτων, εκτελώντας μια συμμετρική επικοινωνία.
Ο διαμεσολαβητής του συστήματος MAS-n επικοινωνεί με τον διαμεσολαβητή του συστήματος MAS-k και αντίστροφα
Ο εκπρόσωπος του συστήματος MAS-n επικοινωνεί με οποιονδήποτε πράκτορα του συστήματος MAS-k και ο διαμεσολαβητής του συστήματος MAS-k επικοινωνεί μόνο με τον εκπρόσωπο του MAS-n
Οποιοσδήποτε πράκτορας στο σύστημα MAS-n επικοινωνεί απευθείας με οποιονδήποτε πράκτορα στο σύστημα MAS-k και αντίστροφα
Ο εκπρόσωπος του MAS-n επικοινωνεί απευθείας με οποιονδήποτε πράκτορα του συστήματος MAS-k ενώ οι πράκτορες του συστήματος MAS-k επικοινωνούν απευθείας με οποιονδήποτε στο σύστημα MAS-n.
Σε αυτή την περίπτωση (Β) εμπίπτει και η διασύνδεση ενός πολυπρακτορικού συστήματος με μια ομάδα υπηρεσιών ιστού.
Οι διαφορές στην υλοποίηση και την δράση τους, δεδομένου ότι οι πράκτορες αποτελούν αυτόνομες οντότητες ενώ οι υπηρεσίες ιστού αποτελούν παθητικά αναδραστικά στοιχεία, καθιστούν εξαιρετικά δύσκολη την μεταξύ τους επικοινωνία και συνεργασία.
Παρά το γεγονός ότι οι υπηρεσίες ιστού θεωρούνται ανοικτά συστήματα, πρακτικά, αυτή η ετερογένεια οδηγεί στην ύπαρξη δύο κλειστών συστημάτων, ενός πολυπρακτορικού συστήματος και μιας ομάδας υπηρεσιών ιστού.
Το πολυπρακτορικό σύστημα θεωρείται κλειστό, καθώς δεν είναι δυνατό όλοι οι πράκτορες που δρουν σε αυτό να είναι εξοπλισμένοι με τους κατάλληλους μηχανισμούς για την απευθείας επικοινωνία με οποιαδήποτε υπηρεσία ιστού.
Αντίστοιχα, μια ομάδα υπηρεσιών ιστού, που φιλοξενούνται σε έναν διακομιστή ιστού (Web server), δεν είναι δυνατό να καλύπτει ολόκληρο το εύρος των γλωσσών και λογικών, που χρησιμοποιούν οι πράκτορες ενός συστήματος.
Υπό αυτή την έννοια, με την χρήση ενός πράκτορα διαμεσολαβητή για την πλευρά του πολυπρακτορικού συστήματος και ενός διαμεσολαβητή τύπου servlet για την πλευρά των υπηρεσιών ιστού, που φιλοξενούνται στον διακομιστή ιστού, είναι δυνατή η διασύνδεση τους.
Επομένως, σε αυτή την περίπτωση η επικοινωνία είναι συμμετρική και οι διαμεσολαβητές είναι υπεύθυνοι για την εκπροσώπηση των συστημάτων τους, δημιουργώντας μια γέφυρα επικοινωνίας.
Σχετική μελέτη και παράδειγμα εφαρμογής παρουσιάζεται στην συνέχεια του
Φυσικά, η επικοινωνία μεταξύ δύο κλειστών πολυπρακτορικών συστημάτων δεν είναι πάντα συμμετρική.
Τα συστήματα, συνήθως, διαφέρουν στις τεχνολογίες αναπαράστασης και συλλογισμού που χρησιμοποιούν.
Πρακτικά, θα ήταν δυνατό για ένα κλειστό σύστημα να διαθέτει έναν πράκτορα εκπρόσωπο, έναν πράκτορα περισσότερο ευέλικτο και εμπλουτισμένο με διάφορες τεχνολογίες.
Σε αυτό το πλαίσιο, η τρίτη μέθοδος (C) αφορά στην περίπτωση, όπου δύο ετερογενή κλειστά συστήματα επιχειρούν να διασυνδεθούν, με το πρώτο να διαθέτει έναν πράκτορα εκπρόσωπο και το δεύτερο έναν πράκτορα διαμεσολαβητή.
Ο εκπρόσωπος του ενός συστήματος είναι σε θέση να επικοινωνεί άμεσα με οποιονδήποτε πράκτορα του άλλου συστήματος ενώ ο διαμεσολαβητής του δεύτερου συστήματος επικοινωνεί μόνο με τον εκπρόσωπο, εκτελώντας μια ασύμμετρη επικοινωνία.
Τέλος, τα συστήματα δεν βασίζονται πάντα στις ίδιες οργανωτικές αρχές.
Έτσι, η τέταρτη μέθοδος (D) αφορά στην περίπτωση, όπου το ένα σύστημα είναι ανοικτό και το άλλο κλειστό.
Σε αυτή την περίπτωση, το κλειστό σύστημα πρέπει να διαθέτει έναν πράκτορα εκπρόσωπο, καθώς ένας διαμεσολαβητής δεν θα ήταν επαρκής.
Οι πράκτορες διαμεσολαβητές δεν είναι κατάλληλοι, καθώς μπορούν να επικοινωνούν μόνο με πύλες, δηλαδή πράκτορες εκπροσώπους ή διαμεσολαβητές, πράκτορες που, στην πραγματικότητα, δεν υπάρχουν σε ένα ανοικτό σύστημα.
Ως εκ τούτου, ένα ανοικτό και ένα κλειστό σύστημα είναι σε θέση να επικοινωνούν μόνο με ασύμμετρο τρόπο.
Διασύνδεση Συστημάτων EMERALD και Rule Responder Σε συνέχεια της ως άνω μελέτης, η παρούσα διατριβή προτείνει την διασύνδεση των συστημάτων EMERALD [Kravari et al., 2010b] και Rule Responder [Paschke et al., 2007a;
Το σύστημα EMERALD αποτελεί συμβολή της διατριβής και μελετήθηκε εκτενώς στο τέταρτο κεφάλαιο.
Το Rule Responder είναι ένα πλαίσιο ανοικτού κώδικα για την δημιουργία εικονικών οργανισμών, όπως τα πολυπρακτορικά συστήματα, που υποστηρίζουν συνεργατικές ομάδες στον Σημασιολογικό Ιστό.
Αποτελείται από μια σειρά εγκεκριμένων στιγμιοτύπων, τα οποία υλοποιούν εικονικούς οργανισμούς, όπως για παράδειγμα το SymposiumPlanner12 για την υποστήριξη των συνεδρίων
11 Πληροφορίες σχετικά με την διασύνδεση των συστημάτων EMERALD και Rule Responder βρίσκονται στην ιστοσελίδα http://tinyurl.com/EMERALDRR. 12 Το SymposiumPlanner βρίσκεται διαθέσιμο στην ιστοσελίδα http://ruleml.org/SymposiumPlanner.
Το σύστημα Rule Responder Ειδικότερα, το σύστημα Rule Responder (RR) παρέχει την υποδομή για την συνεργασία μεταξύ των κατανεμημένων μελών ενός εικονικού οργανισμού μέσω της χρήσης κανόνων.
Οι άνθρωποι-χρήστες υποβοηθούνται από ημιαυτόματους, βασισμένους στην γνώση, πράκτορες, οι οποίοι χρησιμοποιούν κανόνες για να περιγράψουν την λογική των ιδιοκτητών τους.
Στην Εικόνα 7.2 [Osmun et al., 2011] παρουσιάζεται η τυπική αρχιτεκτονική ενός τυπικού πολυπρακτορικού συστήματος τύπου Rule Responder.
Κάθε στιγμιότυπο του συστήματος Rule Responder χρησιμοποιεί τέσσερις κατηγορίες πρακτόρων, έναν οργανωτικό πράκτορα (Organizational Agent OA), προσωπικούς πράκτορες (Personal Agents PAs), εξωτερικούς πράκτορες (External Agents EAs) και υπολογιστικούς πράκτορες (Computing Agents CAs).
Ο οργανωτικός πράκτορας παρουσιάζει τους στόχους και τις στρατηγικές του εικονικού του οργανισμού, συνολικά, χρησιμοποιώντας μια καθολική βάση κανόνων, όπου περιγράφονται όλες οι πολιτικές, οι κανονισμοί και οι δυνατότητες του οργανισμού.
Κάθε προσωπικός πράκτορας βοηθά ένα άτομο του οργανισμού, δρώντας ημιαυτόματα για λογαριασμό του, μέσω της χρήσης μιας τοπικής βάσης γνώσης, όπου ο χρήστης καθορίζει τους κανόνες.
Κάθε εξωτερικός πράκτορας χρησιμοποιεί μια δικτυακή διεπαφή, μέσω HTTP, όπου λαμβάνει ερωτήματα από τους χρήστες, τα οποία και προωθεί στον οργανωτικό πράκτορα.
Κάθε υπολογιστικός πράκτορας μπορεί να θεωρηθεί ως ένας, πιθανόν χαμηλού επιπέδου, πράκτορας που εκτελεί μια αυτοματοποιημένη
Οι υπολογιστικοί πράκτορες είναι παρόμοιοι με τους προσωπικούς, αν και δεν συνδέονται με ένα συγκεκριμένο άτομο.
Ο ρόλος τους είναι να βοηθούν τον οργανωτικό πράκτορα στην απάντηση των ερωτημάτων που προέρχονται από τους εξωτερικούς πράκτορες.
Έχουν σχεδιαστεί για να εκτελούν συγκεκριμένες εργασίες, που μπορεί να περιλαμβάνουν κλήσεις ανεξάρτητων υπηρεσιών εκτός οργανισμού (Εικόνα 7.2).
Ο οργανωτικός πράκτορας χρησιμοποιεί μια οντολογία OWL ως «μήτρα εκχώρησης ρόλων» (responsibility assignment matrix), έτσι ώστε να εντοπίζει τον προσωπικό πράκτορα που μπορεί να διαχειριστεί καλύτερα το εισερχόμενο ερώτημα.
Ο οργανωτικός πράκτορας για να αποστείλει το ερώτημα σε αυτόν τον προσωπικό πράκτορα, να λάβει την απάντηση από εκείνον, να την επικυρώσει και κατόπιν να την αποστείλει πίσω στον εξωτερικό πράκτορα χρησιμοποιεί αναδραστικούς (reaction) κανόνες.
Το σύστημα Rule Responder για την μεταφορά των δεδομένων χρησιμοποιεί την πλατφόρμα ενοποίησης Enterprise Service Bus (ESB) Mule (Εικόνα 7.3).
Η πλατφόρμα ενοποίησης Mule εκτελεί αυτή την μεταφορά δεδομένων μέσω «τελικών σημείων δεδομένων» (data endpoints).
Για παράδειγμα, στην περίπτωση του Rule Responder, κάθε πράκτορας (EA/OA/PA) έχει το δικό του τελικό σημείο, μέσω του οποίου μεταφέρονται τα δεδομένα.
Για την διασύνδεση με το σύστημα EMERALD, το Rule Responder χρησιμοποιεί μόνο το πρωτόκολλο HTTP ως πρωτόκολλο μεταφοράς, ωστόσο η πλατφόρμα Mule επιτρέπει την εύκολη εναλλαγή πρωτοκόλλων (e.g, SOAP).
Συγκεκριμένα, η πλατφόρμα Mule ESB Enterprise [Rademakers & Dirksen, 2008] είναι μια δημοφιλής, ανοικτού κώδικα πλατφόρμα ενοποίησης που βασίζεται στην γλώσσα Java.
Πρόκειται για μια ελαφριά και ευέλικτη πλατφόρμα, η οποία απλοποιεί την ενσωμάτωση εφαρμογών και τεχνολογιών καθώς προσαρμόζεται εύκολα στην υπάρχουσα υποδομή αλλά είναι αρκετά ισχυρή ώστε να υποστηρίξει ακόμη και μεγάλες και απαιτητικές επιχειρηματικές SOA εφαρμογές.
Στο Rule Responder, οι υποστηριζόμενες γλώσσες και μηχανισμοί συλλογιστικής είναι η Prova με την γλώσσα Prova, το OO jDREW με την POSL και το Euler με την N3.
Στην παρούσα διατριβή χρησιμοποιείται το OO jDREW [Ball et al., 2005], ένας συνεπαγωγικός, γραμμένος στην γλώσσα Java, μηχανισμός συλλογιστικής για τις γλώσσες κανόνων RuleML και POSL.
Πρόκειται για μια αντικειμενοστραφή επέκταση του jDREW, που υλοποιεί τα αντικειμενοστραφή χαρακτηριστικά της RuleML.
Οι εφαρμογές SymposiumPlanner (Εικόνα 7.4) είναι μια σειρά πολυπρακτορικών εφαρμογών, που αναπτύχθηκαν μέσω του συστήματος Rule Responder.
Αρμοδιότητα τους είναι η υποστήριξη των συνεδρίων RuleML.
Για αυτό το σκοπό, κάθε θέση συντονιστή του συνεδρίου, όπως οι general chair και panel chair έχουν έναν προσωπικό πράκτορα (PA) που ενεργεί ως διαμεσολαβητής στον εικονικό οργανισμό.
Κάθε προσωπικός πράκτορας έχει την δική του ιδιωτική βάση γνώσης, η οποία προσδιορίζει τις αρμοδιότητες της θέσης, προκειμένου ο πράκτορας να απαντά σε ερωτήσεις και να λύνει τα προβλήματα που σχετίζονται με την αυτή τη θέση.
Τα ερωτήματα μπορεί να κυμαίνονται από απλή αναζήτηση των στοιχείων επικοινωνίας του συντονιστή, όπως το όνομα, η διεύθυνση ηλεκτρονικού ταχυδρομείου και το τηλέφωνο, έως την επίλυση σύνθετων προβλημάτων που απαιτούν την ενσωματωμένη βαθιά γνώση των ανθρώπων συντονιστών του συνεδρίου.
Σύγκριση Συστημάτων EMERALD και Rule Responder Προκειμένου να αναπτυχθεί μια διεπαφή, που θα επιφέρει διαλειτουργικότητα μεταξύ των συστημάτων EMERALD και Rule Responder (RR), συγκρίθηκε η χρήση τους, οι τοπολογίες σύνδεσης των πρακτόρων, οι αρχές ανταλλαγής και τα υποσύνολα της γλώσσας RuleML που χρησιμοποιούν αλλά και ο ρόλος της γλώσσας Prova.
Η σύγκριση (Πίνακας 7.2) αποκάλυψε σημαντικές διαφορές.
Tα συστήματα χρησιμοποιούν διαφορετικές τεχνολογίες, το Rule Responder χρησιμοποιεί την πλατφόρμα Mule ESB για την μεταφορά δεδομένων και Java servlets για τους πράκτορες, ενώ το EMERALD χρησιμοποιεί την πλατφόρμα JADE και Java πράκτορες.
Επιπλέον, χρησιμοποιούν διαφορετικά υποσύνολα της γλώσσας RuleML, το
Rule Responder χρησιμοποιεί την Reaction RuleML [Paschke et al., 2007b] ενώ το EMERALD χρησιμοποιεί την DR RuleML [Bassiliades et al., 2006].
Μια τρίτη πολύ σημαντική διαφορά είναι ότι το Rule Responder έχει κεντρική διαχείριση μέσω του οργανωτικού πράκτορα (ΟΑ), που είναι υλοποιημένος στην γλώσσα Prova [Kozlenkov et al., 2006], ενώ στην κατανεμημένη αρχιτεκτονική του EMERALD, ο ProvaReasoner είναι μόνο μία από τις υποστηριζόμενες υπηρεσίες συλλογιστικής.
Αυτές οι υπηρεσίες παρέχονται από ανεξάρτητους πράκτορες, οι οποίοι καλούν τον αντίστοιχο μηχανισμό συλλογιστικής, σε αντίθεση με το Rule Responder, όπου οι υπηρεσίες συλλογιστικής είναι στιγμιότυπα των μηχανισμών.
Μια άλλη διαφορά είναι ότι οι πράκτορες στο Rule Responder έχουν εσωτερικές βάσεις κανόνων αλλά εσωτερικές και εξωτερικές βάσεις γνώσης ενώ οι πράκτορες στο EMERALD έχουν και εξωτερικές βάσεις κανόνων και εξωτερικές βάσεις δεδομένων-γνώσης.
Επιπλέον, το Rule Responder χρησιμοποιεί, μέσω του οργανωτικού του πράκτορα, την μήτρα εκχώρησης ρόλων για την ανάθεση εργασιών στους πράκτορες ενώ στο EMERALD, κάθε πράκτορας αναζητά, μέσω των προηγμένων υπηρεσιών AYPS, τους κατάλληλους εταίρους για να προωθήσει τις εργασίες του.
Τέλος, οι εφαρμογές στο Rule Responder υλοποιούνται ως στιγμιότυπα του συστήματος ενώ στο EMERALD υλοποιούνται με την χρήση διαφορετικών υπηρεσιών συλλογιστικής, διαφορετικών συμπεριφορών (βάσεων γνώσης) και διαφορετικών βάσεων κανόνων.
Πίνακας 7.2.
Εννοιολογική σύγκριση μεταξύ των συστημάτων EMERALD και Rule Responder.
Τεχνολογία πρακτόρων Java servlets / Mule Java (JADE) πράκτορες Αρχές ανταλλαγής Mule middleware JADE (ACL)
Εσωτερική βάση κανόνων Εσωτερική & Εξωτερική βάση δεδομέ-
Εξωτερική βάση κανόνων Εξωτερική βάση δεδομένων-γνώσης Πολλαπλοί μηχανισμοί συλλογιστικής (ανεξάρτητες εξωτερικές υπηρεσίες) "μήτρα εκχώρησης ρόλων")
Ρόλος της Prova OAs πάντα γραμμένος σε Prova, PAs και CAs προαιρετικά Αναπτύχθηκε ένας Prova-Reasoner (μια από τις υπηρεσίες συλλογιστικής);
Η Prova 3 δεν υποστηρίζεται, καθώς δεν υποστηρίζει ακόμη το JADE στιγμιότυπα του συστήματος Εφαρμογές: διαφορετικές υπηρεσίες συλλογιστικής, διαφορετικές βάσεις
Αρχιτεκτονική Πυλών EMERALD–Rule Responder Με βάση την ανωτέρω σύγκριση και την προηγηθείσα μελέτη για τις πιθανές μεθόδους διασύνδεσης και διαλειτουργικότητας προτείνεται η σχεδίαση και υλοποίηση δύο (RuleML) πυλών μεταξύ των συστημάτων EMERALD και Rule Responder.
Καθώς, τα δύο αυτά συστήματα είναι κλειστά και οι αρχιτεκτονικές τους διαφέρουν, υιοθετείται η τρίτη μέθοδος (περίπτωση C), η οποία επιτρέπει την ασύμμετρη επικοινωνία μεταξύ κλειστών συστημάτων.
Το σύστημα EMERALD επεκτάθηκε με μια γέφυρα προς το σύστημα Rule Responder, μέσω ενός πράκτορα διαμεσολαβητή, και αντίστροφα, το σύστημα Rule Responder επεκτάθηκε με μια γέφυρα προς το EMERALD, μέσω ενός πράκτορα εκπροσώπου.
Η αρχιτεκτονική αυτών των πυλών παρουσιάζεται στην Εικόνα 7.5.
Η πύλη από το σύστημα EMERALD προς το Rule Responder (EMERALDRR) υλοποιήθηκε ως ένας νέος διαμεσολαβητής πράκτορας στο EMERALD, με το όνομα RR Proxy Agent (RRP), ο οποίος έχει την δυνατότητα να επικοινωνεί απευθείας με τον οργανωτικό πράκτορα του Rule Responder (RR OA).
Πρακτικά, ο πράκτορας-διαμεσολαβητής ενσωματώνει μεθόδους API για την αλληλεπίδραση τόσο με τους πράκτορες του EMERALD όσο και με τον οργανωτικό πράκτορα του Rule Responder.
Με αυτό τον τρόπο, ο πράκτορας διαμεσολαβητής είναι ευέλικτος και επαναχρησιμοποιήσιμος, επομένως μπορεί να λάβει οποιοδήποτε (RuleML) ερώτημα και να συνδεθεί με το σύστημα Rule Responder, καλώντας τον οργανωτικό του πράκτορα.
Ο οργανωτικός πράκτορας με την σειρά του θα προωθήσει το μήνυμα στον κατάλληλο πράκτορα του συστήματος του και θα μεταφέρει το αποτέλεσμα πίσω στον διαμεσολαβητή του EMERALD.
Από την άλλη πλευρά, η πύλη από το σύστημα Rule Responder προς το EMERALD (RREMERALD) υλοποιήθηκε ως ένας νέος υπολογιστικός πράκτορας, πρακτικά πράκτορας-εκπρόσωπος, ο οποίος χειρίζεται ένα κατάλληλο κανάλι επικοινωνίας.
Στο Rule Responder, οι υπολογιστικοί πράκτορες υλοποιούνται ως Java servlets, ενεργώντας, ουσιαστικά, ως περικαλύμματα (wrappers) για τους αντίστοιχους μηχανισμούς συλλογιστικής.
Στην παρούσα μελέτη, ο υπολογιστικός πράκτορας, που δρα ως πύλη, ονομάζεται EMERALD Chair και υλοποιήθηκε, όπως είναι φυσικό, ως Java servlet, ενσωματώνοντας τόσο μεθόδους API για την αλληλεπίδραση με το EMERALD όσο και τις βασικές μεθόδους του συστήματος Rule Responder για την επικοινωνία με τον οργανωτικό πράκτορα του συστήματος.
Με αυτό τον τρόπο, κατέστη, τελικά, δυνατή η συνεργασία μεταξύ των πρακτόρων των δύο συστημάτων.
Το κύριο χαρακτηριστικό αυτής της προσέγγισης είναι ότι η ανταλλαγή πληροφοριών μεταξύ των συστημάτων, βασίζεται στην γλώσσα RuleML.
Η RuleML επιλέχθηκε ως η πρότυπη γλώσσα ανταλλαγής κανόνων (και δεδομένων), καθώς αποτελεί ένα de facto πρότυπο που υποστηρίζεται και από τα δύο συστήματα.
Επιπλέον, καθώς και τα δύο συστήματα υποστηρίζουν τεχνολογίες που βασίζονται στη γνώση, είναι πιο εύκολο να ανταλλάσσουν και να μετατρέπουν μηνύματα, που εκφράζονται σε μια (κοινή) γλώσσα κανό-
Παραδείγματα Διασυστηματικής Διαλειτουργικότητας Προκειμένου να ελεγχθούν οι προτεινόμενες πύλες διαλειτουργικότητας και να καταδειχθεί η χρησιμότητα τους, μελετώνται δύο περιπτώσεις χρήσεις, οι οποίες περιλαμβάνουν πολλαπλών σταδίων διάλογους μεταξύ των πρακτόρων των δύο συστημάτων.
Συγκεκριμένα, επιλέχθηκαν και υλοποιήθηκαν δύο ερωτήματα του SymposiumPlanner-2010, τόσο από το EMERALD προς το Rule Responder (EMERALDRR), όσο και αντίστροφα (RREMERALD).
Παράδειγμα διαλειτουργικότητας EMERALDRR Το παράδειγμα που αφορά στην πύλη από το σύστημα EMERALD προς το σύστημα Rule Responder, περιλαμβάνει έναν εξωτερικό εταίρο του SymposiumPlanner (partner), που εκπροσωπείται από έναν πράκτορα του EMERALD, ο οποίος θα ήθελε να υποστηρίξει το RuleML Συμπόσιο.
Στην Εικόνα 7.6 παρουσιάζονται όλες οι ανταλλαγές μηνυμάτων που λαμβάνουν χώρα μεταξύ όλων των εμπλεκόμενων πρακτόρων.
Σε αυτό το σενάριο, ο πράκτορας του EMERALD πρέπει να αποφασίσει εάν και σε ποιο βαθμό θα υποστηρίξει ως «χορηγός» το RuleML Συμπόσιο.
Η απόφαση, για το επίπεδο χορηγίας, προκύπτει από τις προτιμήσεις του και τις παροχές που παρέχει κάθε επίπεδο.
Συγκεκριμένα, ο πράκτορας έχει ένα μέγιστο ποσό χρημάτων που δύναται να ξοδέψει, ωστόσο δεν θέλει απλά να πάρει οποιαδήποτε παροχή είναι διαθέσιμη για αυτό το ποσό («Τι μπορώ να λάβω για αυτό το χρηματικό ποσό;»).
Αντίθετα, επιθυμεί να λάβει συγκεκριμένες παροχές ("Αν επιθυμώ αυτές τις παροχές, ποιο χρηματικό ποσό πρέπει να ξοδέψω;").
Επομένως, ο πράκτορας πρέπει να έχει πρόσβαση στις πληροφορίες που αφορούν όλα τα επίπεδα χορηγίας.
Αυτές οι πληροφορίες μπορούν να ληφθούν από τον υπεύθυνο πράκτορα, τον προσωπικό πράκτορα Publicity Chair του SymposiumPlanner (Rule Responder).
Σε αυτό το πλαίσιο, ο πράκτορας του συστήματος EMERALD πρέπει να επικοινωνήσει με τον PublicityChair της εφαρμογής SymposiumPlanner, εκ μέρους του χρήστη του.
Αρχικά, στέλνει το ερώτημα του προς τον πράκτορα (πύλη) του EMERALD που είναι επιφορτισμένος με τον ρόλο του διαμεσολαβητή για το σύστημα Rule Responder.
Το ερώτημα αυτό, που παρουσιάζεται στην Εικόνα 7.7, ζητά τα επίπεδα χορηγίας και τις παροχές τους, είναι γραμμένο στην Reaction RuleML και αντιστοιχεί στο ερώτημα «?getBenefits(Level, Amount, Benefits)» της γλώσσας Prolog.
Ο υπεύθυνος διαμεσολαβητής-πράκτορας, από την μεριά του, προωθεί το ερώτημα στον προσωπικό πράκτορα του Publicity Chair, μέσω του οργανωτικού πράκτορα του Rule Responder, και περιμένει την απάντηση.
Ο προσωπικός πράκτορας επεξεργάζεται το ερώτημα και επιστρέφει τα διαθέσιμα επίπεδα με τις παροχές τους.
Η επιστρεφόμενη απάντηση προωθείται, τελικά, από τον διαμεσολαβητή στον αιτηθέντα πράκτορα.
Το αντίστοιχο τμήμα της βάσης γνώσης του πράκτορα PublicityChair παρουσιάζεται στην Εικόνα 7.8.
Η διαδικασία λήψης αποφάσεων του εν δυνάμει χορηγού (EMERALD πράκτορας) βασίζεται σε κανόνες, πιο συγκεκριμένα σε κανόνες αναιρέσιμης λογικής.
Η βάση κανόνων αυτής της διαδικασίας, περιέχει τις προσωπικές προτιμήσεις του πράκτορα, όπως αυτές παρουσιάζονται στην Εικόνα 7.9 σε συντακτικό d-POSL.
Οι κανόνες αυτοί υποδεικνύουν ότι ο πράκτορας, εκ μέρους του χρήστη του, αναζητά ένα επίπεδο χορηγίας, το οποίο θα παρέχει τουλάχιστον μια δωρεάν εγγραφή και δυνατότητα επίδειξης για τα προϊόντα της εταιρείας κατά τη διάρκεια των εργασιών του Συμποσίου, χωρίς να ξοδεύουν περισσότερα από $ 5000.
Εάν υπάρχουν περισσότερα από ένα κατάλληλα επίπεδα χορηγίας, θα προτιμάται το φθηνότερο.
Μέρος αυτής της βάσης κανόνων παρουσιάζεται στην Εικόνα 7.10, όπου ο κανόνας για το χρυσό επίπεδο χορηγίας παρουσιάζεται στο συντακτικό της DR-RuleML.
Επομένως, ο εν δυνάμει χορηγός, προκειμένου να εντοπίσει το φθηνότερο επίπεδο χορηγίας πρέπει να εφαρμόσει τους κανόνες του (την παραπάνω βάση κανόνων) στο λαμβανόμενο μήνυμα που περιέχει τις απαντήσεις στο ερώτημα του, δηλαδή τα επίπεδα με τις παροχές τους.
Το μήνυμα, ωστόσο, είναι διαμορφωμένο σε μια RuleML διάλεκτο ενώ σύμφωνα με την λειτουργικότητα του μηχανισμού κανόνων DR-Device, τα δεδομένα εισόδου πρέπει να είναι σε RDF μορφή.
Ως εκ τούτου, το λαμβανόμενο RuleML μήνυμα πρέπει να μετατραπεί σε RDF (από τον ίδιο τον πράκτορα), έτσι ώστε το περιεχόμενο του να χρησιμοποιηθεί ως ένα σύνολο γεγονότων για την βάση κανόνων.
Για το σκοπό αυτό, αναπτύχθηκαν, στα πλαίσια της παρούσας μελέτης, ορισμένοι κανόνες μετασχηματισμού XSL (Εικόνα 7.11), οι οποίοι μπορούν να χρησιμοποιηθούν από τους πράκτορες του συστήματος Σε αυτό το σημείο, ο πράκτορας κατέχει τόσο την βάση κανόνων του όσο και τα απαραίτητα μετασχηματισμένα δεδομένα (γεγονότα).
Έτσι, αποστέλλει αυτή την βάση και έναν σύνδεσμο με τα δεδομένα που θα χρησιμοποιηθούν, τα οποία παρουσιάζονται σε RDF μορφή στην Εικόνα 7.12, στον DR-Reasoner, τον πράκτορα που παρέχει υπηρεσίες αναιρέσιμης συλλογιστικής, προκειμένου να εντοπίσει το πλέον κατάλληλο επίπεδο χορηγίας.
Στην συνέχεια, ο DR-Reasoner καλεί τον σχετικό μηχανισμό συλλογιστικής (DRDEVICE), προκειμένου να εκτελέσει τις απαραίτητες ενέργειες και να παρέχει αποτελέσματα.
Μόλις τα αποτελέσματα της διαδικασίας συμπερασμού είναι διαθέσιμα, ο DR-Reasoner τα προωθεί στον πράκτορα του EMERALD.
Στην υπό μελέτη περίπτωση, η επιλογή ήταν μεταξύ του χρυσού (gold) και του πλατινένιου (platinum) επιπέδου χορηγίας, από τα πέντε διαθέσιμα επίπεδα που παρουσιάζονται στον Πίνακα 7.3, καθώς τα άλλα επίπεδα απορρίφθηκαν.
Τόσο το χάλκινο (bronze) όσο και το ασημένιο (silver) επίπεδο απορρίφθηκαν, καθώς δεν πληρούσαν τις απαιτήσεις, ενώ το τελευταίο επίπεδο (emerald) απορρίφθηκε καθώς ήταν πάρα πολύ ακριβό.
Σε αυτό το πλαίσιο, επιλέχθηκε το χρυσό επίπεδο καθώς ήταν η φθηνότερη διαθέσιμη επιλογή.
Πίνακας 7.3.
EMERALD-RR: Τα επίπεδα χορηγίας.
Επίπεδο χορηγίας Ποσό Παροχές Χάλκινο (Bronze) $500 Λογότυπος στην ιστοσελίδα.
Ευχαριστίες στα πρακτικά. $1,000 Παροχές χάλκινου επιπέδου + Χορηγία συμμετεχόντων σπουδαστών. $3,000 Παροχές ασημένιου επιπέδου + Επίδειξη demo. 1 δωρεάν εγγραφή. $5,000 Παροχές χρυσού επιπέδου + Συμπερίληψη ονόματος σε όλα τα επίπεδα δημοσιότητας.
Κατανομή υλικού σε όλους τους συμμετέχοντες. $7,500 Παροχές πλατινένιου επιπέδου + 1 επιπλέον δωρεάν εγγραφή
Έτσι, ο εν δυνάμει χορηγός και πράκτορας του συστήματος EMERALD λαμβάνει την απάντηση του DR-Reasoner και αποστέλλει ένα νέο ερώτημα (Εικόνα 7.13) στον PublicityChair, μέσω του διαμεσολαβητή (RR Proxy).
Σε αυτό το νέο ερώτημα, ζητά τις κατάλληλες πληροφορίες για το επιλεχθέν επίπεδο, όπως εάν πρέπει να επικοινωνήσει με τον υπεύθυνο (τηλεφωνικά / ηλεκτρονικό ταχυδρομείο) ή εάν πρέπει να περιμένει να επικοινωνήσει εκείνος μαζί του.
Αυτό το ερώτημα είναι γραμμένο στην Reaction RuleML και αντιστοιχεί στο ερώτημα «?askInfo(Level, Action, Info)» της γλώσσας Prolog.
Στην παρούσα περίπτωση, υπεύθυνος για τις χορηγίες είναι ο Publicity Chair (Εικόνα 7.14).
Η λίστα ενεργειών του είναι αυτή που καθορίζει τι πρέπει να πράξει ανάλογα με το επίπεδο της χορηγίας.
Το τμήμα της βάσης γνώσης του που αφορά την διαδικασία λήψης αποφάσεων παρουσιάζεται σε d-POSL συντακτικό στην Εικόνα 7.15.
Σύμφωνα με αυτή, ο υπεύθυνος δημοσιότητας (Publicity Chair) πρέπει να τηλεφωνήσει στον δυνητικό χορηγό. %Λίστα ενεργειών του Publicity Chair ανάλογα με το επίπεδο χορηγίας. %Προσφορά χορηγού μικρότερη από $500, ενθάρρυνση να προσφέρει περισσότερα. %Χάλκινη/Ασημένια χορηγία, ο Publicity Chair πρέπει να του αποστείλει ένα μήνυμα ηλεκτρονικού ταχυδρομείου. % Χρυσή/Πλατινένια/Σμαραγδένια χορηγία, πρέπει να τηλεφωνήσει.
Μόλις, ο δυνητικός χορηγός λάβει την απάντηση, ενημερώνεται ότι η προβλεπόμενη διαδικασία είναι να περιμένει τηλεφωνική κλήση.
Ο πράκτορας μπορεί πλέον είτε να υποβάλει αίτηση χορηγίας και να περιμένει τηλεφώνημα του υπευθύνου (Publicity Chair) είτε να συνεχίσει την συζήτηση, προκειμένου να λάβει οποιαδήποτε επιπλέον πληροφορία.
Παράδειγμα διαλειτουργικότητας RR  EMERALD Το παράδειγμα που αφορά στην πύλη από το σύστημα Rule Responder προς το σύστημα EMERALD (Εικόνα 7.16), περιλαμβάνει την ανάπτυξη ενός νέου ερωτήματος στην εφαρμογή RuleML-2010 Symposium Planner, το οποίο ονομάστηκε Suggest Sponsoring Level [EMERALD/DR-DEVICE/Publicity Chair Agent].
Το ερώτημα αυτό είναι διαθέσιμο στην ιστοσελίδα του συνεδρίου RuleML-201013.
Σε αυτό το σενάριο, όπως και στην προηγούμενη περίπτωση, ένας δυνητικός χορηγός θα ήθελε να προσφέρει χορηγία στο συνέδριο RuleML-2010.
Για το σκοπό αυτό, πρέπει να επικοινωνήσει με τον κατάλληλο προσωπικό πράκτορα της εφαρμογής SymposiumPlanner, δηλαδή τον προσωπικό πράκτορα του Publicity Chair.
Αυτός ο προσωπικός πράκτορας είναι υλοποιημένος «εσωτερικά» στο πολυπρακτορικό σύστημα Rule Responder, ωστόσο η προσωπική του γνώση επαληθεύεται απομακρυσμένα στο σύστημα EMERALD, μέσω της χρήσης μιας υπηρεσίας συλλογιστικής (Reasoner).
Επομένως, σε αυτή την περίπτωση, ο Publicity Chair λειτουργεί περισσότερο ως ένας υπολογιστικός πράκτορας, που ονομάζεται EMERALD Chair, καθώς είναι ανεξάρτητος από τον υπόλοιπο εικονικό οργανισμό.
Σε αυτό το πλαίσιο, ο δυνητικός χορηγός πρέπει, αρχικά, να υποβάλλει το ερώτημά του, παρέχοντας το όνομα του (Sponsor name) και το χρηματικό ποσό ($1400 εν προκειμένω).
Το ερώτημα είναι γραμμένο στην Reaction RuleML (Εικόνα 7.17) και αντιστοιχεί στο ερώτημα «?suggestSponsoringLevel(Sponsor, Amount, Level)» της γλώσσας Prolog.
Στην συνέχεια, πρέπει να περιμένει για το προτεινόμενο επίπεδο χορηγίας, ουσιαστικά το υψηλότερο επίπεδο που ταιριάζει με το προσφερόμενο ποσό (Εικόνα 7. 18).
Σύμφωνα με τα επίπεδα χορηγίας που παρουσιάστηκαν στον πίνακα 7.3, τα καταλληλότερο επίπεδο χορηγίας είναι Ο υπολογιστικός πράκτορας EMERALD Chair, όπως έχει ήδη αναφερθεί, δεν διαθέτει δυνατότητες συλλογιστικής, επομένως πρέπει να επικοινωνήσει με έναν εξωτερικό μηχανισμό συλλογιστικής, όπως το σύστημα DR-DEVICE [Bassiliades et al., 2006].
Αυτός ο μηχανισμός βρίσκεται διαθέσιμος στο σύστημα EMERALD, υπό την μορφή ενός πράκτορα που προσφέρει την αντίστοιχη υπηρεσία συλλογιστικής (DR-Reasoner).
Επομένως, ο πράκτορας EMERALD Chair πρέπει να επικοινωνήσει με τον DR-Reasoner.
Σε αυτό το πλαίσιο, ο πράκτορας EMERALD Chair ενεργοποιεί έναν νέο πράκτορα, που ονομάζεται MyGateWayAgent, στο περιβάλλον του συστήματος EMERALD και τον χρησιμοποιεί ως αποστολέα.
Στην συνέχεια, λαμβάνει το ερώτημα του χρήση μέσω του φυλλομετρητή και το μετασχηματίζει, με την χρήση ενός XSLT προτύπου (Εικόνα 7.19), σε ένα κατάλληλο νέο RDF έγγραφο.
Το έγγραφο αυτό, ουσιαστικά, περιέχει τα δεδομένα εισόδου που απαιτούνται από τον DRReasoner του συστήματος EMERALD.
Πρόκειται, ωστόσο, για ένα εξαρτώμενο-από-τοπεδίο-εφαρμογής έγγραφο, το οποίο πρέπει να μεταβάλλεται κατάλληλα για κάθε νέα περίπτωση χρήσης, έτσι ώστε να αντικατοπτρίζει τα δεδομένα και τις ιδιαιτερότητες κάθε πεΈπειτα, ο πράκτορας EMERALD Chair πρέπει να ενεργοποιήσει το αντικείμενο Blackboard, το οποίο, στην πραγματικότητα, είναι ένα κανάλι επικοινωνίας, προκειμένου να ενεργοποιηθεί η αμφίδρομη επικοινωνία μεταξύ των δύο συστημάτων.
Επομένως, ο EMERALD Chair αποστέλλει ένα νέο RuleML ερώτημα μαζί με το αντίστοιχο RDF έγγραφο στον DR-Reasoner, μέσω του πράκτορα MyGateWayAgent.
Ο DR-Reasoner λαμβάνει το ερώτημα και διεξάγει την κατάλληλη διαδικασία συλλογιστικής.
Τα συμπεράσματα, τα οποία περιλαμβάνονται στο RDF έγγραφο, αποτελούνται από το υψηλότερο επίπεδο χορηγίας που ταιριάζει με το προσφερόμενο ποσό.
Ωστόσο, πριν επιστραφούν τα αποτελέσματα, πρέπει να μετασχηματιστούν στην γλώσσα RuleML, καθώς αυτή την μορφή μπορεί να κατανοήσει ο πράκτορας EMERALD Chair.
Για το σκοπό αυτό, ο DR-Reasoner μετασχηματίζει τα RDF δεδομένα εξόδου μέσω ενός XSLT εγγράφου (Εικόνα 7.20) και αποστέλλει το RuleML έγγραφο με τα αποτελέσματα (Εικόνα 7.17) πίσω στον EMERALD Chair, μέσω του MyGateWayAgent.
Ο τελευταίος εμφανίζει τα αποτελέσματα, που έλαβε, στον φυλλομετρητή, ως απάντηση στο αρχικό ερώτημα, βοηθώντας τον χρήστη του να λάβει την καλύτερη δυνατή απόφαση.
Διασύνδεση Συστήματος EMERALD και Υπηρεσιών Ιστού Στο περιβάλλον του Σημασιολογικού Ιστού, υπάρχουν ήδη πράκτορες στην παροχή υπηρεσιών, που δρουν με παρόμοιο τρόπο με τις υπηρεσίες ιστού.
Συνήθως, οι πράκτορες αυτοί είναι σε θέση να παρέχουν υπηρεσίες συλλογιστικής [Kravari et al., 2010c] ή διαπραγμάτευσης [Dobriceanu et al., 2009].
Ωστόσο, υπάρχουν τόσο εννοιολογικές όσο και τεχνολογικές ελλείψεις στην διασύνδεση των ευφυών πρακτόρων με τις υπηρεσίες ιστού.
Εννοιολογικά, οι υπηρεσίες ιστού δεν έχουν αυτονομία, αποτελούν παθητικά στοιχεία που συμπεριφέρονται αναδραστικά, καθώς περιμένουν να κληθούν από κάποιον άλλο.
Στερούνται επίσης κοινωνικών ικανοτήτων, καθώς και ικανοτήτων προσαρμογής και εξέλιξης.
Από την άλλη πλευρά, οι πράκτορες έχουν ενδιαφέροντα χαρακτηριστικά, όσον αφορά την αυτονομία, την κοινωνικότητα και την προσαρμοστικότητα.
Τεχνολογικά, τα πολυπρακτορικά συστήματα, αναπτύσσονται με την χρήση εξειδικευμένων πακέτων και δρουν σε κατανεμημένες πολυπρακτορικές πλατφόρμες, οι οποίες παρέχουν τις ενδιάμεσες υπηρεσίες (middleware), που απαιτούνται [Bădică et al, 2011].
Ωστόσο, οι υπηρεσίες που παρέχουν οι πράκτορες, παρόλο που είναι διαθέσιμες μέσα στην πλατφόρμα, δεν είναι άμεσα διαθέσιμες στον Ιστό.
Σε αυτό το πλαίσιο, η παρούσα διατριβή προτείνει την διασύνδεση των ευφυών πρακτόρων με τις υπηρεσίες ιστού [Bădică et al, 2013, Bădică et al, 2014].
Η προτεινόμενη προσέγγιση συμβάλλει στην γεφύρωση του χάσματος μεταξύ τους, καθώς ενσωματώνει και αναβαθμίζει υπάρχοντα συστήματα, όπως το σύστημα EMERALD, για να καταστεί δυνατή η κλήση των υπηρεσιών που προσφέρουν οι πράκτορες και από τον Ιστό.
Ειδικότερα, το σύστημα EMERALD, που προτάθηκε επίσης στην παρούσα διατριβή, επεκτείνεται, προκειμένου να διατεθούν οι υπηρεσίες συλλογιστικής που προσφέρει ως υπηρεσίες ιστού.
Στο πλαίσιο αυτό, αναπτύσσεται ένα σύστημα, που υποστηρίζει ένα ρεαλιστικό σενάριο στον τομέα της μεσιτείας.
Το σύστημα, παρέχει μια διαδικτυακή διεπαφή, η οποία ενσωματώνει τους κανόνες της βάσης γνώσης, που αφορούν στις προτιμήσεις του χρήστη, και καλεί, όταν απαιτείται εξωτερικές υπηρεσίες για συλλογιστική.
Στα πλαίσια της παρούσας διατριβής έχει επιλεγεί η αναιρέσιμη λογική, επομένως, η βάση γνώσης του μεσίτη περιγράφεται με αυτή ενώ για την επεξεργασία της και την υποστήριξη του μεσίτη καλείται η ανεξάρτητη και αξιόπιστη υπηρεσία αναιρέσιμης συλλογιστικής DR-Reasoner, που παρέχει το σύστημα EMERALD [Kravari et al., 2010c].
Ωστόσο, η προσέγγιση που παρουσιάζεται είναι γενική και επαναχρησιμοποιήσιμη και δεν περιορίζεται στην περίπτωση της μεσιτείας και της υπηρεσίας αναιρέσιμης συλλογιστικής που περιγράφεται στην προτεινόμενη υλοποίηση.
Πρακτικά, η αρχιτεκτονική της προσέγγισης μπορεί να εφαρμοστεί σε πλήθος εφαρμογών, με την χρήση διαφορετικών τύπων και υπηρεσιών συλλογιστικής.
Αρχιτεκτονική Διαδικτυακής Υπηρεσίας Συλλογιστικής Προκειμένου οι υπηρεσίες συλλογιστικής του συστήματος EMERALD να είναι διαθέσιμες και ως υπηρεσίες ιστού, προτείνεται η διασύνδεση της αρχιτεκτονικής και των πρωτοκόλλων των αντίστοιχων πρακτόρων (Reasoners) με την αρχιτεκτονική του Jade WSIG [Bellifemine et al., 2007].
Απώτερος σκοπός αυτής της διασύνδεσης είναι η δημιουργία διαδικτυακών υπηρεσιών συλλογιστικής, οι οποίες θα διατηρούν την λειτουργικότητα της υπηρεσίας.
Συγκεκριμένα, μια εξωτερική διαδικτυακή εφαρμογή είναι σε θέση να καλεί την υπηρεσία συλλογιστικής, όπως συμβαίνει και μέσα στο πολυπρακτορικό περιβάλλον, με την παροχή μιας βάσης κανόνων (σε RuleML) και ενός αρχικού συνόλου δεδομένων (σε RDF μορφή).
Είναι σημαντικό να σημειωθεί ότι τόσο η βάση κανόνων όσο και τα αρχικά δεδομένα είναι και εδώ εξαρτώμενα από την εφαρμογή, επομένως, είναι ευθύνη του πελάτη χρήστη να είναι κατάλληλα ορισμένα.
Στην συνέχεια, η υπηρεσία επιστρέφει στην εφαρμογή τα αποτελέσματα της διαδικασίας συμπερασμού ως ένα σύνολο γεγονότων (σε RDF μορφή).
Ειδικότερα, το RDF αρχείο που περιέχει αυτά τα αποτελέσματα, αποθηκεύεται από την διαδικτυακή υπηρεσία συλλογιστικής σε μια προσωρινή θέση ενώ η διεύθυνση URL επιστρέφεται στον πελάτη.
Επομένως, ο πελάτης είναι σε θέση να κατεβάσει το αρχείο και να το επεξεργαστεί περαιτέρω, σύμφωνα με τις απαιτήσεις της εφαρμογής.
Η αρχιτεκτονική της προτεινόμενης προσέγγισης παρουσιάζεται στην Εικόνα 7.21.
Ειδικότερα, στο διάγραμμα της αρχιτεκτονικής είναι σαφής η σύνδεση μεταξύ του συστήματος EMERALD, του JADE, του WSIG και του «εξωτερικού κόσμου».
Η διαδικτυακή υπηρεσία συλλογιστικής φιλοξενείται από ένα διακομιστή ιστού (Web server) και υλοποιείται με την βοήθεια ενός WSIG servlet (μιας μικροεφαρμογής εξυπηρετητή), που χειρίζεται τα αιτήματα συλλογιστικής.
Το servlet συνδέεται με την πλατφόρμα JADE μέσω ενός ειδικού πράκτορα (WSIG πράκτορας), ο οποίος χρησιμοποιεί ένα ειδικό στοιχείο γνωστό ως πύλη JADE (Jade Gateway).
Ο WSIG πράκτορας είναι σε θέση να προωθήσει τα αιτήματα συλλογιστικής στον κατάλληλο (Reasoner) πράκτορα του συστήματος EMERALD και να επιστρέφει τα αποτελέσματα στο WSIG servlet.
Στο UML διάγραμμα της Εικόνας 7.22, απεικονίζονται οι δραστηριότητες της εφαρμογής εισόδου (client application) και των επί μέρους στοιχείων της προσφερόμενης υπηρεσίας συλλογιστικής ενώ οι λεπτομερείς αλληλεπιδράσεις μεταξύ τους απεικονίζονται στο διάγραμμα της Εικόνας 7.23.
Όσον αφορά την συλλογιστική, η υπηρεσία παρέχεται μέσω του συνδυασμού δύο στοιχείων, της διαδικτυακής υπηρεσίας συλλογιστικής, που προτείνεται στην παρούσα ενότητα, και του πράκτορα (μέρος του EMERALD) που παρέχει την κατάλληλη υπηρεσία συλλογιστικής (Reasoner).
Μέσω των δύο αυτών διαγραμμάτων γίνεται καλύτερα κατανοητή η λειτουργικότητα της προτεινόμενης προσέγγισης.
Η εφαρμογή εισόδου καλεί την διαδικτυακή υπηρεσία συλλογιστικής (Βήμα 1 – Εικόνα 7.23), καθορίζοντας την βάση κανόνων.
Η υπηρεσία, με την σειρά της, εξάγει την βάση κανόνων και την προωθεί στον πράκτορα Reasoner, που παρέχει, πρακτικά, την υπηρεσία της συλλογιστικής (Βήμα 2 – Εικόνα 7.23).
Το αποτέλεσμα της διαδικασίας συμπερασμού εκφράζεται σε RDF (resultsRDF) και επιστρέφεται στην διαδικτυακή υπηρεσία συλλογιστικής (Βήμα 3 – Εικόνα 7.23).
Η διαδικτυακή υπηρεσία συλλογιστικής δημοσιεύει το RDF αρχείο σε μια προσωρινή διεύθυνση (URL) και, στην συνέχεια, επιστρέφει αυτή την διεύθυνση (resultsURL) στην εφαρμογή (Client) (Βήμα 4 – Εικόνα 7.23).
Η εφαρμογή λαμβάνει την διεύθυνση URL και, κατά συνέπεια, μπορεί να κατεβάσει το RDF αρχείο, το οποίο θα επεξεργαστεί περαιτέρω, σύμφωνα με τις απαιτήσεις του χρήστη.
Το προσωρινό RDF αρχείο, που περιέχει τα αποτελέσματα, θα παραμείνει στον διακομιστή, για ένα προκαθορισμένο πεπερασμένο χρονικό διάστημα.
Όταν παρέλθει αυτός ο χρόνος, το αρχείο θα διαγράφεται αυτόματα, όπως φαίνεται στην Εικόνα 7.22.
Η παραπάνω αρχιτεκτονική μπορεί να χρησιμοποιηθεί για την διασύνδεση οποιουδήποτε πράκτορα του συστήματος EMERALD, που παρέχει υπηρεσίες συλλογιστικής, με την τεχνολογία των υπηρεσιών ιστού.
Ωστόσο, στην συνέχεια παρουσιάζεται μόνο η περίπτωση του πράκτορα DR Reasoner, ο οποίος προσφέρει υπηρεσίες αναιρέσιμης συλλογιστικής στο σύστημα EMERALD.
Πρακτικά, η γενική διαδικασία που ακολουθεί ένας Reasoner (συμπεριλαμβανομένου του DR Reasoner) αποτελείται από τρία βασικά στάδια.
Αρχικά, ο πράκτορας λαμβάνει μια βάση κανόνων, που περιέχει την βάση γνώσης και ένα σύνολο κανόνων (οι οποίοι για λόγους διαλειτουργικότητας εκφράζονται με την χρήση της γλώσσας RuleML), και, ενδεχομένως, ένα ή περισσότερα αρχεία RDF, τα οποία περιέχουν αρχικά δεδομένα, απαραίτητα για την διαδικασία συλλογιστικής.
Στην συνέχεια, εκτελείται η διαδικασία συλλογιστικής και, στο τρίτο στάδιο, ο πράκτορας επιστρέφει τα (RDF) αποτελέσματα.
Σε αυτό το πλαίσιο, για την υλοποίηση της προσέγγισης χρησιμοποιείται το πρόσθετο JADE WSIG [JADE-WSIG, 2012], το οποίο δίνει την δυνατότητα σε υπηρεσίες πρακτόρων να εκτίθενται και να καλούνται ως υπηρεσίες ιστού από τους χρήστες διαδικτυακών υπηρεσιών.
Το WSIG λειτουργεί ως μέρος μιας διαδικτυακής εφαρμογής που υποστηρίζεται από έναν διακομιστή ιστού και έναν περιέκτη μικροεφαρμογών (servlet).
Παρέχει μεταξύ άλλων, περιγραφές υπηρεσιών WSDL, μεταφορά SOAP μηνυμάτων και αποθετήριο UDDI «χρυσού οδηγού».
Επιπλέον, το WSIG ενσωματώνει την WSIG μικροεφαρμογή και τον WSIG πράκτορα, λειτουργώντας ως πύλη μεταξύ της διαδικτυακής εφαρμογής και του πολυπρακτορικού συστήματος JADE.
Η WSIG μικροεφαρμογή χειρίζεται τα SOAP αιτήματα πάνω από το πρωτόκολλο HTTP, εξάγει το SOAP περιεχόμενο, το αντιστοιχίζει με την δράση ενός πράκτορα και το προωθεί στον WSIG πράκτορα.
Μετά την εκτέλεση της ενέργειας του πράκτορα, η WSIG μικροεφαρμογή μετατρέπει το αποτέλεσμα, που λαμβάνει από τον WSIG πράκτορα στο πρωτόκολλο SOAP, προετοιμάζει μια SOAP απάντηση πάνω από το πρωτόκολλο HTTPκαι την αποστέλλει πίσω στον χρήστη (Web client) (Εικόνα 7.21).
Ακόμη, το πρόσθετο WSIG παρέχει μια μέθοδο για την διάθεση ως υπηρεσιών ιστού, των παρεχόμενων από τους πράκτορες υπηρεσιών, των οποίων η περιγραφή δημοσιεύεται στον πράκτορα Directory Facilitator (DF).
Για το σκοπό αυτό, η DF περιγραφή της υπηρεσίας ενός πράκτορα αντιστοιχίζεται, από το WSIG, αυτόματα σε μια WSDL περιγραφή.
Για παράδειγμα, η WSDL περιγραφή για την υπηρεσία συλλογιστικής, που παρέχεται από τον DR Reasoner παρουσιάζεται στην Εικόνα 7.24.
Σε αυτό το παράδειγμα, ορίζεται μια υπηρεσία ιστού με το όνομα Defeasible_Reasoning_Service (διαδικτυακή υπηρεσία συλλογιστικής), η οποία προήλθε από την περιγραφή της υπηρεσίας αναιρέσιμης λογικής, που παρέχεται από τον πράκτορα DR Reasoner.
Το περιεχόμενο του WSDL δομείται σε δύο μέρη, ένα αφηρημένο, που περιέχει τους τύπους δεδομένων, τα μηνύματα και τις προδιαγραφές λειτουργιών, και ένα συγκεκριμένο, που περιέχει τις συνδέσεις και τις προδιαγραφές των
Ειδικότερα, το αφηρημένο μέρος περιλαμβάνει ορισμούς τύπων, που καθορίζονται με την χρήση της γλώσσας XML Schema (τμήμα wsdl:type), τύπους μηνυμάτων, που καθορίζονται ως τμήματα του wsdl:message, και τύπους πυλών, που αντιπροσωπεύουν διεπαφές υπηρεσιών (εκφρασμένες με την χρήση του στοιχείου wsdl:portype), αποτελούμενες από σύνολα λειτουργιών (στοιχεία wsdl:operation).
Για παράδειγμα, η προτεινόμενη στην παρούσα διατριβή, διαδικτυακή υπηρεσία αναιρέσιμης συλλογιστικής διαθέτει μια διεπαφή με μια λειτουργία, που απαιτεί δύο παραμέτρους, μία παράμετρο εισόδου που αντιπροσωπεύει ένα μήνυμα DRReasoningRequest και μια παράμετρο εξόδου που αντιπροσωπεύει ένα μήνυμα DRReasoningResponse.
Το μήνυμα DRReasoningRequest μεταφέρει ένα αντικείμενο του τύπου DRReasoning, το οποίο περιέχει μια τιμή, που ονομάζεται inputRulemlPath και αντιπροσωπεύει την URL διεύθυνση της βάσης γνώσης που εισάγεται στην υπηρεσία.
Το συγκεκριμένο τμήμα περιέχει συνδέσεις για λειτουργίες και μηνύματα (στοιχείο wsdl:binding) και προδιαγραφές για τα σημεία σύνδεσης της υπηρεσίας (στοιχείο wsdl:port).
Για παράδειγμα, η διαδικτυακή υπηρεσία αναιρέσιμης συλλογιστικής ανταλλάσσει μηνύματα, τα οποία έχουν ορισθεί με τον τύπο «document», έχουν μορφοποιηθεί με την χρήση του πρωτοκόλλου SOAP και έχουν μεταφερθεί μέσω του HTTP.
Αυτή η σύνδεση συνδυάζεται με την διεύθυνση URL, στην οποία η υπηρεσία είναι διαθέσιμη14.
Ευφυής διαδικτυακός μεσίτης Λαμβάνοντας υπόψη τον ως άνω σχεδιασμό, στην παρούσα ενότητα παρουσιάζεται μια συγκεκριμένη περίπτωση εφαρμογής, αυτής ενός ευφυούς διαδικτυακού μεσίτη, που χρησιμοποιεί τις ανεξάρτητες υπηρεσίες συλλογιστικής της προτεινόμενης προσέγγισης.
Στο πλαίσιο αυτό, υιοθετείται για το περιβάλλον του Ιστού, το σενάριο μεσιτείας που παρουσιάστηκε στην εργασία [Bassiliades et al., 2006].
Σε αυτό το σενάριο χρήσης, παραλλαγή του οποίου χρησιμοποιήθηκε στο τέταρτο κεφάλαιο της παρούσας διατριβής για την μελέτη των υπηρεσιών του πολυπρακτορικού περιβάλλοντος EMERALD, συμμετέχουν τρία μέρη.
Ο χρήστης (User), ο οποίος αντιπροσωπεύει έναν πελάτη που ενδιαφέρεται να αγοράσει ή να ενοικιάσει ένα διαμέρισμα, ο μεσίτης (Broker), ο οποίος συνδυάζει τις απαιτήσεις του πελάτη με τις δυνατότητες του πωλητή και προτείνει μια ή περισσότερες κατάλληλες δυνατές συναλλαγές, και, τέλος, το ίδιο το σύστημα EMERALD, το οποίο παρέχει κατόπιν απαίτησης ανεξάρτητες υπηρεσίες συλλογιστικής για την υποστήριξη της «ευφυΐας» του μεσίτη.
Η υπηρεσία συλλογιστικής που προσφέρεται ονομάζεται DR Web service, βασίζεται στον πράκτορα DR Reasoner του συστήματος EMERALD και καταδεικνύει την διασύνδεση των πρακτόρων με τις υπηρεσίες ιστού.
Οι ρόλοι και οι αλληλεπιδράσεις όλων των εμπλεκόμενων μερών περιγράφονται στις Εικόνες 7.25 και 7.26.
Στο υπό μελέτη περιβάλλον, αυτό του Ιστού, ο χρήστης χρησιμοποιεί ένα πρόγραμμα-φυλλομετρητή (browser) για να συνδεθεί με την ιστοσελίδα του μεσίτη και να αναζητήσει διαμερίσματα.
Η επιχείρηση του μεσίτη υποστηρίζεται από μια διαδικτυακή εφαρμογή, η οποία βοηθά τους ανθρώπους-χρήστες, που αναζητούν διαμερίσματα προς ενοικίαση, να εντοπίσουν κατάλληλες προσφορές και, παράλληλα, επιτρέπει στους ιδιοκτήτες να περιγράψουν και να δημοσιεύσουν τις προσφορές τους.
Για αυτό το σκοπό, οι προσφορές διαμερισμάτων πρέπει να καταχωρούνται και να αποθηκεύονται σε μια βάση δεδομένων, διαθέσιμη προς την διαδικτυακή εφαρμογή του μεσίτη.
Στην παρούσα μελέτη, θεωρείται δεδομένη η ύπαρξη αυτής της βάσης και η προσοχή επικεντρώνεται στην πλευρά του χρήστη.
Όσον αφορά στην ευφυΐα του μεσίτη, αυτή καθοδηγείται από μια βάση γνώσης.
Ωστόσο, λαμβάνοντας υπόψη την μεγάλη ποικιλία των φορμαλισμών αναπαράστασης γνώσης, ιδίως με κανόνες, ο μεσίτης αποφασίζει να αναθέσει τις λειτουργίες της συλλογιστικής του σε μια ανεξάρτητη πλατφόρμα συλλογιστικής (εν προκειμένω το σύστημα EMERALD), που παρέχει αξιόπιστες δυνατότητες συλλογιστικής, οι οποίες μπορούν να κληθούν ως υπηρεσίες ιστού.
Ο διαχωρισμός της ευφυΐας του μεσίτη από τις υπηρεσίες συλλογιστικής έχει το πλεονέκτημα ότι ο μεσίτης μπορεί να ενημερώνει την βάση γνώσης ανάλογα με τα ενδιαφέροντα του χρήστη.
Αυτή η ενημερωμένη έκδοση μπορεί να περιλαμβάνει είτε την επικαιροποίηση των κανόνων, είτε την υιοθέτηση ενός νέου φορμαλισμό αναπαράστασης κανόνων, που ταιριάζει καλύτερα με τις ανάγκες του χρήστη.
Πρακτικά, αρχικά, ο χρήστης συνδέεται στην ιστοσελίδα (βήμα 1 – Εικόνα 7.26) του μεσίτη και λαμβάνει μια φόρμα (βήμα 2 – Εικόνα 7.26), όπου μπορεί να συμπληρώσει το αίτημα του (βήμα 3 – Εικόνα 7.26).
Όταν ολοκληρωθεί η διαδικασία εισαγωγής, ο μεσίτης δημιουργεί μια παραμετροποιημένη βάση γνώσης (η οποία αναπαρίσταται με την χρήση της γλώσσας RuleML – Εικόνα 7.27) και ένα αρχείο (RDF), το οποίο περιέχει τις τιμές των παραμέτρων που ορίζονται από το χρήστη (Εικόνα 7.28).
Οι παράμετροι μπορούν να καθορίσουν, για παράδειγμα, τον ελάχιστο αριθμό υπνοδωματίων, τον μέγιστο όροφο, το ελάχιστο μέγεθος του κήπου (σε m2), την μέγιστη τιμή για μια κεντρική τοποθεσία ή ένα προάστιο, το ελάχιστο προτιμώμενο μέγεθος, την επιπλέον τιμή ανά m2 (πάνω από το ελάχιστα προτιμώμενο μέγεθος), τον διαθέσιμο προϋπολογισμό, ακόμη και αν επιτρέπονται κατοικίδια ή όχι.
Ωστόσο, ένα ιδιαίτερα δύσκολο έργο είναι η παροχή της δυνατότητας στον χρήστη να περιγράψει τις γενικές προτιμήσεις του, όπως, για παράδειγμα, ότι κύρια προτίμηση του είναι η φθηνότερη επιλογή, δεύτερη προτίμηση του είναι η παρουσία ενός κήπου και τρίτη, κατά σειρά, προτίμηση του είναι ο επιπλέον χώρος (Πίνακας 7.4).
Πίνακας 7.4.
Απαιτήσεις και προτιμήσεις του χρήστη για την εφαρμογή της μεσιτείας.
Απαιτήσεις διαμερίσματος Προτιμήσεις τιμής Προτιμήσεις Ελάχιστο μέγεθος: 45 m2 Μέγιστος προϋπολογισμός: 400 Το φθηνότερο διαμέρισμα Ελάχιστος αριθμός υπνοδωματίων: 2 Μέγιστη τιμή για κεντρικό διαμέρισμα:
Μέγιστη τιμή για διαμέρισμα προαστίου: Ύπαρξη επιπλέον χώρου Ελάχιστο μέγεθος κήπου: 12 Επιπλέον τιμή ανά επιπλέον m2 διαμερί-
Κατοικίδια: ΝΑΙ Επιπλέον τιμή ανά επιπλέον m2 κήπου: 2 Αντίστοιχα δύσκολη είναι και η περιγραφή προτιμήσεων, που δεν είναι εύκολα παραμετροποιήσιμες, όπως για παράδειγμα η απαίτηση ότι «εάν το διαμέρισμα είναι από τον 3ο όροφο και πάνω, τότε η παρουσία ανελκυστήρα είναι απαραίτητη».
Ως εκ τούτου, στην παρούσα μελέτη, η προσοχή στρέφεται προς την κατεύθυνση ενός γενικού «πρωτότυπου» χρήστη, για τον οποίο ορίζεται μια βάση (αναιρέσιμων) κανόνων με το σύνολο των απαραίτητων παραμέτρων.
Οι συγκεκριμένες τιμές των παραμέτρων, εισάγονται από τον χρήστη κατά τον χρόνο εκτέλεσης, χρησιμοποιώντας την φόρμα που παρέχεται από τον μεσίτη.
Έτσι, αυτή η βάση κανόνων επιτρέπει στον μεσίτη να κατανοήσει τις προτιμήσεις ενός τυπικού χρήστη.
Φυσικά, ένας άλλος περισσότερο έμπειρος χρήστης μπορεί να συμμετέχει, με την κατάλληλη ενημέρωση της βάσης γνώσης.
Επιπλέον, εάν ο χρήστης δεν παρέχει τιμές για κάποιες από τις παραμέτρους προτίμησης, τότε οι αντίστοιχοι κανόνες δεν προστίθενται στην δημιουργηθείσα βάση κανόνων.
Στο επόμενο στάδιο, ο μεσίτης συμβουλεύεται την εσωτερική βάση δεδομένων του για να ανακτήσει μια σειρά από διαμερίσματα, τα οποία είναι σχετικά με το αίτημα του χρήστη.
Στην συνέχεια, οι προτιμήσεις του χρήστη (η βάση γνώσης συνοδευόμενη από ένα σύνολο ζευγών παραμέτρων-τιμών), μαζί με το σύνολο των σχετικών διαμερισμάτων, υποβάλλονται από τον μεσίτη στην υπηρεσία συλλογιστικής (βήμα 4 – Εικόνα 7.26).
Το μήνυμα (SOAP) που αποστέλλει ο μεσίτης προς την υπηρεσία συλλογιστικής παρουσιάζεται στην του συστήματος EMERALD, και δημιουργεί το αρχείο εξόδου, που περιέχει τα αποτελέσματα σε RDF μορφή (Εικόνα 7.30).
Τέλος, η υπηρεσία συλλογιστικής επιστρέφει στον μεσίτη την διεύθυνση του αρχείου (resultsURL), που περιέχει το σύνολο των διαθέσιμων επιλογών (βήμα 5 – Εικόνα 7.26).
Ο μεσίτης τις μετατρέπει σε μια κατανοητή μορφή (π.χ.
HTML) και τις οπτικοποιεί στον φυλλομετρητή για τον χρήστη (βήμα 6 – Εικόνα 7.26).
Όπως είναι φανερό, για να καταστεί εφικτή η χρήση των προτεινόμενων υπηρεσιών ιστού είναι απαραίτητη η δημιουργία μιας διαδικτυακής διεπαφής, που θα επιτρέπει στους χρήστες να έχουν πρόσβαση σε αυτές.
Σε αυτό το πλαίσιο, παρουσιάζεται η προτεινόμενη φιλική προς τον χρήστη, διαδικτυακή διεπαφή, που υποστηρίζει την λειτουργικότητα του μεσίτη (Broker Web site).
Η διεπαφή αυτή, επί του παρόντος, επικεντρώνεται σε αυτήν την συγκεκριμένη εφαρμογή, ωστόσο, μπορεί να φιλοξενήσει κάθε είδους και οποιοδήποτε αριθμό εφαρμογών.
Αυτή η δυνατότητα βασίζεται στο γεγονός ότι η ιστοσελίδα φιλοξενείται σε έναν ανεξάρτητο διακομιστή.
Επιπλέον, η ύπαρξη δύο ξεχωριστών διακομιστών, έναν για την φιλοξενία των υπηρεσιών, όπως η υπηρεσία ιστού DR, και έναν για την φιλοξενία των εγγεγραμμένων μερών, όπως ο μεσίτης, επιτρέπει την ευελιξία της προσέγγισης.
Με άλλα λόγια, είναι σημαντικό να διατηρηθεί ανέπαφος και ανεπηρέαστος ο πυρήνας της προσέγγισης, ο οποίος παρέχει τις υπηρεσίες, και, ταυτόχρονα, να παρέχει έναν εύκολο και αποτελεσματικό τρόπο για την επικοινωνία των εγγεγραμμένων μερών με τους ανθρώπους-χρήστες.
Η προσθήκη νέων εφαρμογών στην παρεχόμενη λίστα είναι εύκολα επιτεύξιμη, δεδομένου ότι απαιτεί την ανάλυση της οντολογίας των δεδομένων εισόδου και στη συνέχεια, χρησιμοποιώντας αυτή την οντολογία την σύνταξη της κατάλληλης βάσης γνώσης.
Για αυτό το σκοπό υπάρχουν γραφικά εργαλεία, π.χ.
Kontopoulos et al., 2012], η μελέτη των οποίων, ωστόσο, δεν αποτελεί αντικείμενο της πα-
Στην παρούσα μελέτη, χρησιμοποιείται ένας νέος ξεχωριστός διακομιστής για την προτεινόμενη γραφική διεπαφή.
Η διεπαφή αυτή υλοποιείται κυρίως στην PHP, μια γλώσσα για την πλευρά του διακομιστή, που επιτρέπει σε όλους τους υπολογισμούς και τις λειτουργίες να εκτελούνται στον διακομιστή, αφήνοντας για τον τελικό χρήστη μόνο ό,τι έχει σχεδιαστεί για αυτόν.
Όταν ένας χρήστης επισκέπτεται την ιστοσελίδα, πρέπει να επιλέξει από ένα αναπτυσσόμενο μενού το πεδίο εφαρμογής που τον ενδιαφέρει.
Στην παρούσα μελέτη πρόκειται για την μεσιτεία, που ονομάζεται Carlo στην εφαρμογή (Εικόνα 7.31).
Μετά την επιλογή του πεδίου εφαρμογής, η διαδικτυακή γραφική διεπαφή ενημερώνεται δυναμικά, παρέχοντας μια λίστα με όλα τα διαθέσιμα χαρακτηριστικά για αυτήν την εφαρμογή (Εικόνα 7.32).
Ο χρήστης είναι σε θέση να υποδείξει τις προσωπικές προτιμήσεις του, όπως για παράδειγμα τον επιθυμητό αριθμό υπνοδωματίων και για την διευκόλυνση του παρέχονται ορισμένες προεπιλεγμένες τιμές.
Όταν ο χρήστης ολοκληρώσει την επιλογή του («Submit all»), τα δεδομένα συλλέγονται και αποθηκεύονται στο αρχείο δεδομένων (RDF), που θα χρησιμοποιηθεί από την υπηρεσία ιστού DR Web Service.
Αυτό το αρχείο είναι αποθηκευμένο στον διακομιστή και κάθε φορά που οι χρήστες παρέχουν τις προτιμώμενες τιμές τους, οι κατάλληλες PHP συναρτήσεις ενημερώνουν τις αποθηκευμένες Ειδικότερα, υπάρχει αποθηκευμένο ένα πρότυπο αρχείο δεδομένων RDF, το οποίο κάθε φορά που είναι διαθέσιμες νέες τιμές αναλύεται και οι νέες τιμές αποθηκεύονται στο κατάλληλο στιγμιότυπο.
Το ενημερωμένο αρχείο RDF, που περιέχει τις απαιτήσεις και τις προτιμήσεις του χρήστη, χρησιμοποιείται από τον μεσίτη στο αίτημά του προς την υπηρεσία ιστού της αναιρέσιμης συλλογιστικής.
Όταν ο πράκτορας DR Reasoner ολοκληρώσει την επεξεργασία του αιτήματος, επιστρέφει την απάντηση, τα συμβατά με τις απαιτήσεις του χρήστη διαμερίσματα, σε RDF συντακτικό.
Ο μεσίτης αναλύει τα (RDF) αποτελέσματα και τα παρουσιάζει σε HTML μορφή στον χρήστη, μέσω της διεπαφής (Εικόνα 7.33).
Παρόμοιες Αρχιτεκτονικές Διαλειτουργικότητας Συστημάτων Όσον αφορά στην διαλειτουργικότητα των πολυπρακτορικών συστημάτων και την ανταλλαγή των πληροφοριών υπάρχουν διάφορες προσπάθειες.
Ειδικά, όσον αφορά την ανταλλαγή, υπάρχουν αρκετές προσπάθειες, που έχουν ως στόχο την ανταλλαγή κανόνων και την οικοδόμηση ενός γενικού προτύπου κανόνων και μοντελοποίησης για τον Σημασιολογικό
Ιστό.
Σε αυτό το πλαίσιο έχουν προταθεί, γενικές προσεγγίσεις προτυποποίησης, όπως οι RuleML [Boley et al., 2010], W3C RIF [Boley & Kifer, 2010], και Common Logic [ISO/IEC 24707:2007, 2007].
Ωστόσο, όσον αφορά την διαλειτουργικότητα των πολυπρακτορικών συστημάτων υπάρχουν μόνο πρώιμες, περιορισμένου αριθμού προτάσεις.
Οι προτάσεις αυτές, ορισμένες από τις οποίες παρουσιάζονται στην συνέχεια, σε αντίθεση με τις προτεινόμενες προσεγγίσεις της παρούσας διατριβής, δεν κατορθώνουν να υποστηρίξουν ένα πρακτικό κατανεμημένο επίπεδο κανόνων στον Σημασιολογικό Ιστό.
Μια τέτοια προσπάθεια αποτελεί η αρχιτεκτονική των Georgousopoulos, Rana & Karageorgos [Georgousopoulos et al., 2003], η οποία ακολουθεί μια παρόμοια, με την προτεινόμενη στην παρούσα διατριβή, φιλοσοφία.
Ωστόσο, η αρχιτεκτονική αυτή αφορά μόνο συστήματα, που είναι συμβατά με τα πρότυπα της FIPA.
Οι συγγραφείς προτείνουν πύλες που είναι συμβατές με την FIPA και μπορούν να συνδεθούν σε ένα κατάλληλο πολυπρακτορικό σύστημα, παρέχοντας αυτοματοποιημένη διαλειτουργικότητα.
Έτσι, σε αυτή την προσέγγιση υλοποιήθηκε ένας ειδικός Java πράκτορας (GatewayAgent) για να διευκολύνει την πραγματοποίηση των πυλών.
Ωστόσο, αυτή η αρχιτεκτονική υποστηρίζει μόνο έναν περιορισμένο αριθμό τύπων (performatives) της FIPA (7 από 22).
Λόγω αυτού του περιορισμού, η προσέγγιση δεν είναι εφαρμόσιμη σε συστήματα που απαιτούν πολύπλοκη διαλειτουργική επικοινωνία, όπως το ηλεκτρονικό εμπόριο που περιλαμβάνει διαπραγμάτευση, συνεργασία και συντονισμό ετερογενών εταίρων.
Μια άλλη προσέγγιση παρουσιάζεται στην εργασία [Armor et al., 2003].
Πρόκειται για μια προσέγγιση που βασίζεται σε συστατικά λογισμικού (component-based) και αφορά συμβατά με την FIPA συστήματα.
Ως ένα βαθμό, η προσέγγιση αυτή προτείνει μια παρόμοια, με την προτεινόμενη στην παρούσα διατριβή, φιλοσοφία, όπου χρησιμοποιούνται πράκτορεςδιαμεσολαβητές ως πύλες για την επικοινωνία των πρακτόρων.
Η προσέγγιση των Armor, Fuentes και Troya, όμως, βασίζεται στην χρήση της τεχνολογίας των συστατικών για την ανάπτυξη των πρακτόρων.
Κάθε τέτοιος πράκτορας διαχωρίζει την κατανομή των μηνυμάτων, ανάλογα με τις διάφορες υπηρεσίες μεταφοράς, οι οποίες μειώνουν την εξάρτηση της πλατφόρμας από την συμπεριφορά του πράκτορα-συντονιστή.
Ωστόσο, και αυτή η προσέγγιση περιορίζεται σε συστήματα που είναι συμβατά με τις προδιαγραφές της FIPA.
Ακόμη μια προσέγγιση που ασχολείται με το ζήτημα της διαλειτουργικότητας των πρακτόρων παρουσιάζεται στην εργασία [Giampapa et al., 2000].
Αυτή η εργασία παρουσιάζει έναν υλοποιημένο πράκτορα, που ονομάζεται RETSINA-OAA InterOperator, ο οποίος επιτρέπει την διαλειτουργικότητα μεταξύ δύο συγκεκριμένων πολυπρακτορικών συστημάτων, των RETSINA [Sycara et al., 1996] και OAA (SRI’s Open Agent Architecture) [Martin et al., 1999].
Οι συγγραφείς περιγράφουν τα προβλήματα και τις προκλήσεις που αφορούν στο σχεδιασμό και την εφαρμογή αυτού του πράκτορα (interoperator).
Ορίζουν τον πράκτορα αυτό, ως μια οντότητα που παρέχει στους πράκτορες του ενός πολυπρακτορικού συστήματος πρόσβαση στις δυνατότητες και τις υπηρεσίες που προσφέρονται από το άλλο πολυπρακτορικό σύστημα.
Από την άλλη πλευρά, η προτεινόμενη στην παρούσα διατριβή προσέγγιση ασχολείται με ετερογενή συστήματα, τόσο συμβατά όσο και μη συμβατά με την FIPA, παρέχοντας τις κατευθυντήριες γραμμές για μια γενική αρχιτεκτονική διαλειτουργικότητας.
To One Ring project [nerdErg, 2014] είναι μια υπηρεσία που υποστηρίζει έναν μηχανισμό κανόνων σεναρίων (scripting rules engine).
Φιλοδοξεί να χρησιμοποιηθεί ως υπηρεσία ιστού (SOA) για εφαρμογές που απαιτούν πρόσβαση σε μηχανισμούς επεξεργασίας σεναρίων αυθαίρετων παραμέτρων.
Συγκεντρώνει την επεξεργασία κοινών ή επιχειρηματικών κανόνων για πολλαπλές εφαρμογές που χρειάζονται πρόσβαση στους ίδιους κανόνες.
Οι κανόνες ορίζονται, χρησιμοποιώντας μια απλή γλώσσα, κατανοητή από τους ειδικούς του τομέα.
Η κύρια διαφορά μεταξύ του One Ring και του EMERALD έγκειται στην ποικιλία των υπηρεσιών συλλογιστικής, που προσφέρονται από το EMERALD.
Το One Ring υποστηρίζει μόνο μια απλή αλλά όχι ευρέως κατανοητή γλώσσα ενώ το EMERALD προτείνει μια ποικιλία υπηρεσιών συλλογιστικής, συμπεριλαμβανομένης συνεπαγωγικής, αναιρέσιμης και τροπικής συλλογιστικής.
Αυτή η ποικιλία επιτρέπει στο σύστημα EMERALD, μέσω των προτεινόμενων επεκτάσεων, να παρέχει κατάλληλες υπηρεσίες για ένα πλήθος εφαρμογών, είτε μέσα στο πολυπρακτορικό περιβάλλον είτε διαδικτυακά.
Ωστόσο, και οι δύο προσεγγίσεις μοιράζονται μια παρόμοια άποψη για την σημαντικότητα των κανόνων και την χρήση τους.
Σε αυτό το πλαίσιο, προσφέρουν και οι δύο υπηρεσίες επεξεργασίας κανόνων μέσω υπηρεσιών ιστού, αν και για το σύστημα EMERALD αυτό αποτελεί μόνο μια πτυχή.
Στο κεφάλαιο αυτό μελετήθηκε το ζήτημα της διασύνδεσης και της διαλειτουργικότητας τόσο των πολυπρακτορικών συστημάτων όσο και των ευφυών πρακτόρων με τις υπηρεσίες ιστού.
Σε αυτό το πλαίσιο, αρχικά, προτάθηκαν πιθανές μέθοδοι διαλειτουργικότητας ενώ, στην συνέχεια, δόθηκε έμφαση στα ετερογενή συστήματα.
Ειδικότερα, μελετήθηκαν και προτάθηκαν τρόποι διασύνδεσης ετερογενών πολυπρακτορικών συστημάτων, οι οποίοι επιτρέπουν την αυτόματη επικοινωνία και συνεργασία μεταξύ των πρακτόρων όλων των εμπλεκομένων συστημάτων.
Ειδικό αντικείμενο μελέτης αποτελέσαν τα συστήματα EMERALD και Rule Responder, δύο πολυπρακτορικά συστήματα του Σημασιολογικού Ιστού.
Το EMERALD αποτελεί συμβολή της παρούσας διατριβής και είναι ένα σύστημα πλήρως συμβατό με τα πρότυπα και τις προδιαγραφές της FIPA, έχει αναπτυχθεί πάνω από την πλατφόρμα JADE και προσφέρει, μεταξύ άλλων, ανεξάρτητες και αξιόπιστες υπηρεσίες συλλογιστικής.
Το σύστημα Rule Responder, από την άλλη πλευρά, είναι ένα ανοιχτού κώδικα πλαίσιο για την δημιουργία εικονικών οργανισμών υπό την μορφή πολυπρακτορικών συστημάτων.
Το σύστημα αυτό, υποστηρίζει συνεργατικές ομάδες στον Σημασιολογικό Ιστό και αποτελεί πρωτοπόρο στην χρήση της γλώσσας RuleML, ως κοινής γλώσσας διαλειτουργικότητας στα πολυπρακτορικά συστήματα.
Τα δύο αυτά συστήματα συγκρίθηκαν και αναλύθηκαν, έτσι, λαμβάνοντας υπόψη αυτή την σύγκριση και τις πιθανές μεθόδους διαλειτουργικότητας, που επίσης μελετήθηκαν, σχεδιάστηκαν και υλοποιήθηκαν αμφίδρομες πύλες μεταξύ των συστημάτων Rule Responder και EMERALD.
Αυτή η προσέγγιση προσφέρει αυτοματοποιημένη διαλειτουργικότητα και συνεργασία μεταξύ των πρακτόρων των δύο συστημάτων.
Η χρήση αυτής της δηλωτικής και βασισμένης στην γνώση προσέγγισης, επιτρέπει στους πράκτορες να αυξήσουν την ευφυΐα τους, καθώς τους δίνει την δυνατότητα να λαμβάνουν συνεπείς και έξυπνες επιλογές.
Επιπλέον, για να καταδειχθεί η λειτουργικότητα και χρησιμότητα της προσέγγισης παρουσιάστηκαν δυο περιπτώσεις χρήσης, πολλαπλών επιπέδων, που αφορούν στην διασύνδεση των παραπάνω συστημάτων.
Στην συνέχεια, μελετήθηκε η διασύνδεση των ευφυών πρακτόρων με τις υπηρεσίες ιστού (Web services).
Στο πλαίσιο αυτό το σύστημα EMERALD επεκτάθηκε με κατάλληλες διαδικτυακές πύλες, μέσω των οποίων είναι δυνατή η παροχή των προσφερόμενων, από τους πράκτορες του συστήματος, υπηρεσιών στο περιβάλλον του Ιστού.
Η προτεινόμενη προσέγγιση είναι γενική και επαναχρησιμοποιήσιμη, ωστόσο, στην παρούσα μελέτη υλοποιήθηκε και παρουσιάστηκε η διασύνδεση του πράκτορα DR-Reasoner, που προσφέρει υπηρεσίες αναιρέσιμης συλλογιστικής, με την τεχνολογία των υπηρεσιών ιστού.
Σε αυτό το πλαίσιο, προτάθηκε και η υλοποίηση συγκεκριμένης διαδικτυακής διεπαφής για ένα παράδειγμα χρήσης, που αφορά τον τομέα της μεσιτείας, μέσω της οποίας προσφέρεται η λειτουργικότητα της προσέγγισης.
Μέσα από την προτεινόμενη αρχιτεκτονική διασύνδεσης και το παράδειγμα χρήσης κατέστη δυνατή η κατανόηση των πλεονεκτημάτων της προσέγγισης, όπου μεταξύ άλλων οι πράκτορες βγαίνουν από την απομόνωση και τους περιορισμούς, επικοινωνώντας με τον έξω, από το σύστημα τους, κόσμο. 8 8 Επίλογος και Μελλοντική Εργασία
Με την ολοκλήρωση της παρούσας διατριβής, γίνεται φανερό ότι οι Ευφυείς Πράκτορες που δραστηριοποιούνται στον Σημασιολογικό Ιστό, αποτελούν μια ιδιαίτερα φιλόδοξη και πολλά υποσχόμενη ερευνητική προσπάθεια με πολλαπλά πλεονεκτήματα.
Σε αυτό το πλαίσιο, το παρόν, τελευταίο, κεφάλαιο της διατριβής συνοψίζει την συμβολή της, παραθέτοντας τα κυριότερα συμπεράσματα της και δίδοντας κατευθύνσεις για μελλοντική ερευνητική εργασία στα πεδία που εξετάστηκαν.
Η παρούσα διατριβή μελέτησε τους Ευφυείς Πράκτορες και την δράση τους στον Σημασιολογικό Ιστό.
Κεντρικό αντικείμενο αυτής της μελέτης αποτέλεσε η αξιοπιστία και η διαλειτουργικότητα στο χώρο των πολυπρακτορικών συστημάτων, όπου μελετήθηκαν διεξοδικά η αλληλεπίδραση και η ανταλλαγή δεδομένων και γνώσης μεταξύ των ευφυών πρακτόρων.
Η έρευνα επικεντρώθηκε, όπως παρουσιάστηκε αναλυτικά, στην ανάπτυξη νέων εκφραστικών και ευέλικτων δομών, μεθοδολογιών και συστημάτων για την ενίσχυση της αξιόπιστης, αποτελεσματικής και αποδοτικής συνεργασίας των ευφυών πρακτόρων στο περιβάλλον του
Σε αυτό το πλαίσιο, στο δεύτερο κεφάλαιο της διατριβής πραγματοποιήθηκε επισκόπηση του θεωρητικού υποβάθρου, όπου συζητήθηκε η αναπαράσταση γνώσης και η εξαγωγή συμπερασμάτων στον Σημασιολογικό Ιστό.
Ειδικότερα, αρχικά, γίνεται αναφορά στα δεδομένα και τα μεταδεδομένα, καθώς και στις οντολογίες και τις γλώσσες τους, όπως είναι το πλαίσιο περιγραφής πόρων RDF, η γλώσσα περιγραφής λεξιλογίου RDF Schema και η πρότυπη γλώσσα οντολογιών ιστού OWL.
Στην συνέχεια, μελετώνται τα συστήματα κανόνων, τα οποία διακρίνονται σε συστήματα παραγωγής και συστήματα εξαγωγής συμπερασμάτων.
Ιδιαίτερη έμφαση δόθηκε στην λογική και την εξαγωγή συμπερασμάτων, δεδομένου ότι οι κανόνες και η λογική αποτελούν σημαντικά στοιχεία για την επίτευξη των στόχων του Σημασιολογικού Ιστού.
Όσον αφορά την λογική μελετήθηκαν τρεις περιπτώσεις που χρησιμοποιήθηκαν στην παρούσα διατριβή, η συνεπαγωγική λογική (deductive logic), η αναιρέσιμη λογική (defeasible logic) και η χρονική αναιρέσιμη λογική (temporal defeasible logic).
Η συνεπαγωγική λογική αποτελεί την βάση για την ανάπτυξη πολυπρακτορικών συστημάτων, ωστόσο, ιδιαίτερη περίπτωση λογικής αποτελεί η αναιρέσιμη λογική, καθώς και η επέκταση της, η χρονική αναιρέσιμη λογική.
Πρακτικά, κατέστη σαφές ότι οι αναιρέσιμες λογικές επιτρέπουν την ανάπτυξη εξελιγμένων και περισσότερο αυτοματοποιημένων συστημάτων, ενισχύοντας την έρευνα για περισσότερο ρεαλιστικά πολυπρακτορικά συστήματα και εφαρμογές.
Στο τέλος του κεφαλαίου, μελετήθηκαν οι γλώσσες κανόνων, που αποτελούν ένα ιδιαίτερα σημαντικό εργαλείο για τους ευφυείς πράκτορες και την εκπλήρωση του σκοπού τους, δεδομένου ότι τους επιτρέπουν να ενεργούν και να συλλογίζονται προς όφελος των χρηστών τους.
Για αυτό το σκοπό, έχει αναπτυχθεί μια σειρά γλωσσών κανόνων, όπως οι γλώσσες RuleML και Reaction RuleML, που χρησιμοποιήθηκαν στα πλαίσια της παρούσας διατριβής για την ανάπτυξη διαλειτουργικών μεθοδολογιών και συστημάτων.
Στην συνέχεια, το τρίτο κεφάλαιο της διατριβής πραγματεύτηκε τα ευφυή πολυπρακτορικά συστήματα.
Ειδικότερα, αρχικά, έγινε μια σύντομη επισκόπηση των κυριότερων αρχιτεκτονικών, γλωσσών και πρωτοκόλλων επικοινωνίας, που έχουν καθιερωθεί στον χώρο των ευφυών πρακτόρων.
Με αυτή την επισκόπηση ολοκληρώνεται η μελέτη και κατανόηση του θεωρητικού υποβάθρου.
Στην συνέχεια, δεδομένου του εύρους των πολυπρακτορικών εργαλείων και συστημάτων, η παρούσα διατριβή παρουσίασε το πρώτο μέρος της συμβολής της, όπου καταγράφηκε μια εκτενής έρευνα και συγκριτική μελέτη των δημοφιλέστερων συστημάτων και εργαλείων.
Ιδιαίτερο αντικείμενο μελέτης σε αυτό το πλαίσιο αποτέλεσε το γεγονός ότι η ερευνητική κοινότητα χρησιμοποιεί μια ποικιλία κριτηρίων, που διαφέρουν από έρευνα σε έρευνα, καθιστώντας τα ευρήματα μη συγκρίσιμα.
Για την αντιμετώπιση αυτού του ζητήματος, προτάθηκε μια σειρά καθολικών κριτηρίων σύγκρισης και αξιολόγησης, τα οποία χρησιμοποιήθηκαν και αξιολογήθηκαν στην παρούσα διατριβή.
Μετά την παρουσίαση και χρήση των καθολικών κριτηρίων προτάθηκε, επίσης, και μια σειρά κατηγοριοποιήσεων για τα υπό μελέτη συστήματα και εργαλεία, η οποία κατέδειξε τις ομοιότητες μεταξύ τους.
Οι κατηγοριοποιήσεις αυτές είναι ιδιαίτερα χρήσιμες, καθώς επιτρέπουν σε κάθε ενδιαφερόμενο ερευνητή να αποφασίσει ποια περίπτωση καλύπτει καλύτερα τις ανάγκες του/της.
Το τέταρτο κεφάλαιο επίσης αποτελεί πρωτότυπη συμβολή της παρούσας διατριβής, προτείνοντας ένα πολυπρακτορικό σύστημα, για πράκτορες που δρουν στον Σημασιολογικό Ιστό, το οποίο ονομάζεται EMERALD.
Το σύστημα EMERALD αποτελεί μια νέα και ευέλικτη πρόταση, η οποία προσφέρει πλήθος τεχνολογιών και υπηρεσιών, όπως η εξαγωγή συμπερασμάτων για διάφορες λογικές / συλλογιστικές μέσω ειδικών, για αυτό το σκοπό, πρακτόρων.
Η προτεινόμενη προσέγγιση αντιμετωπίζει ένα από τα σημαντικότερα ζητήματα στον χώρο των ευφυών πρακτόρων, αυτό της επικοινωνίας και αλληλεπίδρασης των πρακτόρων, όταν αυτοί δεν χρησιμοποιούν τους ίδιους φορμαλισμούς λογικής / συλλογιστικής.
Σε αυτό το πλαίσιο, μελετήθηκαν αναλυτικά οι προτεινόμενες υπηρεσίες συνεπαγωγικής και αναιρέσιμης συλλογιστικής, καθώς και η υπηρεσία επαλήθευσης αποδείξεων που ολοκληρώνει τις προσφερόμενες υπηρεσίες συλλογιστικής και εξαγωγής συμπερασμάτων.
Πρακτικά, μέσω του εύρους των προτεινόμενων επιλογών, επιτυγχάνεται η διαλειτουργικότητα μεταξύ των πρακτόρων που δρουν στο περιβάλλον του συστήματος
Επιπρόσθετα, το σύστημα EMERALD προσφέρει ένα γενικό πρότυπο για την δημιουργία παραμετροποιήσιμων ευφυών πρακτόρων.
Το προτεινόμενο πρότυπο ονομάζεται KC-Agents και προσφέρει μια σειρά πλεονεκτημάτων, που αφορούν, μεταξύ άλλων, τμηματική διαμόρφωση (modularity), επαναχρησιμοποίηση (reusability) και διαλειτουργικότητα
Κεφάλαιο 8 – Επίλογος και Μελλοντική Εργασία (interoperability) της γνώσης μεταξύ των ευφυών πρακτόρων.
Όπως παρουσιάστηκε, στο τέταρτο κεφάλαιο της διατριβής, το πρότυπο KC-Agents περιλαμβάνει τρία συστατικά μέρη, ένα πρακτορικό μοντέλο, προηγμένες υπηρεσίες καταλόγου και μια βιβλιοθήκη εξωτερικών μεθόδων.
Το πρακτορικό μοντέλο ονομάζεται KC Model και ορίζει ότι κάθε πράκτορας που το ακολουθεί, είναι εξοπλισμένος με μια μηχανή κανόνων και μια βάση γνώσης που περιέχει την στρατηγική και την γνώση του πράκτορα για το περιβάλλον.
Ιδιαίτερο χαρακτηριστικό του μοντέλου αποτελεί η ευελιξία που προσφέρει, δεδομένου ότι η βάση γνώσης ενός πράκτορα αλλάζει εύκολα, χωρίς πρόσθετο προγραμματιστικό κόστος, επιτρέποντας την άμεση αλλαγή της στρατηγικής και της γνώσης που κατέχει ο πράκτορας, δίνοντας του την δυνατότητα να συμμετέχει σε πλήθος εφαρμογών.
Όσον αφορά στις υπηρεσίες καταλόγου προτάθηκαν τόσο προηγμένες υπηρεσίες σημασιολογικού καταλόγου και αναζήτησης, όσο και υπηρεσίες αναζήτησης βασισμένων στην αξιοπιστία των υπηρεσιών, οι οποίες επιτρέπουν στους ευφυείς πράκτορες να εντοπίζουν κατάλληλους συνεργάτες, αποκομίζοντας το μέγιστο δυνατό όφελος σε κάθε συναλλαγή τους.
Τέλος, το κεφάλαιο έκλεισε με την πρόταση μιας γραφικής διεπαφής χρήστη, που ενοποιεί όλες τις παρεχόμενες υπηρεσίες και λειτουργίες.
Στόχος της διεπαφής είναι να επιτρέψει στους ανθρώπους να παρακολουθήσουν την δράση των πρακτόρων τους και, έτσι, να αναπτύξουν μεγαλύτερη κατανόηση και εμπιστοσύνη για αυτούς.
Το πέμπτο κεφάλαιο πραγματεύτηκε την διαχείριση της αλληλεπίδρασης των ευφυών πρακτόρων στον Σημασιολογικό Ιστό, προτείνοντας δύο πρωτότυπες, ανεξάρτητες συστήματος, μεθοδολογίες.
Η πρώτη αφορά στην διαχείριση των πρωτοκόλλων και των στρατηγικών αλληλεπίδρασης των ευφυών πρακτόρων μέσω κανόνων, ενώ η δεύτερη αφορά στην διαχείριση της ροής εργασιών των ηλεκτρονικών συμβολαίων που συνάπτουν οι ευφυείς πράκτορες μέσω πολιτικών.
Όσον αφορά στην πρώτη περίπτωση, προτάθηκε η μεθοδολογία K-SWAN, μια επαναχρησιμοποιήσιμη και εύκολα κατανοητή από τον χρήστη μεθοδολογία, που προωθεί τον αυτοματισμό στην δράση των πρακτόρων.
Κεντρικό σημείο της μεθοδολογίας αποτελεί η ανεξαρτητοποίηση των ιδιωτικών-κρυφών στρατηγικών από τα δημόσια-φανερά πρωτόκολλα αλληλεπίδρασης, η οποία μειώνει την πολυπλοκότητα και το προγραμματιστικό κόστος.
Όσον αφορά στην δεύτερη περίπτωση, προτάθηκε μια μεθοδολογία που αντιμετωπίζει όλες τις πτυχές ενός ηλεκτρονικού συμβολαίου, από την εδραίωση εμπιστοσύνης μεταξύ των συμμετεχόντων έως την τελική αποδοχή, καλύπτοντας την έλλειψη ολοκληρωμένων λύσεων στον χώρο.
Η μεθοδολογία περιλαμβάνει και μια ιδιαίτερη πρωτοτυπία, καθώς προσφέρει μεθόδους για την αξιολόγηση τόσο της συνολικής απόδοσης όσο και της στρατηγικής που χρησιμοποιεί κάθε πράκτορας.
Έτσι, κάθε πράκτορας μπορεί να μελετήσει τόσο την δική τους συμπεριφορά όσο και των υπολοίπων, προκειμένου να βελτιωθεί στο μέλλον, επιτυγχάνοντας υψηλότερη ωφέλεια από τις συναλλαγές του.
Στην συνέχεια, το έκτο κεφάλαιο πραγματεύτηκε ένα από τα σημαντικότερα ζητήματα στα πολυπρακτορικά συστήματα, αυτό της εμπιστοσύνης και της αξιοπιστίας.
Δεδομένου ότι τα συστήματα αυτά αποτελούν μικρογραφία του πραγματικού κόσμου, είναι αναγκαίο να διασφαλιστεί η αναγνώριση αξιόπιστων και μη εταίρων, προκειμένου κάθε πράκτορας να αντιλαμβάνεται τον κίνδυνο που ελλοχεύει στην επιλογή πιθανού εταίρου και να πράττει ανάλογα.
Σε αυτό το πλαίσιο, στο έκτο κεφάλαιο της διατριβής προτάθηκε η σχεδίαση και υλοποίηση πέντε νέων, πρωτότυπων υβριδικών μοντέλων αξιοπιστίας, που συνδυάζουν την άμεση προσωπική εμπειρία με τις διαθέσιμες μαρτυρίες τρίτων, προκειμένου να αποδοθεί η πραγματική εικόνα (φήμη) ενός πράκτορα.
Τα τρία πρώτα προτεινόμενα μοντέλα, που ονομάζονται SERM, T-REX και HARM, ακολουθούν τις αρχές της κεντρικής προσέγγισης ενώ τα υπόλοιπα δύο, που ονομάζονται DRM και DISARM, ακολουθούν τις αρχές της κατανεμημένης προσέγγισης.
Οι μέθοδοι και οι μετρικές που χρησιμοποιεί κάθε μοντέλο διαφέρουν, για παράδειγμα το μοντέλο DISARM βασίζεται στην αναιρέσιμη λογική ενώ το HARM στην χρονική αναιρέσιμη λογική, ωστόσο, όλα τα μοντέλα είναι σε θέση να συλλάβουν τις προτιμήσεις και τις ιδιαιτερότητες κάθε ευφυούς πράκτορα ξεχωριστά, οδηγώντας σε λογικά και ρεαλιστικά συμπεράσματα.
Τέλος, το έβδομο κεφάλαιο της διατριβής πραγματεύεται το ζήτημα της διασύνδεσης και της διαλειτουργικότητας των πολυπρακτορικών συστημάτων.
Ειδικότερα, μελετήθηκε η ετερογένεια στο χώρο και προτάθηκαν μέθοδοι για την διασύνδεση του συστήματος EMERALD με ένα άλλο κλειστό πολυπρακτορικό σύστημα, που ονομάζεται Rule Responder, και τις υπηρεσίες ιστού.
Σε αυτό το πλαίσιο, μελετήθηκαν και προτάθηκαν πιθανές μέθοδοι διασύνδεσης, και κατ’ επέκταση διαλειτουργικότητας, πολυπρακτορικών συστημάτων, με βάση τον τύπο της επικοινωνίας και τις προϋποθέσεις κάθε συστήματος.
Στην συνέχεια, επιλέχθηκε η βέλτιστη εξ αυτών για την διασύνδεση των συστημάτων EMERALD και Rule Responder, καταδεικνύοντας πώς μπορούν δύο κλειστά πολυπρακτορικά συστήματα να συνεργαστούν.
Όσον αφορά την διασύνδεση του συστήματος EMERALD με την τεχνολογία των υπηρεσιών ιστού, η παρούσα διατριβή πρότεινε ένα γενικό, αυτοματοποιημένο εννοιολογικό πλαίσιο, που βασίζεται στην γνώση, επέκταση του EMERALD, μέσω του οποίου είναι δυνατή η παροχή υπηρεσιών συλλογιστικής υπό την μορφή υπηρεσιών ιστού.
Συγκριτικό πλεονέκτημα της προσέγγισης είναι το γεγονός ότι η υιοθέτηση της επιτρέπει την επαναχρησιμοποίηση της γνώσης, υπό την μορφή δηλωτικών κανόνων, όσον αφορά τους περιορισμούς, τις απαιτήσεις και τις ιδιαιτερότητες κάθε πεδίου εφαρμογής.
Ακόμη και σήμερα, οι περισσότερες εφαρμογές είναι σαφώς προγραμματισμένες για την αντιμετώπιση συγκεκριμένων προβλημάτων και αυτό συνήθως είναι επαρκές.
Ωστόσο, τα τελευταία χρόνια η ερευνητική κοινότητα στρέφει την προσοχή της ολοένα και περισσότερο στους ευφυείς πράκτορες.
Αυτό συμβαίνει γιατί ένας συνεχώς αυξανόμενος αριθμός εφαρμογών απαιτεί συστήματα, που μπορούν να αποφασίσουν μόνα τους τι πρέπει να κάνουν, πότε και πως, προκειμένου να ικανοποιήσουν τους στόχους τους.
Σε αυτό το πλαίσιο, οι ευφυείς πράκτορας θεωρούνται ένας πολλά υποσχόμενος τομέας, στον χώρο του Σημασιολογικού Ιστού και όχι μόνο, που κερδίζει συνεχώς έδαφος.
Ήδη, όπως συζητήθηκε και στην παρούσα διατριβή, οι ευφυείς πράκτορες χρησιμοποιούνται ευρέως σε πολλές εφαρμογές πραγματικού κόσμου, συμπεριλαμβανομένης της εξέλιξης διαφόρων εφαρμογών αλλά και του ίδιου του Ιστού.
Ειδικότερα, στην παρούσα διατριβή μελετήθηκαν και προτάθηκαν νέες, πρωτότυπες μεθοδολογίες, υπηρεσίες, μοντέλα και συστήματα, που ενισχύουν την δράση και την διαλειτουργικότητα των ευφυών πρακτόρων.
Σε αυτό το πλαίσιο, τα ανοικτά θέματα μελλοντικής εργασίας της διατριβής αφορούν όχι μόνο επεκτάσεις στις προτάσεις της αλλά και περαιτέρω ανάπτυξη της θεωρητικής της βάσης.
Όσον αφορά στα πολυπρακτορικά συστήματα και εργαλεία στο σύνολο τους, όπως παρουσιάστηκε στο τρίτο κεφάλαιο, απαιτείται αντιμετώπιση της ετερογένειας τους, τουλάχιστον ως προς την σύγκριση και κατηγοριοποίηση τους.
Προς αυτή την κατεύθυνση, στην παρούσα διατριβή έγινε μια πρώτη απόπειρα ορισμού μιας σειράς καθολικών κριτηρίων και κατηγοριοποιήσεων.
Ωστόσο, θα πρέπει στο μέλλον να επιχειρηθεί περαιτέρω διάχυση αυτών των κριτηρίων, προκειμένου να αξιολογηθούν και να αναθεωρηθούν εάν είναι απαραίτητο, με απώτερο στόχο να αποτελέσουν την βάση για τις μελλοντικές συγκριτικές έρευνες στο χώρο.
Από την άλλη πλευρά, όσον αφορά στην πρακτική διαλειτουργικότητα των ευφυών πρακτόρων και των συστημάτων τους, προτάθηκε, στο τέταρτο και έβδομο κεφάλαιο, το σύστημα EMERALD και η διασύνδεση του με ένα άλλο σύστημα (Rule Responder) αλλά και τις υπηρεσίες ιστού.
Η εξέλιξη και επέκταση του συστήματος, των υπηρεσιών και των διασυνδέσεων που προσφέρει είναι ένα σημαντικό ζήτημα που πρέπει να εξεταστεί όχι μόνο με όρους υλοποίησης αλλά κυρίως με όρους επέκτασης τεχνολογίας και
Σε αυτό το πλαίσιο, ιδιαίτερο ενδιαφέρον και χρησιμότητα θα παρουσίαζε η ενσωμάτωση ενός μεγαλύτερου εύρους διακριτών λογικών και μηχανισμών συλλογιστικής και αποδείξεων στο σύστημα EMERALD.
Με αυτό τον τρόπο, όχι μόνο το σύστημα θα είναι περισσότερο ευέλικτο και γενικό αλλά κυρίως θα μελετηθεί η επίδραση κάθε διαθέσιμης λογικής στην αντίληψη και την απόδοση των πρακτόρων που την χρησιμοποιούν.
Προς την ίδια κατεύθυνση, ο σχεδιασμός και η ανάπτυξη μιας σουίτας αμφίδρομων πυλών μεταξύ του συστήματος EMERALD και / ή άλλων πολυπρακτορικών συστημάτων, παρά την δυσκολία του εγχειρήματος, θα ενισχύσει την διαλειτουργικότητα των συστημάτων και την κατανόηση των τεχνολογιών που χρησιμοποιούν.
Η γνώση αυτή θα μπορούσε να αποτελέσει την βάση για την ανάπτυξη μιας νέας γενιάς ευφυών πρακτόρων, όπου το όραμα του Σημασιολογικού Ιστού και, κατ’ επέκταση, των ευφυών πρακτόρων για ευρύτερη, αυτοματοποιημένη επικοινωνία και συνεργασία θα μπορούσε να γίνει πραγματικότητα.
Επιπρόσθετα, σε αυτό το στόχο, μπορούν να συμβάλουν μελλοντικές μελέτες και επεκτάσεις που αφορούν μεθοδολογίες αλληλεπίδρασης και συνεργασίας, όπως αυτές που προτάθηκαν στο πέμπτο κεφάλαιο της παρούσας διατριβής.
Για παράδειγμα, δεδομένου ότι οι πράκτορες χρησιμοποιούν μια ποικιλία φορμαλισμών και λογικών για την αναπαράσταση της γνώσης και της συμπεριφοράς τους είναι όχι μόνο χρήσιμο αλλά και απαραίτητο να σχεδιαστούν και να αναπτυχθούν μηχανισμοί για αυτόματο μετασχηματισμό φορμαλισμών.
Με αυτό τον τρόπο, τόσο οι προτεινόμενες μεθοδολογίες όσο και πιθανόν άλλες αντίστοιχες θα μπορούσαν να χρησιμοποιηθούν από οποιονδήποτε πράκτορα σε οποιαδήποτε εφαρμογή, καθιστώντας την χρήση των ευφυών πρακτόρων εύκολη και επωφελή.
Επιπλέον, είναι απαραίτητο οι μεθοδολογίες αυτές να ενσωματώσουν στις αρχές και την λειτουργία τους την ευρύτερη έννοια της αξιοπιστίας και εμπιστοσύνης στον Σημασιολογικό
Ιστό, καθώς σύμφωνα με το όραμα του οι συναλλαγές μεταξύ εταίρων θα πρέπει να είναι αξιόπιστες και ει δυνατόν καλοπροαίρετες.
Προς αυτή την κατεύθυνση, τα μοντέλα αξιοπιστίας, που προτάθηκαν στο έκτο κεφάλαιο, αποτελούν σημαντική συμβολή και κατεύθυνση έρευνας για περαιτέρω μελέτη της συμπεριφοράς και της αλληλεπίδρασης των ευφυών πρακτόρων στο φυσικό τους περιβάλλον, τα πολυπρακτορικά συστήματα στον Σημασιολογικό Ιστό.
Ειδικότερα, όπως έγινε φανερό και από τα ίδια τα μοντέλα και την εξέλιξη τους, στόχος τους είναι τόσο να αποδίδουν την συμπεριφορά (φήμη) κάθε πράκτορα με όσο το δυνατόν μεγαλύτερη ακρίβεια όσο και να προσαρμόζονται στην λογική και τις ανάγκες των ανθρώπων χρηστών.
Ένα βήμα προς αυτή την κατεύθυνση ήταν και η χρήση της μη-μονότονης αναιρέσιμης λογικής σε κάποια από τα μοντέλα.
Παρόμοιες λογικές και τεχνολογίες που έχουν την ικανότητα να αναπαριστούν ικανοποιητικά την πολύπλοκη ανθρώπινη γνώση και συμπεριφορά θα ήταν χρήσιμο να μελετηθούν στο μέλλον, προκειμένου να επιτρέψουν στους ευφυείς πράκτορες να προσεγγίζουν ολοένα και περισσότερο την φιλοσοφία των χρηστών τους, με απώτερο στόχο την μέγιστη απόδοση και την πλήρη ικανοποίηση των στόχων των χρηστών τους.
Ο απώτερος στόχος της παρούσας διατριβής είναι να αποτελέσει βάση για περαιτέρω εξέλιξη στο χώρο των ευφυών πρακτόρων, καθιστώντας τους εργαλείο στα χέρια κάθε ενδιαφερόμενου ανθρώπου-χρήστη.
Σε αυτό το πλαίσιο, ενδιαφέρον ερευνητικό αντικείμενο αποτελεί η διασύνδεση του επιπέδου των αποδείξεων με αυτό της εμπιστοσύνης, που αποτελεί σημαντικό τομέα έρευνας και ήδη άρχισε να μελετάται στην παρούσα διατριβή αλλά και η διασύνδεση των ευφυών πρακτόρων με πλήθος άλλων τεχνολογιών όπως τα μεταδεδομένα (metadata) και τα συνδεδεμένα δεδομένα (linked data).
Για παράδειγμα, τα μεταδεδομένα μπορούν να ενσωματωθούν στην τεχνολογία των ευφυών πρακτόρων ενισχύοντας τα μοντέλα αξιοπιστίας αλλά και τις μεθοδολογίες πάσης φύσεως διαχείρισης.
Από την άλλη πλευρά, η ανάπτυξη και εδραίωση της μεθόδου των συνδεδεμένων δεδομένων, που αποτελούν μία μέθοδο δημοσιοποίησης δομημένων δεδομένων στο Σημασιολογικό Ιστό έχει καταστήσει αναγκαία την ανάπτυξη μηχανισμών σύνδεσης και χρήσης τους από τους ευφυείς πράκτορες.
Τέλος, ένα ιδιαίτερα ενδιαφέρον περιβάλλον μελέτης και εφαρμογής των αντικειμένων συμβολής της παρούσας διατριβής αποτελεί ο «ιστός των πραγμάτων» (Internet of things IoT), η νέα πρόκληση στον χώρο της τεχνολογίας, που αναμένεται να αλλάξει ριζικά τις δυνατότητες μεταφοράς δεδομένων και, επομένως, τις συνήθειες των ανθρώπων.
Στόχος του ιστού των πραγμάτων είναι τα δεδομένα να μεταφέρονται αυτόματα από συσκευές οποιασδήποτε χρήσης προς κέντρα δεδομένων και το αντίστροφο, σε πραγματικό χρόνο και χωρίς ανθρώπινη παρέμβαση.
Επομένως, η χρήση της τεχνολογίας των ευφυών πρακτόρων για την επίτευξη των στόχων και των προκλήσεων του ιστού των πραγμάτων έχει ήδη αρχίσει να διαφαίνεται.
Πρακτικά, οι ευφυείς πράκτορες είναι σε θέση να καλύψουν τις ανάγκες για αυτονομία και αποτελεσματική δράση, ωστόσο απαιτείται μελέτη και χρήση πεδίων, όπως αυτών της συλλογιστικής, της αξιοπιστίας και της διασύνδεσης συστημάτων που μελετήθηκαν στην παρούσα διατριβή.
Η POSL (positional-slotted language) [Boley, 2004] είναι μια γλώσσα για την αναπαράσταση γνώσης (κανόνες και γεγονότα) στον Σημασιολογικό Ιστό, που ενσωματώνει στοιχεία από τη θεσιακή (positional) σύνταξη της Prolog και τη σύνταξη της F-logic που βασίζεται στις ιδιότητες (slotted).
Η POSL έχει σχεδιαστεί κυρίως για τους ανθρώπους-χρήστες, καθώς είναι πιο εύκολα κατανοητή και πιο γρήγορα συντάξιμη από οποιοδήποτε λεξιλόγιο κανόνων εκφρασμένο σε XML.
Οι μεταβλητές στην POSL συμβολίζονται με "?" πριν το όνομα της μεταβλητής.
Περισσότερες λεπτομέρειες σχετικά με την πλήρη σύνταξη της POSL, τις μεθόδους ενοποίησής (unification) της, τη διαδικασία εισαγωγής URIs σαν μέρος της ονοματολογίας των παραμέτρων, ώστε να γίνουν οι βάσεις γνώσης κατανεμημένες στον Παγκόσμιο Ιστό, καθώς και άλλες λεπτομέρειες σχετικά με τη γλώσσα μπορεί ο ενδιαφερόμενος αναγνώστης να βρει στην εργασία [Boley, 2004].
Η d-POSL αποτελεί μια επέκταση της POSL[Kontopoulos et al, 2011] για την αναπαράσταση γνώσης αναιρέσιμης λογικής.
H d-POSL διατηρεί όλα τα κύρια συντακτικά στοιχεία της POSL, επεκτείνοντάς την με απαραίτητα συστατικά για την έκφραση γνώσης αναιρέσιμης λογικής.
Ακολούθως παρατίθενται οι επεκτάσεις της γλώσσας:  Τύπος Κανόνα: Όπως συμβαίνει και στην d-Prolog [Covington et al., 1997], εισάγονται τελεστές (":-",":=",":") που υποδηλώνουν τον τύπο του κανόνα (αυστηρός, αναιρέσιμος, αναιρέτης, αντίστοιχα).  Ετικέτα Κανόνα: Στην d-POSL ενσωματώνεται μηχανισμός προσθήκης ετικετών των κανόνων, προκειμένου να δίδεται η δυνατότητα έκφρασης σχέσεων ανωτερότητας ανάμεσα στους κανόνες.  Αλληλοσυγκρουόμενα Λεκτικά: Τα αλληλοσυγκρουόμενα λεκτικά στην POSL αναπαρίστανται σαν ακέφαλοι κανόνες (ουσιαστικά πρόκειται για περιορισμούς ακεραιότητας), των οποίων τα σώματα αποτελούνται από ζεύγη αλληλοσυγκρουόμενων λεκτικών μαζί με τις συνθήκες ανάμεσα στα αντίστοιχα ορίσματα, βάσει των οποίων διασφαλίζεται, ότι τα εν λόγω λεκτικά δεν είναι ενοποιήσιμα (unifiable).
Παράδειγμα (βλ.
Παράρτημα Β), := predicate(?x), predicate(?y), ?x\=?y.  Άρνηση και Άρνηση-σαν-αποτυχία: Στην αναιρέσιμη λογική χρειάζονται και τα δύο είδη άρνησης, οπότε η d-POSL αναπαριστά την κλασική άρνηση με /NOT και την άρνηση-σαν-αποτυχία με /NAF.
Οι προδιαγραφές της γραμματικής της γλώσσας d-POSL παρατίθενται στην συνέχεια σε εκτεταμένη μορφή Backus-Naur (EBNF). (* μία βάση κανόνων περιέχει γεγονότα, κανόνες, σχέσεις ανωτερότητας και αλληλοσυ(* ορισμός των γεγονότων *) (*ορισμός των κανόνων *) (*ορισμός της σχέσης ανωτερότητας *) (*ορισμός των αλληλοσυγκρουόμενων λεκτικών *)
Παράρτημα Β – Κανόνες Περίπτωσης Μεσιτείας Το παράρτημα περιλαμβάνει τους κανόνες όλων των εμπλεκόμενων μερών για την περίπτωση της μεσιτείας, όπως αυτή παρουσιάστηκε, αναλυτικά, στο τέταρτο κεφάλαιο της διατριβής.
Πιο συγκεκριμένα, παρουσιάζονται το σχήμα των διαμερισμάτων (Apartment Schema) που κατέχει ο μεσίτης (Broker), η «κρυφή» του ατζέντα, καθώς και οι απαιτήσεις και προτιμήσεις του εν δυνάμει ενοικιαστή Carlo.
Μεσίτης Σχήμα διαμερισμάτων (Apartment Schema) Το RDF Schema αρχείο για τα διαμερίσματα του μεσίτη και τις προτάσεις
Carlo Απαιτήσεις (Requirements) Οι απαιτήσεις του εν δυνάμει ενοικιαστή Carlo σε d-POSL συντακτικό.
Συγκεκριμένα, oι κανόνες r1 έως r6 εκφράζουν τις απαιτήσεις του Carlo σχετικά με τις προδιαγραφές του διαμερίσματος.
Οι κανόνες r7 και r8 υποδεικνύουν την προσφορά που είναι πρόθυμος να προσφέρει ο Carlo για ένα διαμέρισμα που ταιριάζει στις ανάγκες του ενώ ο κανόνας r9 διασφαλίζει ότι το ποσό που προσφέρεται από τον πελάτη δεν θα είναι υψηλότερο από την πραγματική τιμή ενοικίασης του διαμερίσματος.
Τέλος, ο κανόνας info-copy αποθηκεύει τα χαρακτηριστικά των κατάλληλων διαμερίσματα που παρουσιάζουν ενδιαφέρον για τον Carlo, έτσι ώστε να μπορεί αργότερα να αναφερθεί
Μεσίτης Κρυφή ατζέντα (Hidden agenda) Η κρυφή ατζέντα του μεσίτη σε d-POSL συντακτικό.
Συγκεκριμένα, ο μεσίτης δεν προτείνει στον Carlo όλα τα κατάλληλα διαμερίσματα, αλλά μόνο ένα υποσύνολο από αυτά, ακολουθώντας την κρυφή του ατζέντα.
Οι δύο κανόνες που απεικονίζονται παρακάνω είναι ένα παράδειγμα: ο μεσίτης προτείνει στον πελάτη είτε το μεγαλύτερο από τα κατάλληλα κεντρικά διαμερίσματα είτε το διαμέρισμα με το μεγαλύτερο μέγεθος κήπου εκτός κέντρου.
Φυσικά, η κρυφή ατζέντα του μεσίτη θα μπορούσε ενδεχομένως να αποτελείται από περισσότερους και πιθανώς πιο ειδικούς κανόνες.
Carlo Προτιμήσεις (Preferences) Οι προτιμήσεις του εν δυνάμει ενοικιαστή Carlo σε d-POSL συντακτικό.
Συγκεκριμένα, θα επιλέξει μεταξύ των διαμερισμάτων που του πρότεινε ο μεσίτης και, ειδικότερα, μεταξύ αυτών που είναι συμβατά με τις δικές του προτιμήσεις.
Παράρτημα Γ – API Υπηρεσιών Καταλόγου EMERALD Το παράρτημα περιλαμβάνει την διεπαφή προγραμματισμού εφαρμογών (API) που αφορά στις παρεχόμενες προηγμένες υπηρεσίες καταλόγου του συστήματος EMERALD, όπως αυτές περιγράφονται αναλυτικά στο τέταρτο κεφάλαιο της διατριβής (ενότητες 4.3 και 4.5).
Συγκεκριμένα, η διεπαφή ονομάζεται DatabaseOperations και περιέχει τις δεκαπέντε απαραίτητες συναρτήσεις για την επικοινωνία των πρακτόρων του συστήματος με τον πράκτορα διαχειριστή των υπηρεσιών και την λήψη των κατάλληλων, κάθε φορά, αποτελεσμάτων. 1η περίπτωση αιτήματος: Ελέγχει εάν ένα αίτημα είναι σε μορφή Jess γεγονότος ή όχι.
Εάν είναι, τότε η απάντηση θα είναι επίσης γραμμένη στο συντακτικό της γλώσσας Jess. 2η περίπτωση αιτήματος: Η συνάρτηση είναι υπεύθυνη για αιτήματα απλού κειμένου. 3η περίπτωση αιτήματος: Η συνάρτηση είναι υπεύθυνη για αιτήματα που είναι γραμμένα σε μια μορφή παρόμοια με αυτή των συναρτήσεων, δηλαδή αφορά περιπτώσεις όπου το αίτημα περιέχει μια άμεση κλήση συνάρτησης, όπως ακριβώς γίνεται σε ένα πρόγραμμα.
Η συνάρτηση δέχεται ως όρισμα το όνομα, τον τύπο ή τον χρόνο και επιστρέφει, αντίστοιχα, ένα διάνυσμα που περιέχει τους πράκτορες ομαδοποιημένους, αλφαβητικά, σύμφωνα με το όνομά τους, τον τύπο τους ή τον χρόνο καταχώρησης τους στο σύστημα ξεκινώντας από τους
Η συνάρτηση έχει δύο ορίσματα, έναν συντελεστή (<,> ή =) και ένα χρονικό σημείο στην μορφή HH:MM:SS.
Για παράδειγμα, παρέχοντας «>» και «23:50:45», θα επιστρέψει ένα διάνυσμα που περιέχει τους πράκτορες που καταχωρήθηκαν στο σύστημα μετά από αυτή την ώρα (23:50:45).
Η συνάρτηση έχει μόνο ένα όρισμα, το όνομα του πράκτορα και επιστρέφει τα χαρακτηριστικά του, δηλαδή το καθολικό του όνομα, τον χρόνο καταχώρησης του, των αριθμό των φορών που χρησιμοποίησε κάθε μοντέλο αξιοπιστίας και πότε ήταν η τελευταία φορά που το έκανε.
Η συνάρτηση έχει ένα όρισμα, μόνο μια λέξη.
Κάνει όλες τις απαραίτητες εσωτερικές ενέργειες και, τέλος, παρέχει ένα διάνυσμα που περιέχει τα συνώνυμα της λέξης σε αλφαβητική σειρά, βοηθώντας έτσι τον αιτούντα πράκτορα να αντιληφθεί ποιες είναι οι παρόμοιες υπηρεσίες που μπορεί στην συνέχεια να αναζητήσει.
Η συνάρτηση έχει επίσης ένα όρισμα (μια λέξη) και επιτρέπει την καταχώρηση του στην βάση
Η συνάρτηση έχει δύο ορίσματα, πρώτα την αποθηκευμένη τιμή και στην συνέχεια την νέα τιμή, επιτρέποντας την τροποποίηση της λίστας των συνωνύμων.
Η συνάρτηση διαγράφει την τιμή (όρισμα) από την βάση δεδομένων.
Η συνάρτηση προσθέτει ένα συνώνυμο (2ο όρισμα) στην επιλεγμένη τιμή (1ο όρισμα).
Η συνάρτηση έχει τρία ορίσματα, πρώτα την λέξη που το συνώνυμο της πρέπει να ενημερωθεί, έπειτα το συνώνυμο που θα πρέπει να ενημερωθεί και, τέλος, την νέα τιμή.
Η συνάρτηση δέχεται την λέξη που το συνώνυμο της πρέπει να διαγραφεί και το ίδιο το συνώνυμο και διαγράφει αυτήν το συνώνυμο από την βάση δεδομένων.
Η συνάρτηση αναφέρεται στις αναζητήσεις.
Το πρώτο όρισμα αφορά το πλαίσιο της αναζήτησης, δηλαδή εάν η αναζήτηση πρέπει να βασίζεται στον τύπο ή το όνομα.
Το δεύτερο όρισμα αφορά τον τύπο της αναζήτησης, δηλαδή εάν πρόκειται για μερική ή ακριβής αναζήτηση.
Το τελευταίο όρισμα είναι η τιμή που αναζητείται.
Τέλος, επιστρέφονται όλα τα διαθέσιμα κατάλ-
Η συνάρτηση αυτή δέχεται ως όρισμα το διάνυσμα που περιέχει τα αποτελέσματα, που προκύπτουν από τις προηγούμενες συναρτήσεις και, αφού προετοιμάσει το απαντητικό μήνυμα το αποστέλλει στον αιτούνται πράκτορα.
Παράρτημα Δ – Κανόνες Περιπτώσεων Χρήσης μεθοδολογίας
Το παράρτημα περιλαμβάνει παραδείγματα κανόνων στο συντακτικό της Reaction RuleML και της Jess, που αφορούν στην χρήση της μεθοδολογίας K-SWAN σε μια περίπτωση διαπραγμάτευσης (CNET πρωτόκολλο) και μια περίπτωση μεσιτείας (πρωτόκολλο Brokering) από πράκτορες που δρουν στο σύστημα EMERALD.
Ειδικότερα, για την στρατηγική των πρακτόρων χρησιμοποιούνται παραγωγικοί κανόνες της γλώσσας Reaction RuleML ενώ για το πρωτόκολλο χρησιμοποιούνται αναδραστικοί κανόνες.
Για παράδειγμα, ένας αναδραστικός κανόνας ενός συμμετέχοντα στην διαπραγμάτευση, όπου όταν λάβει ένα CFP μήνυμα, το αποθηκεύει ως γεγονός στην εσωτερική βάση γνώσης του, παρατίθεται, στην συνέχεια, για λόγους σύγκρισης στο συντακτικό των Jess και RuleML.
Ακόμη, παρατίθεται ένας παραγωγικός κανόνας, όπου ένας συμμετέχοντας στην διαπραγμάτευση αποφασίζει να συμμετάσχει σε αυτή, εάν το ζητηθέν προϊόν είναι διαθέσιμο στην εσωτερική βάση γνώσης του.
Αντίστοιχα, παρατίθεται ένας αναδραστικός κανόνας πρωτοκόλλου (σε Jess και RuleML συντακτικό), που χρησιμοποιείται στην περίπτωση της μεσιτείας από τον μεσίτη για να λάβει (proxy) αιτήματα και να τα αποθηκεύσει, προκειμένου να τα προωθήσει αργότερα.
Διαπραγμάτευση Κανόνας receive-cfp(Jess) Ένας συμμετέχων λαμβάνει CFP μήνυμα
Διαπραγμάτευση Κανόνας receive-cfp(RuleML)
Διαπραγμάτευση Κανόνας check-cfp1 (Jess) Ένας συμμετέχων αξιολογεί την πρόσκληση και προτείνει
Διαπραγμάτευση: Πρότυπο KC-Agents/K-SWAN (API): callforp και send Από τα παραδείγματα, είναι φανερό πως οι κανόνες αλληλεπιδρούν μέσω ενός προκαθορισμένου προτύπου γεγονότων που παίζουν το ρόλο του API (callforp και send) ενώ το κατηγόρημα state υποδεικνύει το τρέχον πρωτόκολλο ή το στάδιο της στρατηγικής. όπου state(start)FpST, state(check)FsST, ACLMsg Fm, CallforpFCM, sendFAPI και prod-
Μεσιτεία Κανόνας receive-proxy-request (Jess) Ο μεσίτης λαμβάνει (proxy) αίτημα.
Μεσιτεία Κανόνας receive-proxy-request (RuleML)
Μεσιτεία: Πρότυπο KC-Agents/K-SWAN (API): receive_proxy όπου state(start)FpST, state(decide_proxy)FsST, ACLMsgFm, και receive_proxyFCM.
Παράρτημα Ε – Κατάλογος Δημοσιεύσεων Στο πλαίσιο εκπόνησης της παρούσας διατριβής, μέρος των ερευνητικών της αποτελεσμάτων δημοσιεύτηκε σε ερευνητικές εργασίες επιστημονικών περιοδικών, συνεδρίων και κεφαλαίων σε βιβλία, όπως παρατίθενται στην συνέχεια.
Κεφάλαια σε συλλογικούς τόμους
Υποβληθείσες Εργασίες σε Περιοδικά ligent.