Ψηφιακά Kυκλώματα
Ψηφιακά Κυκλώματα
Τομέας Αρχιτεκτονικής Η/Υ & Βιομηχανικών Εφαρμογών
Αναστάσιος Μπαλουκτσής
Συστήματα αριθμών
Δεκαδικό σύστημα
Παράδειγμα
Δυαδικό σύστημα
Στο δυαδικό σύστημα, που έχει βάση το 2, υπάρχουν δύο ψηφία, το 0 και το 1:
Γενικά ένας δυαδικός αριθμός με n ψηφία μπορεί να παραστήσει ένα εύρος από 2n δεκαδικούς αριθμούς
2 ψηφία (0_3), 5 ψηφία (0_31), 8 ψηφία (0_255)
Μετατροπή δεκαδικού σε δυαδικό
Μετατροπή ενός ακέραιου δεκαδικού σε δυαδικό:
χρησιμοποιείται η διαδικασία της διαδοχικής διαίρεσης
Παράδειγμα:
Μετατροπή του 1910 στον αντίστοιχο δυαδικό
19/2= πηλίκο 9 και υπόλοιπο 1 άρα b0=1
9/2= πηλίκο 4 και υπόλοιπο 1 άρα b1=1
4/2= πηλίκο 2 και υπόλοιπο 0 άρα b2=0
2/2= πηλίκο 1 και υπόλοιπο 0 άρα b3=0
1/2= πηλίκο 0 και υπόλοιπο 1 άρα b4=1
Β2=10011=1910
Μετατροπή του κλασματικού μέρους ενός δεκαδικού αριθμού στον αντίστοιχο δυαδικό:
χρησιμοποιείται η διαδικασία των διαδοχικών πολλαπλασιασμών.
Επαναλαμβάνεται η διαδικασία μέχρι να προκύψει κλασματικό μέρος μηδέν ή να επιτευχθεί η επιθυμητή ακρίβεια.
Μετατροπή του 0,375 στον αντίστοιχο δυαδικό
0,375 x 2 = 0,75, ακέραιο μέρος 0, κλασματικό 0,75 b-1=0
0,75 x 2 = 1,5, ακέραιο μέρος 1, κλασματικό 0,5 b-2=1
0,5 x 2 = 1,0, ακέραιο μέρος 1, κλασματικό 0 b-2=1
Β2= : ,0112
Μετατροπή του 28,375 στον αντίστοιχο δυαδικό
Απάντηση: Β2= : 11100,0112
Βασικές λογικές πράξεις – λογικές πύλες
Μία λογική πράξη μεταξύ μεταβλητών είναι μία συνάρτηση που ορίζεται από έναν πίνακα αληθείας (truth table). Το ηλεκτρικό κύκλωμα που εκτελεί μία λογική πράξη ονομάζεται λογική ή ψηφιακή πύλη και παριστάνεται από ένα σύμβολο.
Τα δυαδικά ψηφία 1 και 0, που ουσιαστικά παριστάνουν τις δύο καταστάσεις αληθής (true), ψευδής (false), στη φυσική τους υπόσταση είναι δυο διακριτά επίπεδα ηλεκτρικής τάσης (συνήθως στην ιδανική περίπτωση 5V και 0V).
Πύλη OR
H έξοδος είναι αληθής (true) (1), εάν μια από τις εισόδους ή και οι δυο είναι αληθείς (1)
Πύλη AND
H έξοδος είναι αληθής (1), όταν και οι δυο είσοδοι είναι αληθείς (1)
Πύλη NOT (Αντιστροφέας)
Δημιουργεί αντιστροφή του σήματος εισόδου
Πύλη NAND (ΝΟΤ AND)
Η έξοδος είναι ψευδής (0) μόνο όταν Α και Β είναι αληθείς (1)
Πύλη NOR (NOT OR)
H έξοδος είναι αληθής (1), όταν και οι δύο είσοδοι είναι ψευδείς (0)
Πύλη XOR
H έξοδος είναι αληθής (1), όταν ή μία εκ των δύο εισόδων είναι αληθής (1), αλλά όχι και οι δύο ταυτόχρονα
Πύλη XNOR (NOT XOR)
H έξοδος είναι αληθής (1) όταν και οι δυο είσοδοι είναι ψευδείς (0), ή και οι δυο είναι αληθείς (1)
ΣΥΝΟΠΤΙΚΟΣ ΠΙΝΑΚΑΣ ΛΟΓΙΚΩΝ ΠΥΛΩΝ
Δυνατοί πίνακες αληθείας στο δυαδικό σύστημα
Ένας πίνακας αληθείας παριστάνει τη συνάρτηση μεταξύ των εισόδων και της εξόδου ενός λογικού συστήματος.
Για δυο εισόδους υπάρχουν τέσσερις πιθανοί συνδυασμοί πραγματικών τιμών:
Επειδή κάθε δυνατή είσοδος μπορεί να δώσει δύο διαφορετικές εξόδους (F, T) συνεπάγεται ότι οι δυνατοί πίνακες αληθείας για ένα λογικό σύστημα δύο εισόδων είναι:
Άλλοι τρόποι δυαδικής κωδικοποίησης
Εκτός από την κανονική δυαδική κωδικο-ποίηση υπάρχουν κι΄ άλλοι τρόποι δυαδικής κωδικοποίησης οι οποίοι χρησιμοποιούνται σε διάφορες περιπτώσεις:
Κωδικοποίηση BCD (Binary Coded Decimal)
Η κωδικοποίηση καθιστά δυνατή την απλή μετατροπή μεταξύ δυαδικού και δεκαδικού αριθμού.
Κάθε ψηφίο ενός δεκαδικού αριθ-μού αντικαθίσταται από 4 bits του αντίστοι-χου δυαδικού του
Μετατροπή του 4510 σε BCD
Μετατροπή από BCD σε δεκαδικό
Η δυαδική λέξη χωρίζεται σε ομάδες των 4bits ξεκινώντας από το λιγότερο σημαντικό ψηφίο.
Κατόπιν η κάθε ομάδα μετατρέπεται στον αντίστοιχο δεκαδικό
Μετατροπή 1010011BCD σε δεκαδικό
Πρόσθεση μηδενικού . Χωρισμός σε ομάδες των 4.
Mετατροπή της κάθε
ομάδας στον αντίστοιχο δεκαδικό
Κώδικας Gray
Συχνά χρησιμοποιείται σε ηλεκτρονικά κυκλώματα για την αποφυγή προβλημάτων που θα μπορούσαν να προκύψουν εάν χρη-σιμοποιούνταν η απευθείας δυαδική κωδικο-ποίηση. Για παράδειγμα, σε μετρήσεις της θέσης ενός αντικειμένου, θα μπορούσε να φαίνεται ότι γειτονικές θέσεις του αντικειμένου διαφέρουν περισσότερο από ένα bit, εάν χρησιμοποιηθεί η απευθείας δυαδική κωδι-κοποίηση.
Κώδικες με ανίχνευση σφάλματος
Στα ψηφιακά συστήματα, υπάρχουν περιπτώσεις όπου κατά την παραγωγή δεδομένων και την επεξεργασία αυτών, εμφανίζονται σφάλματα.
Για παράδειγμα κάποιο ψηφίο 1, ενός συνόλου δυαδικών ψηφίων, μπορεί να μετατραπεί σε ψηφίο 0, είτε κατά το στάδιο της μετάδοσης, είτε γιατί το ψηφιακό σύστημα δεν λειτούργησε σωστά.
Μία απλή μέθοδος, ανίχνευσης του σφάλματος, είναι η χρήση του κώδικα ανίχνευσης λάθους, η οποία χρησιμοποιεί ένα επιπλέον ψηφίο ισοτιμίας (parity bit).
Κώδικες ισοτιμίας
Δυο είδη {
άρτια ισοτιμία
περιττή ισοτιμία
Κώδικας περιττής ισοτιμίας
Το ψηφίο ισοτιμίας είναι 0 αν το σύνολο των ψηφίων, 1, είναι περιττό.
Το ψηφίο ισοτιμίας είναι 1 αν το σύνολο των ψηφίων, 1, είναι άρτιο.
Για παράδειγμα η δυαδική λέξη 010001 έχει αριθμό ψηφίων ‘1’ άρτιο, συνεπώς θα μεταδοθεί με ψηφίο ισοτιμίας ‘1’, είτε: 1 | 010001
Κώδικας άρτιας ισοτιμίας
Αντίστροφος της περιττής ισοτιμίας.
Το ψηφίο ισοτιμίας είναι 1 αν το σύνολο των ‘1’ είναι περιττό.
Το ψηφίο ισοτιμίας είναι 0 αν το σύνολο των ‘1’ είναι άρτιο
Για παράδειγμα η δυαδική λέξη 10110 έχει αριθμό ψηφίων ‘1’ περιττό, συνεπώς θα μεταδοθεί με ψηφίο ισοτιμίας ‘1’, είτε: 1 | 10110
Άλγεβρα Boole
Οι αρχές της λογικής αναπτύχθηκαν από τον George Boole (1815-1884) και τον Augustus De Morgan.
Εκατό χρόνια αργότερα ο Claude Shannon (ως μεταπτυχιακός φοιτητής στο MIT) έδειξε ότι η άλγεβρα Boole ήταν σχετική με την ανάλυση διακοπτικών (switching) κυκλωμάτων.
Η άλγεβρα Boole αποτελεί τη μαθηματική βάση για την ηλεκτρονική επεξεργασία της δυαδικής πληροφορίας.
Ιδιότητες και κανόνες της άλγεβρας Boole
Λογικές πράξεις με σταθερές.
Λογικές πράξεις με μια μεταβλητή.
Λογικές πράξεις με δυο ή περισσότερες μεταβλητές.
Λογικές πράξεις με σταθερές
Λογικές πράξεις με μια μεταβλητή
Να αποδειχθούν οι σχέσεις:
Χρησιμοποιώντας πίνακα αληθείας
Λογικές πράξεις-ιδιότητες με δυο ή περισσότερες μεταβλητές
Αντιμεταθετική ιδιότητα
Απορροφητική ιδιότητα
Προσεταιριστική ιδιότητα
Επιμεριστική ιδιότητα
Κανόνες De Morgan
Κανόνας ελαχιστοποίησης
Να αποδειχθεί ότι:
Απάντηση:
χρήση του πίνακα αληθείας
Τα θεωρήματα De Morgan είναι πιο σημαντικά στην λογική σχεδίαση όπου συσχετίζονται AND και NOR πύλες, ή OR και NAND πύλες
Για παράδειγμα χρησιμοποιούμε τα θεωρήματα De Morgan για να σχεδιάσουμε ένα συνδυασμό πυλών NAND που είναι ισοδύναμος με μια πύλη OR δύο εισόδων
Για μία πύλη OR ισχύει:
επίσης
Διαδικασία σχεδίασης ψηφιακής λογικής συνάρτησης
Με τον όρο σχεδιασμός ψηφιακής λογικής συνάρτησης, εννοείται ένας συνδυασμός λογικών πυλών για την πραγματοποίηση της επιθυμητής συνάρτησης, η συμπεριφοράς.
Η διαδικασία σχεδίασης περιλαμβάνει τα παρακάτω βήματα:
Σαφής διατύπωση της επιθυμητής συνάρτησης-συμπεριφοράς
Πίνακας αληθείας
Έκφραση της συνάρτησης υπό μορφή μεταβλητών (άλγεβρα Boole)
Κατάλληλη επεξεργασία της συνάρτησης για την εξαγωγή μιας απλούστερης μορφής
Υλοποίηση του ψηφιακού κυκλώματος με πύλες ΑND, OR και ΝΟΤ.
Σε πολλές περιπτώσεις η υλοποίηση του κυκλώματος μπορεί να γίνει μόνο με πύλες NAND, η μόνο με πύλες NOR.
Κανονικές μορφές λογικών συναρτήσεων
Κανονική μορφή αθροίσματος
Δημιουργείται από τον πίνακα αληθείας και είναι το λογικό άθροισμα (δηλαδή συνδυάζονται υπό μορφή OR) όρων που είναι εκφράσεις AND των μεταβλητών εισόδου στην κανονική, ή συμπληρωματική τους μορφή ανάλογα με την τιμή που έχουν (1 ή 0). Οι όροι που συμπεριλαμβάνονται στο λογικό άθροισμα είναι οι όροι για τους οποίους η τελική συνάρτηση έχει τιμή 1
Σύντομη γραφή για την κανονική μορφή αθροίσματος
Δίνεται η λογική συνάρτηση:
Να γίνει ο πίνακας αληθείας, να γραφεί η κανονική μορφή αθροίσματος, να απλοποιηθεί η σχέση χρησιμοποιώντας την άλγεβρα Boole και να σχεδιαστεί το ψηφιακό κύκλωμα που την υλοποιεί.
Λύση:
Απλοποίηση
Ψηφιακό κύκλωμα
Ημιαθροιστής
Κανονική μορφή γινομένου
Αυτή είναι μια εναλλακτική μορφή υλοποίησης της πρώτης μορφής.
Οι όροι είναι αθροίσματα (δηλαδή τύπου OR) και πολλαπλασιάζονται μεταξύ τους προκειμένου να σχηματίσουν την έξοδο.
Η κατανόηση της διατύπωσης του κανόνα που θα χρησιμοποιούμε στο σχηματισμό της κανονικής μορφής γινομένου γίνεται με το παρακάτω παράδειγμα:
Συνεπώς η κανονική μορφή γινομένου μπορεί να αποκτηθεί κατευθείαν από τον πίνακα αληθείας χωρίς τη χρήση κάποιων πράξεων ως εξής:
Εντοπίζονται οι όροι που δίνουν F=0.
Δημιουργούνται τα αθροίσματα των μεταβλητών, όπου εάν η μεταβλητή έχει τιμή 0 γράφεται στην κανονική της μορφή, ενώ εάν έχει τιμή 1, γράφεται στην αντίστροφη μορφή της.
Λαμβάνεται το γινόμενο των παραπάνω αθροισμάτων.
Σύντομη γραφή για την κανονική μορφή γινομένου
Στην περίπτωση αυτή η κανονική μορφή των μεταβλητών παριστάνει το 0, ενώ η αντίστροφη το 1.
Συνεπώς αντικαθιστώντας τις μεταβλητές με τη δυαδική τους μορφή, χρησιμοποιώντας το παραπάνω παράδειγμα, προκύπτει:
Να γράψετε τις δύο κανονικές μορφές της συνάρτησης XOR
Λύση
Ο πίνακας αληθείας για τη πύλη XOR είναι:
Για την κανονική μορφή αθροίσματος παίρνουμε τους όρους για F=1:
Για τη κανονική μορφή γινομένου παίρνουμε τους όρους για F=0:
Ισχύει:
Σύνθεση ψηφιακού κυκλώματος
Κατ’ αρχήν απλοποιείται η λογική συνάρτηση, η οποία πρόκειται να υλοποιηθεί.
Κατόπιν σχεδιάζεται το ψηφιακό κύκλωμα που αντιστοιχεί στη λογική συνάρτηση ξεκινώντας από την έξοδο του κυκλώματος και πηγαίνοντας προς την είσοδό του.
Να σχεδιαστεί το ψηφιακό κύκλωμα που υλοποιεί τον πίνακα αληθείας:
Ψηφιακό κύκλωμα χωρίς απλοποίηση
Απλοποίηση της λογικής συνάρτησης:
Σύνθεση ψηφιακών κυκλωμάτων με πύλες NAND
Επειδή τα τρανζίστορ είναι ουσιαστικά αντιστροφείς, οι πύλες NAND αποτελούν δομικά στοιχεία των ολοκηρωµένων κυκλωμάτων τεχνολογίας DTL & TTL, τα βήματα που χρησιμοποιούνται για τη σχεδίαση ενός κυκλώματος αποκλειστικά με πύλες NAND είναι τα εξής:
Χρησιμοποιείται ο πίνακας αληθείας για να εκφρασθεί η λογική συνάρτηση υπό μορφή αθροίσματος γινομένων:
( P είναι το γινόμενο των μεταβλητών εισόδου σε μια γραμμή στην οποία η έξοδος είναι 1)
Στο γινόμενο που αντιστοιχεί σε μια δεδομένη γραμμή, οι μεταβλητές των οποίων οι τιμές είναι 0, λαμβάνονται με την αντίστροφή μορφή τους (δηλαδή εάν η μεταβλητή Α σε κάποιον όρο έχει τιμή 0, στο γινόμενο θα εμφανιστεί ως
Χρησιμοποιώντας το θεώρημα του De Morgan γράφεται η σχέση υπό τη μορφή:
Συνθέτουμε το κύκλωμα με πύλες NAND
Η συνάρτηση F=ABC+ABD να υλοποιηθεί με πύλες NAND:
Αντικατάσταση πυλών με πύλες NAND
Οι πύλες AND, OR και NOT μπορούν να εξαχθούν από πύλες NAND.
Σύνθεση ψηφιακών κυκλωμάτων με πύλες ΝΟR
Η σύνθεση των ψηφιακών κυκλωμάτων μόνο με πύλες NOR γίνεται με παρόμοιο τρόπο όπως με τις πύλες NAND, μόνο που σ’ αυτή την περίπτωση χρησιμοποιείται η κανονική μορφή γινομένου.
Αντικατάσταση πυλών με πύλες NOR
Η λογική NOR είναι η δυαδική της λογικής NAND.
Οι πύλες AND, ΟR και NOT μπορούν να δημιουργηθούν με πύλες NOR ως εξής:
Ελαχιστοποίηση λογικών συναρτήσεων με τη χρήση των πινάκων Karnaugh
Στο σχεδιασμό λογικών κυκλωμάτων επιζητείται το βέλτιστο, προκειμένου να υλοποιηθεί μια συγκεκριμένη λογική συνάρτηση.
Κριτήρια του βέλτιστου μπορεί να είναι
• η ταχύτητα (λιγότερα λογικά επίπεδα)
• το κόστος (λιγότερες λογικές πύλες)
Ήδη έχει επιδειχθεί ο τρόπος ελαχιστοποίησης με τη χρήση της άλγεβρας Boole.
Εναλλακτικά μπορούν να χρησιμοποιηθούν οι πίνακες Karnaugh, εάν η συνάρτηση είναι γραμμένη με μια από τις δυο κανονικές μορφές.
Πίνακες Karnaugh
Αν θεωρηθεί μια συνάρτηση τριών μεταβλητών ABC, τότε η συνάρτηση μπορεί να απεικονισθεί στον πίνακα Karnaugh με τον εξής τρόπο:
Παρατηρήσεις:
• Κάθε τετράγωνο αντιστοιχεί σ’ έναν από τους οκτώ (8) δυνατούς συνδυασμούς των τριών μεταβλητών.
• Τα τετράγωνα του πίνακα είναι κατά αυτόν τον τρόπο διατεταγμένα ώστε σε γειτονικά τετράγωνα να αλλάζει μόνο μια μεταβλητή (κώδικας Gray).
Για κάθε ζεύγος τετραγώνων γίνεται η παρακάτω απλοποίηση:
• Τέσσερα (4) γειτονικά τετράγωνα δημιουργούν έναν όρο με δυο μεταβλητές λιγότερες.
• Ομάδες των τριών τετραγώνων πρέπει να χωρίζονται σε ομάδες των δυο.
Να γίνει πίνακας-Κ για τη συνάρτηση F = Σ (1,2,5,6)
Σημείωση: Ο αριθμός των μεταβλητών είναι ίσος με από τον εκθέτη του 2 για τον οποίο η δύναμη του 2 μας δίνει αριθμό μεγαλύτερο ή ίσο με το μέγιστο αριθμό που έχουμε στη συνάρτηση.
Συνεπώς στο παράδειγμα , άρα 3 μεταβλητές.
Να γίνει ο πίνακας-Κ για τη συνάρτηση F = Σ (0,2,4,9,11), καθώς επίσης απλοποίηση αυτής
Να βρεθεί η ελαχιστοποιημένη μορφή αθροίσματος και η ελαχιστοποιημένη μορφή γινομένου της συνάρτησης F = Σ (3,4,5,6,7,8,10,12,14)
Να ελαχιστοποιηθεί η συνάρτηση
Ύπαρξη αδιάφορων περιπτώσεων
Σε λογικά κυκλώματα υπάρχουν πολλές φορές ορισμένοι συνδυασμοί των μεταβλητών εισόδου που μας είναι αδιάφοροι.
Για παράδειγμα έστω ότι έχουμε ένα ηλεκτρονικό ψηφιακό κύκλωμα που θέτει εκτός ένα σήμα (alarm), εάν στην είσοδο του έχει τους αριθμούς 0,4,6,8,9. Εάν έχει σχεδιαστεί κατά τέτοιον τρόπο ώστε να δέχεται αριθμούς μόνο από το 0 έως το 9 να α) προσδιοριστεί το πρόβλημα υπό μορφή πίνακα β) βρεθεί η ελαχιστοποιημένη συνάρτηση με τη χρήση του πίνακα-Κ.
Εάν κατά την απλοποίηση δεν ληφθούν υπόψη οι αδιάφορες περιπτώσεις προκύπτει η σχέση:
Λαμβάνοντας υπόψη και τις αδιάφορες περιπτώσεις η σχέση στην οποία καταλήγουμε είναι απλούστερη:
Πλήρης Αθροιστής
Κατ’ αρχήν εξετάζεται ο ημιαθροιστής δημιουργώντας το ψηφιακό του κύκλωμα χρησιμοποιώντας την κανονική μορφή γινομένου:
Ο πλήρης αθροιστής έχει τον παρακάτω πίνακα αληθείας:
Το κύκλωμα που υλοποιεί τις παραπάνω σχέσεις είναι:
ή χρησιμοποιώντας το συμβολικό κύκλωμα του ημιαθροιστή:
Η άθροιση αριθμών με περισσότερα του ενός δυαδικά ψηφία γίνεται με το κύκλωμα του παράλληλου αθροιστή ως εξής:
Σπινθήρες
Οι πραγματικές ηλεκτρονικές πύλες απαιτούν κάποιο χρόνο για τη λειτουργία τους.
Δηλαδή παρουσιάζουν καθυστέρηση (delay) της τάξης των λίγων μs.
Οι καθυστερήσεις αυτές δημιουργούν καταστάσεις εξόδου, όπως είναι οι σπινθήρες (hazards), που είναι πολλές φορές ανεπιθύμητες.
Για παράδειγμα στο κύκλωμα:
η έξοδος του, στην ιδανική περίπτωση, θα πρέπει να είναι ίση με μηδέν ανεξάρτητα από την τιμή της εισόδου.
Στην πραγματικότητα η έξοδος είναι όπως φαίνεται στο σχήμα:
Δηλαδή παρατηρείται ότι η έξοδος παίρνει την τιμή 1 κατά το χρονικό διάστημα της καθυστέρησης (hazard).
Υπάρχουν τρεις τρόποι περιορισμού των σπινθηρισμών:
• Αναμονή μέχρι ωσότου να εμφανιστεί η σωστή έξοδος.
Η μέθοδος αυτή δεν συνίσταται κυρίως για ψηφιακά συνδυαστικά κυκλώματα που χρησιμοποιούνται ως οδηγοί ακολουθιακών κυκλωμάτων.
• Εξισορρόπηση της καθυστέρησης χρησιμοποιώντας διατάξεις πυλών όπως:
Κυκλώματα ακολουθιακής λογικής
Γενικές μορφές κυκλωμάτων
Τα ακολουθιακά κυκλώματα «θυμούνται» μέσω της σύνδεσης της ανάδρασης.
Δύο είναι οι κύριες κατηγορίες των ακολουθιακών κυκλωμάτων:
Ασύγχρονα: Αλλάζουν κατάσταση σύμφωνα με τις αλλαγές των εισόδων τους.
Απαιτούνται ειδικές τεχνικές σχεδιασμού.
Σύγχρονα: Τα σήματα ανάδρασης διακόπτονται από καταχωρητές που σκανδαλίζονται από παλμούς ρολογιού.
Συνεπώς η κατάστασή του κυκλώματος αλλάζει σύμφωνα με τους παλμούς του ρολογιού.
Η κατάσταση του κυκλώματος ορίζεται από το περιεχόμενο των στοιχείων της μνήμης.
Τα flip-flops διαθέτουν δύο σταθερές καταστάσεις (1 και 0), και παρέχουν μνήμη που αποθηκεύει πληροφορία ενός (1) bit.
Υπάρχουν διάφοροι τύποι flip-flops, οι οποίοι ταξινομούνται σύμφωνα με τον τρόπο λειτουργίας τους.
Τα flip-flops αποτελούν τα βασικά δομικά στοιχεία για το σχεδιασμό των ακολουθιακών κυκλωμάτων.
Για την υλοποίηση του SR-ff δημιουργούνται ο εκτεταμένος πίνακας αληθείας και οι πίνακες Karnaugh, όπου το Qn (παρούσα κατάσταση εξόδου) χρησιμοποιείται ως μεταβλητή εισόδου:
Το κύκλωμα που υλοποιεί την παραπάνω σχέση είναι:
Χρησιμοποιώντας το θεώρημα De Morgan, η σχέση για σχεδιασμό με πύλες NAND έχει ως εξής:
Flιp – Flop τύπου D
Υλοποίηση σύγχρονων flip-flops με όρους SR-ff
Να γίνει η υλοποίηση ενός T-ff σε όρους ενός SR-ff
Κατ΄ αρχήν δημιουργείται ένας πίνακας συσχέτισης των εισόδων ενός T-ff ( CLK, T, Qn ) και των αντίστοιχων εισόδων του SR-ff που έχουν το ίδιο αποτέλεσμα στην κατάσταση Qn+1
Κατόπιν εξάγονται οι εξισώσεις των S, R με όρους Ck, T και Qn χρησιμοποιώντας τους πίνακες – Κ
Τελικό κύκλωμα:
Σημείωση: Επειδή ουσιαστικά μας ενδιαφέρουν μόνο οι περιπτώσεις που το CLK=1, μπορεί να αγνοηθεί η παράμετρος CLK, ώστε να προκύπτουν πιο απλοί πίνακες
Προβλήματα που σχετίζονται με απλά σύγχρονα ff
Αναπήδηση εισόδου
Κακή λειτουργία κυκλωμάτων που χρησιμοποιούν διαδοχικά ff
Εφαρμογές ff
Τυπικές εφαρμογές των ffs είναι:
Απλοί καταχωρητές
Κυκλώματα καταχωρητών ολίσθησης
Μετρητές
Ο παραπάνω καταχωρητής είναι γνωστός και ως καταχωρητής SISO (Serial In Serial Out). Εάν σ΄ ένα SISO καταχωρητή το Q1 είναι το πιο σημαντικό ψηφίο και το Q4 το πιο χαμηλής σημαντικότητας ψηφίο (MSB και LSB αντίστοιχα), τότε η μετατόπιση γίνεται προς τα δεξιά.
Στην αντίθετη περίπτωση, δηλαδή το Q4 → MSB και το Q1 → LSB, τότε η μετατόπιση γίνεται προς τα αριστερά.
Σημείωση: Κάθε είσοδος 0 στον καταχωρητή μετατόπισης έχει ως αποτέλεσμα
• Τη διαίρεση με το 2 εάν είναι ο καταχωρητής μετατόπισης προς τα δεξιά και
• τον πολλαπλασιασμό με το 2 εάν είναι καταχωρητής μετατόπισης προς τα αριστερά
Κυκλώματα μετρητών
Ασύγχρονοι μετρητές
Σημείωση : Στους ασύγχρονους μετρητές μόνο το LSD ff δέχεται παλμό από το εξωτερικό ρολόϊ, ενώ όλα τα υπόλοιπα ff’s στην αλυσίδα σκανδαλίζονται από την έξοδο του ff της προηγούμενης βαθμίδας.
Σύγχρονοι μετρητές
Το κύκλωμα θα λειτουργεί ως ένας (up-counter) εάν οι καταστάσεις Α Β C D ληφθούν απο τα QA QB QC QD αντίστοιχα, και ως ένας (Down Counter) εάν οι καταστάσεις A B C D ληφθούν απο τα
Τροποποίηση του βασικού σύγχρονου μετρητή για τη δημιουργία ενός MOD-M μετρητή
Να τροποποιηθεί το κύκλωμα του πλήρους σύγχρονου μετρητή, ώστε να παράγει μια περιορισμένη ακολουθία καταστάσεων μεταξύ της S7 και S13
Για να έχουμε στην είσοδο του Τ στο 1 χρησιμοποιούμε το κύκλωμα
Εισαγωγή στο σχεδιασμό ψηφιακών κυκλωμάτων με διαγράμματα καταστάσεων
Διαγράμματα καταστάσεων
Πρόβλημα
Να σχεδιαστεί ένα ακολουθιακό κύκλωμα που ανιχνεύει την ακολουθία 1 0 1 από ένα σύνολο δυαδικών στοιχείων που εισάγονται σειριακά με ρυθμό 1 bit ανά παλμό ρολογιού (Να χρησιμοποιηθούν JΚ-ffs)
Προβλήματα από καταστάσεις που δεν χρησιμοποιούνται
Περιλαμβάνονται στο διάγραμμα καταστάσεων και οι καταστάσεις που δεν χρησιμοποιούνται, σε μια λογική επαναφοράς στην αρχική κατάσταση (Reset circuitry). Δηλαδή κατασκευάζεται ένα διάγραμμα καταστάσεων το οποίο δεν επιτρέπει την εμφάνιση
καταστάσεων ‘παγίδα’, ή εάν υπάρξουν, η εμφάνιση τους να έγινε πριν την έναρξη του ρολογιού.
