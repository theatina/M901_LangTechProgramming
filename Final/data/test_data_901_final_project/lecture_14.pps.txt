Προγραμματισμός II
Να περιγραφεί αναλυτικά η λειτουργία του ακόλουθου προγράμματος, να απεικονισθούν οι θέσεις μνήμης που αυτό καταλαμβάνει και να δοθούν τα αποτελέσματα της εκτέλεσής του:
Να περιγραφεί αναλυτικά η λειτουργία των ακόλουθων προγραμμάτων και να δοθούν τα αποτελέσματα της εκτέλεσής τους:
αποτελέσματα
α) Να δημιουργηθεί ο τύπος δεδομένου δομής triangle, που θα αποτελείται από τις πραγματικές μεταβλητές base, height.
β) Να γραφούν οι ακόλουθες συναρτήσεις :
i) void get_triangle(triangle *c), η οποία θα λαμβάνει από το πληκτρολόγιο τιμές και θα τις αποδίδει στη μεταβλητή που δείχνει η τυπική παράμετρος της συνάρτησης.
Ακολούθως θα τυπώνει τα περιεχόμενα της μεταβλητής στην οθόνη.
ii) float triangle_area(triangle *c), η οποία θα επιστρέφει στην καλούσα συνάρτηση το εμβαδόν του τριγώνου που περιγράφεται από τη μεταβλητή στην οποία δείχνει η τυπική παράμετρος της συνάρτησης.
γ) Να γραφεί ο κώδικας της main(), μέσα στην οποία θα δημιουργείται η μεταβλητή τύπου triangle με όνομα tr, θα καλούνται διαδοχικά οι δύο συναρτήσεις με πραγματική παράμετρο τη διεύθυνση της tr και θα αποδίδεται στη μεταβλητή area το εμβαδό που θα προκύψει από την συνάρτηση triangle_area().
δ) Να απεικονισθεί το περιεχόμενο των θέσεων μνήμης που καταλαμβάνουν οι μεταβλητές τού κώδικα που αναπτύσσεται στα ερωτήματα (α)-(γ). Χάριν απλότητας να θεωρηθεί ότι οι μεταβλητές καταλαμβάνουν διαδοχικές θέσεις μνήμης.
λύση
Να γραφεί πρόγραμμα, το οποίο, με χρήση της εντολής fread, θα διαβάζει ακεραίους από ένα υπάρχον δυαδικό αρχείο file_b.dat έως ότου φθάσει στο τέλος του αρχείου, και θα τους αποθηκεύει σε χώρο αποθήκευσης 10 θέσεων που θα χειρίζεται ο int *buf. Στο τέλος της ανάγνωσης ενός μπλοκ δεδομένων θα καλείται η συνάρτηση int find_max(int cnt, int *buffer), η οποία θα υπολογίζει το μέγιστο ακέραιο σε αυτό το μπλοκ και θα επιστρέφει την τιμή του στη main.
Η παράμετρος cnt θα δέχεται τον αριθμό των αναγνωσθέντων ακεραίων και η παράμετρος buffer θα «δείχνει» όπου δείχνει ο buf.
Το πρόγραμμα θα τελειώνει με την εμφάνιση στην οθόνη του μέγιστου ακεραίου μέσα στο αρχείο και το μπλοκ στο οποίο βρέθηκε.
Σημειώνεται ότι ο δείκτης σε ακέραιο buf υποδηλώνει δυναμική δέσμευση/αποδέσμευση μνήμης για 10 θέσεις ακεραίων.
Για παράδειγμα, εάν το αρχείο περιέχει 45 ακεραίους με μέγιστο ακέραιο το 12832 στη 32η θέση, με χώρο αποθήκευσης 10 θέσεων θα απαιτηθούν 5 κύκλοι ανάγνωσης και ο μέγιστος ακέραιος βρίσκεται στο 4ο μπλοκ.
Οι αριθμοί που τοποθετήθηκαν στο αρχείο είναι οι ακόλουθοι (με διαφορετικό χρώμα αποτυπώνεται κάθε μπλοκ δεδομένων):
Θέση Τιμή Θέση Τιμή Θέση Τιμή
Να περιγραφεί αναλυτικά η λειτουργία του ακόλουθου προγράμματος και να δοθούν τα αποτελέσματά του.
Να περιγραφεί αναλυτικά η λειτουργία του ακόλουθου προγράμματος, να δοθούν τα αποτελέσματά του και να απεικονισθεί ο χάρτης μνήμης.
Να καταστρωθεί πρόγραμμα, το οποίο θα διαβάζει δύο αλφαριθμητικά από το πληκτρολόγιο και θα τα μεταβιβάζει στη συνάρτηση str_index(char *s, char *t). Οι δείκτες σε χαρακτήρα θα χειρίζονται τα δύο αλφαριθμητικά.
Ακολούθως, μέσω του κώδικα της συνάρτησης θα υπολογίζεται η θέση της δεξιότερης εμφάνισης του αλφαριθμητικού t μέσα στο s, η οποία και θα επιστρέφει στη main.
Εάν το t δεν υπάρχει μέσα στο s, θα επιστρέφεται το 0.
Στη main θα εμφανίζεται κατάλληλο μήνυμα για τη θέση στην οποία εμφανίζεται το t ή για τη μη εμφάνισή του.
Για την ορθή λειτουργία της συνάρτησης str_index απαιτείται χρήση της συνάρτησης strstr, η οποία ορίζεται στο αρχείο κεφαλίδας string.h. Για παράδειγμα, εάν στο s αποδοθεί το αλφαριθμητικό “piriminimikirhimi” και στο t το αλφαριθμητικό “mi”, θα πρέπει η συνάρτηση str_index να επιστρέψει ως τιμή το 16, καθώς η δεξιότερη εμφάνιση του “mi” γίνεται στην 16η και 17η θέση του s.
Να περιγραφεί αναλυτικά η λειτουργία των ακόλουθων προγραμμάτων και να δοθούν τα αποτελέσματά τους.
α) #include <stdio.h>
β) #include <stdio.h>
Να γραφεί πρόγραμμα, το οποίο θα υλοποιεί τον τύπο του Euler για τον προσεγγιστικό υπολογισμό του π.
To πρόγραμμα θα δέχεται από το πληκτρολόγιο ένα φυσικό αριθμό k και θα καλεί την αναδρομική συνάρτηση double find_sum(int k). Η συνάρτηση θα δέχεται
ως είσοδο το k και θα επιστρέφει στη main το άθροισμα .
Ακολούθως μέσα στη main θα επιτελείται η πράξη , η οποία οδηγεί στην προσεγγιστική τιμή του π.
Για k έως 40000 λειτουργεί η αναδρομική συνάρτηση.
Μετά δίνει stack overflow λόγω του μεγάλου αριθμού των αναδρομών.
